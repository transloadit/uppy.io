"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[4864],{56447:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>u});var a=n(74848),s=n(28453),r=n(11470),o=n(19365);const i={slug:"/react"},l="React",c={id:"framework-integrations/react",title:"React",description:"React components for the Uppy UI plugins and hooks.",source:"@site/docs/framework-integrations/react.mdx",sourceDirName:"framework-integrations",slug:"/react",permalink:"/docs/react",draft:!1,unlisted:!1,editUrl:"https://github.com/transloadit/uppy/blob/main/docs/framework-integrations/react.mdx",tags:[],version:"current",frontMatter:{slug:"/react"},sidebar:"tutorialSidebar",previous:{title:"Angular",permalink:"/docs/angular"},next:{title:"Svelte",permalink:"/docs/svelte"}},p={},u=[{value:"Install",id:"install",level:2},{value:"Use",id:"use",level:2},{value:"Components",id:"components",level:3},{value:"Hooks",id:"hooks",level:3},{value:"<code>useUppyState(uppy, selector)</code>",id:"useuppystateuppy-selector",level:4},{value:"<code>useUppyEvent(uppy, event, callback)</code>",id:"useuppyeventuppy-event-callback",level:4},{value:"Examples",id:"examples",level:2},{value:"Example: basic component",id:"example-basic-component",level:3},{value:"Example: keep Uppy state and uploads while navigating between pages",id:"example-keep-uppy-state-and-uploads-while-navigating-between-pages",level:3},{value:"Example: updating Uppy\u2019s options dynamically based on props",id:"example-updating-uppys-options-dynamically-based-on-props",level:3},{value:"Example: dynamic params and signature for Transloadit",id:"example-dynamic-params-and-signature-for-transloadit",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"react",children:"React"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://facebook.github.io/react",children:"React"})," components for the Uppy UI plugins and hooks."]}),"\n",(0,a.jsx)(t.h2,{id:"install",children:"Install"}),"\n",(0,a.jsxs)(r.A,{children:[(0,a.jsx)(o.A,{value:"npm",label:"NPM",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"npm install @uppy/react\n"})})}),(0,a.jsx)(o.A,{value:"yarn",label:"Yarn",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"yarn add @uppy/react\n"})})})]}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["You also need to install the UI plugin you want to use. For instance,\n",(0,a.jsx)(t.code,{children:"@uppy/dashboard"}),"."]})}),"\n",(0,a.jsx)(t.h2,{id:"use",children:"Use"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"@uppy/react"})," exposes component wrappers for ",(0,a.jsx)(t.code,{children:"Dashboard"}),", ",(0,a.jsx)(t.code,{children:"DragDrop"}),", and all\nother UI elements. The components can be used with either ",(0,a.jsx)(t.a,{href:"https://facebook.github.io/react",children:"React"})," or\nAPI-compatible alternatives such as ",(0,a.jsx)(t.a,{href:"https://preactjs.com/",children:"Preact"}),"."]}),"\n",(0,a.jsx)(t.admonition,{type:"caution",children:(0,a.jsxs)(t.p,{children:["If you find yourself writing many instances of ",(0,a.jsx)(t.code,{children:"useState"})," and ",(0,a.jsx)(t.code,{children:"useEffect"})," to\nachieve something with Uppy in React, you are most likely breaking React best\npractices. Consider reading\n\u201c",(0,a.jsx)(t.a,{href:"https://react.dev/learn/you-might-not-need-an-effect",children:"You Might Not Need an Effect"}),"\u201d\nand looking at our examples below."]})}),"\n",(0,a.jsx)(t.h3,{id:"components",children:"Components"}),"\n",(0,a.jsxs)(t.p,{children:["The following components are exported from ",(0,a.jsx)(t.code,{children:"@uppy/react"}),":"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"<Dashboard />"})," renders ",(0,a.jsx)(t.a,{href:"/docs/dashboard",children:(0,a.jsx)(t.code,{children:"@uppy/dashboard"})})]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"<DashboardModal />"})," renders ",(0,a.jsx)(t.a,{href:"/docs/dashboard",children:(0,a.jsx)(t.code,{children:"@uppy/dashboard"})})," as a modal"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"<DragDrop />"})," renders ",(0,a.jsx)(t.a,{href:"/docs/drag-drop",children:(0,a.jsx)(t.code,{children:"@uppy/drag-drop"})})]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"<ProgressBar />"})," renders ",(0,a.jsx)(t.a,{href:"/docs/progress-bar",children:(0,a.jsx)(t.code,{children:"@uppy/progress-bar"})})]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"<StatusBar />"})," renders ",(0,a.jsx)(t.a,{href:"/docs/status-bar",children:(0,a.jsx)(t.code,{children:"@uppy/status-bar"})})]}),"\n"]}),"\n",(0,a.jsx)(t.h3,{id:"hooks",children:"Hooks"}),"\n",(0,a.jsx)(t.h4,{id:"useuppystateuppy-selector",children:(0,a.jsx)(t.code,{children:"useUppyState(uppy, selector)"})}),"\n",(0,a.jsx)(t.p,{children:"Use this hook when you need to access Uppy\u2019s state reactively. Most of the\ntimes, this is needed if you are building a custom UI for Uppy in React."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"// IMPORTANT: passing an initializer function to prevent Uppy from being reinstantiated on every render.\nconst [uppy] = useState(() => new Uppy());\n\nconst files = useUppyState(uppy, (state) => state.files);\nconst totalProgress = useUppyState(uppy, (state) => state.totalProgress);\n// We can also get specific plugin state.\n// Note that the value on `plugins` depends on the `id` of the plugin.\nconst metaFields = useUppyState(\n\tuppy,\n\t(state) => state.plugins?.Dashboard?.metaFields,\n);\n"})}),"\n",(0,a.jsxs)(t.p,{children:["You can see all the values you can access on the\n",(0,a.jsx)(t.a,{href:"https://github.com/transloadit/uppy/blob/c45407d099d87e25cecaf03c5d9ce59c582ca0dc/packages/%40uppy/core/src/Uppy.ts#L155-L181",children:(0,a.jsx)(t.code,{children:"State"})}),"\ntype. If you are accessing plugin state, you would have to look at the types of\nthe plugin."]}),"\n",(0,a.jsx)(t.h4,{id:"useuppyeventuppy-event-callback",children:(0,a.jsx)(t.code,{children:"useUppyEvent(uppy, event, callback)"})}),"\n",(0,a.jsx)(t.p,{children:"Listen to Uppy events in a React component."}),"\n",(0,a.jsx)(t.p,{children:"The first item in the array is an array of results from the event. Depending on\nthe event, that can be empty or have up to three values. The second item is a\nfunction to clear the results. Values remain in state until the next event (if\nthat ever comes). Depending on your use case, you may want to keep the values in\nstate or clear the state after something else happenend."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ts",children:"// IMPORTANT: passing an initializer function to prevent Uppy from being reinstantiated on every render.\nconst [uppy] = useState(() => new Uppy());\n\nconst [results, clearResults] = useUppyEvent(uppy, 'transloadit:result');\nconst [stepName, result, assembly] = results; // strongly typed\n\nuseUppyEvent(uppy, 'cancel-all', clearResults);\n"})}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(t.h3,{id:"example-basic-component",children:"Example: basic component"}),"\n",(0,a.jsx)(t.p,{children:"Here we have a basic component which ties Uppy\u2019s state to the component. This\nmeans you can render multiple instances. But be aware that as your component\nunmounts, for instance because the user navigates to a different page, Uppy\u2019s\nstate will be lost and uploads will stop."}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["If you render multiple instances of Uppy, make sure to give each instance a\nunique ",(0,a.jsx)(t.code,{children:"id"}),"."]})}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"import React, { useEffect, useState } from 'react';\nimport Uppy from '@uppy/core';\nimport Webcam from '@uppy/webcam';\nimport { Dashboard } from '@uppy/react';\n\nimport '@uppy/core/dist/style.min.css';\nimport '@uppy/dashboard/dist/style.min.css';\nimport '@uppy/webcam/dist/style.min.css';\n\nfunction Component() {\n\t// IMPORTANT: passing an initializer function to prevent Uppy from being reinstantiated on every render.\n\tconst [uppy] = useState(() => new Uppy().use(Webcam));\n\n\treturn <Dashboard uppy={uppy} />;\n}\n"})}),"\n",(0,a.jsx)(t.h3,{id:"example-keep-uppy-state-and-uploads-while-navigating-between-pages",children:"Example: keep Uppy state and uploads while navigating between pages"}),"\n",(0,a.jsxs)(t.p,{children:["When you want Uppy\u2019s state to persist and keep uploads running between pages,\nyou can\n",(0,a.jsx)(t.a,{href:"https://react.dev/learn/sharing-state-between-components#lifting-state-up-by-example",children:"lift the state up"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"import React, { useState, useEffect } from 'react';\nimport Uppy from '@uppy/core';\nimport { Dashboard } from '@uppy/react';\n\nfunction Page1() {\n\t// ...\n}\n\nfunction Page2({ uppy }) {\n\treturn (\n\t\t<>\n\t\t\t<p>{totalProgress}</p>\n\t\t\t<Dashboard id=\"dashboard\" uppy={uppy} />\n\t\t</>\n\t);\n}\n\nexport default function App() {\n\t// keeping the uppy instance alive above the pages the user can switch during uploading\n\tconst [uppy] = useState(() => new Uppy());\n\n\treturn (\n\t\t// Add your router here\n\t\t<>\n\t\t\t<Page1 />\n\t\t\t<Page2 uppy={uppy} />\n\t\t</>\n\t);\n}\n"})}),"\n",(0,a.jsx)(t.h3,{id:"example-updating-uppys-options-dynamically-based-on-props",children:"Example: updating Uppy\u2019s options dynamically based on props"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"// ...\nfunction Component(props) {\n\t// IMPORTANT: passing an initializer function to prevent the state from recreating.\n\tconst [uppy] = useState(() => new Uppy().use(Webcam));\n\n\tuseEffect(() => {\n\t\tuppy.setOptions({ restrictions: props.restrictions });\n\t}, [props.restrictions]);\n\n\tuseEffect(() => {\n\t\tuppy.getPlugin('Webcam').setOptions({ modes: props.webcamModes });\n\t}, [props.webcamModes]);\n\n\treturn <Dashboard uppy={uppy} />;\n}\n"})}),"\n",(0,a.jsx)(t.h3,{id:"example-dynamic-params-and-signature-for-transloadit",children:"Example: dynamic params and signature for Transloadit"}),"\n",(0,a.jsxs)(t.p,{children:["When you go to production always make sure to set the ",(0,a.jsx)(t.code,{children:"signature"}),". ",(0,a.jsxs)(t.strong,{children:["Not using\n",(0,a.jsx)(t.a,{href:"https://transloadit.com/docs/topics/signature-authentication/",children:"Signature Authentication"}),"\ncan be a security risk"]}),". Signature Authentication is a security measure that\ncan prevent outsiders from tampering with your Assembly Instructions."]}),"\n",(0,a.jsxs)(t.p,{children:["Generating a signature should be done on the server to avoid leaking secrets. In\nReact, this could get awkward with a ",(0,a.jsx)(t.code,{children:"fetch"})," in a ",(0,a.jsx)(t.code,{children:"useEffect"})," and setting it to\n",(0,a.jsx)(t.code,{children:"useState"}),". Instead, it\u2019s easier to use the\n",(0,a.jsx)(t.a,{href:"/docs/transloadit#assemblyoptions",children:(0,a.jsx)(t.code,{children:"assemblyOptions"})})," option to ",(0,a.jsx)(t.code,{children:"fetch"})," the\nparams."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"// ...\nfunction createUppy(userId) {\n\treturn new Uppy({ meta: { userId } }).use(Transloadit, {\n\t\tasync assemblyOptions(file) {\n\t\t\t// You can send meta data along for use in your template.\n\t\t\t// https://transloadit.com/docs/topics/assembly-instructions/#form-fields-in-instructions\n\t\t\tconst body = JSON.stringify({ userId: file.meta.userId });\n\t\t\tconst res = await fetch('/transloadit-params', { method: 'POST', body });\n\t\t\treturn response.json();\n\t\t},\n\t});\n}\n\nfunction Component({ userId }) {\n\t// IMPORTANT: passing an initializer function to prevent Uppy from being reinstantiated on every render.\n\tconst [uppy] = useState(() => createUppy(userId));\n\n\tuseEffect(() => {\n\t\tif (userId) {\n\t\t\t// Adding to global `meta` will add it to every file.\n\t\t\tuppy.setOptions({ meta: { userId } });\n\t\t}\n\t}, [uppy, userId]);\n}\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},19365:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);var a=n(18215);const s={tabItem:"tabItem_Ymn6"};var r=n(74848);function o(e){let{children:t,hidden:n,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(s.tabItem,o),hidden:n,children:t})}},11470:(e,t,n)=>{n.d(t,{A:()=>w});var a=n(96540),s=n(18215),r=n(23104),o=n(56347),i=n(205),l=n(57485),c=n(31682),p=n(70679);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:s}}=e;return{value:t,label:n,attributes:a,default:s}}))}(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const s=(0,o.W6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(s.location.search);t.set(r,e),s.replace({...s.location,search:t.toString()})}),[r,s])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,r=d(e),[o,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[c,u]=m({queryString:n,groupId:s}),[y,f]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,r]=(0,p.Dv)(n);return[s,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:s}),g=(()=>{const e=c??y;return h({value:e,tabValues:r})?e:null})();(0,i.A)((()=>{g&&l(g)}),[g]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var f=n(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(74848);function x(e){let{className:t,block:n,selectedValue:a,selectValue:o,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),p=e=>{const t=e.currentTarget,n=l.indexOf(t),s=i[n].value;s!==a&&(c(t),o(s))},u=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},t),children:i.map((e=>{let{value:t,label:n,attributes:r}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>l.push(e),onKeyDown:u,onClick:p,...r,className:(0,s.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function v(e){let{lazy:t,children:n,selectedValue:s}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==s})))})}function j(e){const t=y(e);return(0,b.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,b.jsx)(x,{...t,...e}),(0,b.jsx)(v,{...t,...e})]})}function w(e){const t=(0,f.A)();return(0,b.jsx)(j,{...e,children:u(e.children)},String(t))}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>i});var a=n(96540);const s={},r=a.createContext(s);function o(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);