"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[8749],{91895:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"uppy-4.0","metadata":{"permalink":"/blog/uppy-4.0","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2024-07-10-uppy-4.0.md","source":"@site/blog/2024-07-10-uppy-4.0.md","title":"New Uppy 4.0 major: TypeScript rewrite, Google Photos, React hooks, and much more","description":"Hold on to your leashes, folks! Uppy 4.0 is here, and it\u2019s more exciting than a","date":"2024-07-10T00:00:00.000Z","tags":[],"readingTime":10.84,"hasTruncateMarker":true,"authors":[{"email":"antoine@transloadit.com","name":"Antoine du Hamel","id":"aduh95","tagline":"Developer","imageURL":"https://github.com/aduh95.png","key":"aduh95"},{"email":"lakesare@gmail.com","name":"Evgenia Karunus","id":"evgenia","tagline":"Developer","imageURL":"https://github.com/lakesare.png","key":"evgenia"},{"email":"mikael@transloadit.com","name":"Mikael Finstad","id":"mikael","tagline":"Developer","imageURL":"https://github.com/mifi.png","key":"mifi"},{"email":"merlijn@transloadit.com","name":"Merlijn Vos","id":"merlijn","tagline":"Developer","imageURL":"https://github.com/murderlon.png","key":"murderlon"}],"frontMatter":{"title":"New Uppy 4.0 major: TypeScript rewrite, Google Photos, React hooks, and much more","date":"2024-07-10T00:00:00.000Z","authors":["aduh95","evgenia","mifi","murderlon"],"image":"/img/blog/4.0/preview.jpg","slug":"uppy-4.0","published":true,"toc_max_heading_level":2},"unlisted":false,"nextItem":{"title":"\ud83c\udf84 Uppy 3.13 to 3.21: Typescript Saga: the beginning, Image Editor improvements, Dashboard auto-install","permalink":"/blog/2023/07/3.13-3.21"}},"content":"<img src=\\"/img/blog/4.0/preview.jpg\\" alt=\\"Screenshot of Uppy Dashboard with text outlining the major new features in 4.0\\" />\\n\\nHold on to your leashes, folks! Uppy 4.0 is here, and it\u2019s more exciting than a\\ntennis ball at the dog park! Our beloved Uppy mascot, the adorable coding\\ncanine, has been hard at work fetching all the latest updates for you.\\n\\nFrom a full TypeScript makeover to shiny new React hooks, and even Google Photos\\nintegration \u2013 this release is so packed with treats that we\u2019re almost wagging\\nour tails in excitement. Without further a-dog, let\u2019s dig into what makes Uppy\\n4.0 the goodest of good boys in file uploading!\\n\\n\x3c!--truncate--\x3e\\n\\n<a href=\\"https://www.producthunt.com/posts/uppy-4-0?embed=true&utm_source=badge-featured&utm_medium=badge&utm_souce=badge-uppy&#0045;4&#0045;0\\" target=\\"_blank\\"><img src=\\"https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=473003&theme=light\\" alt=\\"Uppy&#0032;4&#0046;0 - TypeScript&#0032;rewrite&#0044;&#0032;Google&#0032;Photos&#0044;&#0032;and&#0032;much&#0032;more | Product Hunt\\" style=\\"width: 250px; height: 54px;\\" width=\\"250\\" height=\\"54\\" /></a>\\n\\n## Migration guide\\n\\nThis post covers the most exciting new features of Uppy 4.0. We have an\\naccompanying [migration guide](/docs/guides/migration-guides/) to help you\\ntransition to 4.0.\\n\\n## TypeScript rewrite\\n\\nIn the year 2024, people expect excellent types from their libraries. We used to\\nauthor types separately by hand, but they were often inconsistent or incomplete.\\nAs of now, Uppy has been completely rewritten in TypeScript!\\n\\nFrom now on you\u2019ll be in safe hands when working with Uppy, whether it\u2019s setting\\nthe right options, building plugins, or listening to events.\\n\\n```ts\\nimport Uppy from \'@uppy/core\';\\n\\nconst uppy = new Uppy();\\n\\n// Event name autocompletion and inferred argument types\\nuppy.on(\'file-added\', (file) => {\\n\\tconsole.log(file);\\n});\\n```\\n\\nOne important thing to note is the new generics on `@uppy/core`.\\n\\n\x3c!-- eslint-disable @typescript-eslint/no-non-null-assertion --\x3e\\n\\n```ts\\nimport Uppy from \'@uppy/core\';\\n// xhr-upload is for uploading to your own back end.\\nimport XHRUpload from \'@uppy/xhr-upload\';\\n\\n// Your own metadata on files\\ntype Meta = { myCustomMetadata: string };\\n// The response from your server\\ntype Body = { someThingMyBackendReturns: string };\\n\\nconst uppy = new Uppy<Meta, Body>().use(XHRUpload, {\\n\\tendpoint: \'/upload\',\\n});\\n\\nconst id = uppy.addFile({\\n\\tname: \'example.jpg\',\\n\\tdata: new Blob(),\\n\\tmeta: { myCustomMetadata: \'foo\' },\\n});\\n\\n// This is now typed\\nconst { myCustomMetadata } = uppy.getFile(id).meta;\\n\\nawait uppy.upload();\\n\\n// This is strictly typed too\\nconst { someThingMyBackendReturns } = uppy.getFile(id).response.body!;\\n```\\n\\nHappy inferring!\\n\\n## Merging the two AWS S3 plugins\\n\\nWe used to have two separate plugins for uploading to S3 and S3-compatible\\nservices: `@uppy/aws-s3` and `@uppy/aws-s3-multpart`. They have different use\\ncases. The advantages of multipart uploads are:\\n\\n- Improved throughput \u2013 You can upload parts in parallel to improve throughput.\\n- Quick recovery from any network issues \u2013 Smaller part size minimizes the\\n  impact of restarting a failed upload due to a network error.\\n- Pause and resume object uploads \u2013 You can upload object parts over time. After\\n  you initiate a multipart upload, there is no expiry; you must explicitly\\n  complete or stop the multipart upload.\\n- Begin an upload before you know the final object size \u2013 You can upload an\\n  object as you are creating it.\\n\\nHowever, the downside is request overhead, as it needs to do creation, signing,\\nand completion requests besides the upload requests. For example, if you are\\nuploading files that are only a couple kilobytes with a 100ms roundtrip latency,\\nyou are spending 400ms on overhead and only a few milliseconds on uploading.\\nThis really adds up if you upload a lot of small files.\\n\\nAWS \u2013 and the internet in general, from what we found \u2013 tends to agree that\\n**you don\u2019t want to use multipart uploads for files under 100 MB**. This\\nsometimes puts users of our libraries in an awkward position, though, as their\\nend users may not exclusively upload very large files, or only small files. In\\nthis case, a portion of their users get a subpar experience.\\n\\n---\\n\\nWe\u2019ve merged the two plugins into `@uppy/aws-s3` with a new\\n[`shouldUseMultipart`](/docs/aws-s3/#shouldusemultipartfile) option! By default,\\nit switches to multipart uploads if the file is larger than 100 MB. You can pass\\na `boolean` or a function to determine this per file.\\n\\n## React hooks\\n\\nPeople working with React are more likely to create their own user interface on\\ntop of Uppy than those working with \u201cvanilla\u201d setups. Working with our pre-built\\nUI components is a plug-and-play experience, but building on top of Uppy\u2019s state\\nwith React primitives has been tedious.\\n\\nTo address this, we\u2019re introducing two new hooks: `useUppyState` and\\n`useUppyEvent`. Thanks to the TypeScript rewrite, we can now do powerful\\ninference in hooks as well.\\n\\n### `useUppyState(uppy, selector)`\\n\\nUse this hook when you need to read Uppy\u2019s state.\\n\\n```ts\\nimport { useState } from \'react\';\\nimport Uppy from \'@uppy/core\';\\nimport { useUppyState } from \'@uppy/react\';\\n\\n// IMPORTANT: passing an initializer function\\n// to prevent Uppy from being recreated on every render.\\nconst [uppy] = useState(() => new Uppy());\\n\\nconst files = useUppyState(uppy, (state) => state.files);\\nconst totalProgress = useUppyState(uppy, (state) => state.totalProgress);\\n// We can also get a specific plugin state.\\n// Note that the value on `plugins` depends on the `id` of the plugin.\\nconst metaFields = useUppyState(\\n\\tuppy,\\n\\t(state) => state.plugins?.Dashboard?.metaFields,\\n);\\n```\\n\\nYou can see all the values you can access on the\\n[`State`](https://github.com/transloadit/uppy/blob/dab8082a4e67c3e7f109eacfbd6c3185f117dc60/packages/%40uppy/core/src/Uppy.ts#L156)\\ntype.\\n\\nUsing this hook, you can also access the state of any Uppy plugin. For example,\\nin order to access the state of `ImageEditor`, you would have to look at the\\ntypes of the plugin.\\n\\n```ts\\nimport type { State } from \'@uppy/core\';\\n```\\n\\n### `useUppyEvent(uppy, event, callback)`\\n\\nListen to Uppy [events](/docs/uppy/#events) in a React component.\\n\\nThe hook returns `[results, clear]`. `results` is an array of values from the\\nevent. Depending on the event, this can be empty or have up to three values.\\n`clear` is a function to clear the `results` array.\\n\\nValues remain in state until the next event (if that ever comes)\xa0or the moment\\nwhen the state is manually cleared. Depending on your use case, you may want to\\nkeep the values in state or clear the state after something else happened.\\n\\n```ts\\nimport { useState } from \'react\';\\nimport Uppy from \'@uppy/core\';\\nimport Transloadit from \'@uppy/transloadit\';\\nimport { useUppyEvent } from \'@uppy/react\';\\n\\n// IMPORTANT: passing an initializer function\\n// to prevent Uppy from being recreated on every render.\\nconst [uppy] = useState(() => new Uppy());\\n\\nconst [results, clearResults] = useUppyEvent(uppy, \'transloadit:result\');\\nconst [stepName, result, assembly] = results; // strongly typed\\n\\nuseUppyEvent(uppy, \'cancel-all\', () => {\\n\\t// Handle event here.\\n});\\n```\\n\\n## Google Photos\\n\\nAn often requested feature is finally here: Google Photos support!\\n\\n:::info\\n\\nUppy can bring in files from the cloud with [Companion](/docs/companion/).\\n\\nCompanion is a hosted, standalone, or middleware server that takes away the\\ncomplexity of authentication and the cost of downloading files from remote\\nsources, such as Instagram, Google Drive, and others.\\n\\nThis means a 5 GB video isn\u2019t eating into your users\u2019 data plans and you don\u2019t\\nhave to worry about OAuth.\\n\\n:::\\n\\n<video src=\\"/img/blog/4.0/google-photos.mp4\\" controls></video>\\n\\n[`@uppy/google-drive`](/docs/google-drive/) and\\n[`@uppy/google-photos`](/docs/google-photos/) are separate plugins. However, you\\ncan use the same OAuth app for both these plugins. Be sure to enable \u201cPhotos\\nLibrary API\u201d in your OAuth app, though!\\n\\n## UX improvements for viewing remote files\\n\\nWhen using [Dashboard](/docs/dashboard) with any of our remote sources (Google\\nDrive, Facebook, etc.) you use our internal `@uppy/provider-views` plugin to\\nnavigate the folders and select files. In Uppy 4.0, we are making a few quality\\nof life improvements for users. The main changes are described in the table\\nbelow.\\n\\n<table style=\\"text-align:left; font-size: 15px\\">\\n  <tbody>\\n    <tr>\\n      <td colspan=\\"2\\">\\n        <b style=\\"font-size: 17px;\\">Folder states: checked, unchecked, partial</b>\\n        <p style=\\"margin-bottom: 0;\\">In 4.0, we introduce a new folder state \u2013 a \\"partially checked\\" folder. A folder acquires this state when certain files within the folder are \\"checked\\", and other files are \\"unchecked\\".</p>\\n      </td>\\n    </tr>\\n    <tr>\\n      <th style=\\"padding-top: 0; padding-bottom: 0;\\">PREVIOUSLY</th>\\n      <th style=\\"padding-top: 0; padding-bottom: 0;\\">NOW</th>\\n    </tr>\\n    <tr>\\n      <td style=\\"width: 50%;\\"><video src=\\"/img/blog/4.0/partial-old.mp4\\" controls></video></td>\\n      <td style=\\"width: 50%;\\"><video src=\\"/img/blog/4.0/partial-new.mp4\\" controls></video></td>\\n    </tr>\\n    <tr>\\n      <td colspan=\\"2\\">\\n        <b style=\\"font-size: 17px;\\">Cache</b>\\n        <p style=\\"margin-bottom: 0;\\">When navigating in and out of folders, you no longer have to wait for the same API call \u2014 results are cached.</p>\\n      </td>\\n    </tr>\\n    <tr>\\n      <th style=\\"padding-top: 0; padding-bottom: 0;\\">PREVIOUSLY</th>\\n      <th style=\\"padding-top: 0; padding-bottom: 0;\\">NOW</th>\\n    </tr>\\n    <tr>\\n      <td style=\\"width: 50%;\\"><video src=\\"/img/blog/4.0/cache-old.mp4\\" controls></video></td>\\n      <td style=\\"width: 50%;\\"><video src=\\"/img/blog/4.0/cache-new.mp4\\" controls></video></td>\\n    </tr>\\n    <tr>\\n      <td colspan=\\"2\\">\\n        <b style=\\"font-size: 17px;\\">Restrictions</b>\\n        <p style=\\"margin-bottom: 0;\\">\\n          Uppy supports file <a href=\\"/docs/uppy/#restrictions\\">restrictions</a>, such as maximum number of files and maximum file size. In 4.0, we reworked our restrictions UI \u2013 users will get immediate feedback upon exceeding the number of selected files, and get a chance to re-enter the correct number of files after their first upload attempt.\\n        </p>\\n      </td>\\n    </tr>\\n    <tr>\\n      <th style=\\"padding-top: 0; padding-bottom: 0;\\">PREVIOUSLY</th>\\n      <th style=\\"padding-top: 0; padding-bottom: 0;\\">NOW</th>\\n    </tr>\\n    <tr>\\n      <td style=\\"width: 50%;\\"><video src=\\"/img/blog/4.0/restrictions-old.mp4\\" controls></video></td>\\n      <td style=\\"width: 50%;\\"><video src=\\"/img/blog/4.0/restrictions-new.mp4\\" controls></video></td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\nWe\u2019re confident this turns our interface for remote sources into the most\\nadvanced one out there. We\u2019ve seen some competing libraries not even aggregating\\nresults beyond the first page returned by the provider API.\\n\\n## Revamped options for `@uppy/xhr-upload`\\n\\nIn previous versions, the `@uppy/xhr-upload` plugin had the options\\n`getResponseData`, `getResponseError`, `validateStatus` and\\n`responseUrlFieldName`. These were inflexible and too specific. Now we have\\nhooks similar to `@uppy/tus`:\\n\\n- `onBeforeRequest` to manipulate the request before it is sent.\\n- `shouldRetry` to determine if a request should be retried. By default, three\\n  retries with exponential backoff. After three attempts it will throw an error,\\n  regardless of whether you returned `true`.\\n- `onAfterResponse` called after a successful response, but before Uppy resolves\\n  the upload.\\n\\nYou could, for instance, use them to refresh your auth token when it expires:\\n\\n```js\\nimport Uppy from \'@uppy/core\';\\nimport XHR from \'@uppy/xhr-upload\';\\n\\nlet token = null;\\n\\nasync function getAuthToken() {\\n\\tconst res = await fetch(\'/auth/token\');\\n\\tconst json = await res.json();\\n\\treturn json.token;\\n}\\n\\nnew Uppy().use(XHR, {\\n\\tendpoint: \'<your-endpoint>\',\\n\\t// Called again for every retry too.\\n\\tasync onBeforeRequest(xhr) {\\n\\t\\tif (!token) {\\n\\t\\t\\ttoken = await getAuthToken();\\n\\t\\t}\\n\\t\\txhr.setRequestHeader(\'Authorization\', `Bearer ${token}`);\\n\\t},\\n\\tasync onAfterResponse(xhr) {\\n\\t\\tif (xhr.status === 401) {\\n\\t\\t\\ttoken = await getAuthToken();\\n\\t\\t}\\n\\t},\\n});\\n```\\n\\nCheck out the `@uppy/xhr-upload` [docs](/docs/xhr-upload/) for more info.\\n\\n## Simpler configuration for `@uppy/transloadit`\\n\\nTo get started with `@uppy/transloadit`, you would configure\\n[`assemblyOptions`](/docs/transloadit/#assemblyoptions) with your auth key,\\ntemplate ID, and other optional values. `assemblyOptions` can be an object or a\\nfunction, which is called per file, which returns an object:\\n\\n```json\\n{\\n\\t\\"params\\": {\\n\\t\\t\\"auth\\": { \\"key\\": \\"key-from-transloadit\\" },\\n\\t\\t\\"template_id\\": \\"id-from-transloadit\\",\\n\\t\\t\\"steps\\": {\\n\\t\\t\\t// Overruling Template at runtime\\n\\t\\t},\\n\\t\\t\\"notify_url\\": \\"https://your-domain.com/assembly-status\\"\\n\\t},\\n\\t\\"signature\\": \\"generated-signature\\",\\n\\t\\"fields\\": {\\n\\t\\t// Dynamic or static fields to send along\\n\\t}\\n}\\n```\\n\\nWhen you go to production, you always want to make sure to set the `signature`.\\n**Not using\\n[Signature Authentication](https://transloadit.com/docs/topics/signature-authentication/)\\ncan be a security risk**. Signature Authentication is a security measure that\\ncan prevent outsiders from tampering with your Assembly Instructions.\\n\\nThis means the majority of implementers will write something like this, as\\nrecommended:\\n\\n```ts\\nimport Uppy from \'@uppy/core\';\\nimport Transloadit, { type AssemblyOptions } from \'@uppy/transloadit\';\\n\\nnew Uppy().use(Transloadit, {\\n\\tasync assemblyOptions(file) {\\n\\t\\tconst response = await fetch(\'/transloadit-params\');\\n\\t\\treturn response.json() as AssemblyOptions;\\n\\t},\\n});\\n```\\n\\nHowever, now you are making a request to your back end for _every file_, while\\nthe response likely remains the same, unless you are setting dynamic `fields`\\nper file.\\n\\n**This has now been improved to**:\\n\\n- Only call `assemblyOptions()` once.\\n- `fields` is for global variables in your\\n  [template](https://transloadit.com/docs/topics/templates/).\\n- All metadata on your files is automatically sent along to Transloadit. This\\n  will end up in `file.user_meta` for you to dynamically access in your Template\\n  _per file_.\\n\\nYou can read more about Assembly Variables in the\\n[docs](https://transloadit.com/docs/topics/assembly-variables/).\\n\\n## Companion\\n\\n### Streaming uploads by default\\n\\nStreaming uploads are now the default in Companion. This comes with greatly\\nimproved upload speeds and allows uploading up to hundreds of gigabytes without\\nneeding a large server storage. We found that this improves speeds by about 37%\\nfor a Google Drive upload of a 1 GB file\\n([source](https://github.com/transloadit/uppy/pull/4046#issuecomment-1235697937)).\\nThis feature was also available before, but we wanted to have more real-world\\nusage before setting it as the default.\\n\\nWith streaming upload disabled, the whole file will be downloaded first. The\\nupload will then start when the download has completely finished.\\n\\nWhen streaming upload is enabled, Companion will start downloading the file from\\nthe provider (such as Google Drive), while at the same time starting the upload\\nto the destination (such as Tus), and sending every chunk of data consecutively.\\n\\nFor more information, see the [Companion docs](/docs/companion/).\\n\\n### `corsOrigins` option is now required\\n\\nAs a security measure, we now require the\\n[`corsOrigins`](/docs/companion/#corsorigins) option to be set.\\n\\nIt serves two purposes: it sets the `Access-Control-Allow-Origin` header as well\\nas the target origin for `window.postMessage()`, which is needed to communicate\\nthe OAuth token from the new tab you used to log in to a provider back to\\nCompanion.\\n\\n## And more\\n\\nThe 4.0 release contains over 170 contributions, many too small to mention, but\\ntogether resulting in Uppy continuing to grow and improve. We closely listen to\\nthe community and are always looking for ways to improve the experience, for\\nusers and developers alike.\\n\\nReady to upgrade? Be sure to check out the\\n[migration guide](/docs/guides/migration-guides/).\\n\\n<a href=\\"https://www.producthunt.com/posts/uppy-4-0?embed=true&utm_source=badge-featured&utm_medium=badge&utm_souce=badge-uppy&#0045;4&#0045;0\\" target=\\"_blank\\"><img src=\\"https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=473003&theme=light\\" alt=\\"Uppy&#0032;4&#0046;0 - TypeScript&#0032;rewrite&#0044;&#0032;Google&#0032;Photos&#0044;&#0032;and&#0032;much&#0032;more | Product Hunt\\" style=\\"width: 250px; height: 54px;\\" width=\\"250\\" height=\\"54\\" /></a>"},{"id":"2023/07/3.13-3.21","metadata":{"permalink":"/blog/2023/07/3.13-3.21","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2023-12-3.13-3.21.md","source":"@site/blog/2023-12-3.13-3.21.md","title":"\ud83c\udf84 Uppy 3.13 to 3.21: Typescript Saga: the beginning, Image Editor improvements, Dashboard auto-install","description":"It\u2019s this time of the year again! Make yourself cozy","date":"2023-12-23T00:00:00.000Z","tags":[],"readingTime":4.64,"hasTruncateMarker":true,"authors":[{"email":"antoine@transloadit.com","name":"Antoine du Hamel","id":"aduh95","tagline":"Developer","imageURL":"https://github.com/aduh95.png","key":"aduh95"},{"email":"merlijn@transloadit.com","name":"Merlijn Vos","id":"merlijn","tagline":"Developer","imageURL":"https://github.com/murderlon.png","key":"murderlon"},{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"},{"email":"mikael@transloadit.com","name":"Mikael Finstad","id":"mikael","tagline":"Developer","imageURL":"https://github.com/mifi.png","key":"mifi"}],"frontMatter":{"title":"\ud83c\udf84 Uppy 3.13 to 3.21: Typescript Saga: the beginning, Image Editor improvements, Dashboard auto-install","date":"2023-12-23T00:00:00.000Z","authors":["aduh95","murderlon","arturi","mifi"],"image":"https://uppy.io/img/blog/3.13-3.21/dog-coding-laptop-mars-christmas-tree-2.jpg","slug":"2023/07/3.13-3.21","published":true,"toc_max_heading_level":2},"unlisted":false,"prevItem":{"title":"New Uppy 4.0 major: TypeScript rewrite, Google Photos, React hooks, and much more","permalink":"/blog/uppy-4.0"},"nextItem":{"title":"Scaling Images on Rotation","permalink":"/blog/2023-10-25-image-editor"}},"content":"<img src=\\"/img/blog/3.13-3.21/dog-coding-laptop-mars-christmas-tree-2.jpg\\" alt=\\"Drawing of a dog with a laptop and Christmas tree on Mars\\" />\\n\\nIt\u2019s this time of the year again! Make yourself cozy\\n[by the fire](https://www.youtube.com/watch?v=ouqtX6WWL1U), and let us help you\\nunwrap the gifts Uppy has prepared for you.\\n\\nWe proud of all the improvements and amazing new features and bug fixes we were\\nable to introduce this year. The highlights being: conditional S3 multipart and\\nsigning S3 uploads on the client, speedy handling of 10-50k file uploads,\\nrefresh tokens (useful when the token expires mid-upload for a large amount of\\nfiles / slow connections), server-sent events and new `assemblyOptions` for the\\nTransloadit plugin, Dashboard Single File mode (`singleFileFullScreen`),\\nimproved ETA in the Status Bar, a bunch of new languages, including Hindi,\\nMexican Spanish and Catalan.\\n\\nThis one, however, is a recent Uppy updates post, covering releases from\\n[`3.13.0` to `3.21.0`](https://github.com/transloadit/uppy/compare/uppy%403.13.0...uppy%403.21.0):\\nannouncing the switch to Typescript, Dashboard can now auto-install plugins,\\nsupport for Catalan language, a heap of bug fixes for Tus, Companion, AWS S3,\\nand more.\\n\\n\x3c!--truncate--\x3e\\n\\n## Typescript\\n\\nWe are excited to announce that we are working hard to refactor Uppy Core and\\nall plugins source files to TypeScript. We have a build setup in place that\\ntemporarily supports both `.ts` and `.js` files in our monorepo. And a helper\\nutility that takes a package name and does the initial renaming and Typescript\\nconfig. Then we go through the list of plugins one by one. We begun with\\n`@uppy/utils` and `@uppy/core`, since most other packages depend on those. Now\\nwe are moving to the rest, one by one.\\n\\nThis work so far is only affecting Uppy internals. In published packages we are\\nusing the manually crafted `d.ts` files, as before. We are planning to flip the\\nswitch and introduce some breaking changes in the next Uppy major, due to be\\nreleased in the first quater of 2024.\\n\\n## Core\\n\\n- Allow duplicate files with `onBeforeFileAdded`.\\n- Fixed`onBeforeFileAdded` with Golden Retriever.\\n- Simplify types with class generic and type more events.\\n\\n## Image Editor\\n\\nWe have a whole separate blog post about the recent rotation improvements in the\\nImage Editor, so please read that, if you are interested. Other changes include:\\n\\n- Fixed labels on all buttons, centered the rotation slider label.\\n- Limited cropbox movements.\\n- Fixed to respect `cropperOptions.initialAspectRatio`.\\n- Change the checkered background color, make it semi-transparent.\\n- Fixed granular rotation: `[-45, 45]` instead of `[-45, 44]`.\\n- Removed 1px black lines.\\n- Made `file-editor:cancel` event fire when the Image Editor\u2019s \u201ccancel\u201d button\\n  is pressed.\\n\\n<video muted autoplay loop src=\\"/img/blog/3.13-3.21/crop.mov\\" type=\\"video/mp4\\">\\n</video>\\n\\n<img alt=\\"Editor semi-transparant checkered background\\" src=\\"/img/blog/3.13-3.21/editor.jpg\\" />\\n\\n## Dashboard\\n\\nDashboard can now automatically discover and install compatible plugins without\\n`target` option. This lets you use a much more condense syntax:\\n\\n```js\\nconst uppy = new Uppy()\\n\\t.use(ImageEditor)\\n\\t.use(Dashboard)\\n\\t.use(Webcam)\\n\\t.use(GoogleDrive);\\n```\\n\\n:::tip\\n\\nThe old way via `.use(ImageEditor, { target: Dashboard })` and\\n`.use(Dashboard, { plugins: [\'Webcam\', \'GoogleDrive\'] })` still works, but we\\nencourage you to use the new syntax.\\n\\n:::\\n\\nBug fixes:\\n\\n- Remove `.uppy-Dashboard-isFixed` CSS class when `uppy.close()` is invoked.\\n- When `showAddFilesPanel: true`, `aria-hidden` should be the opposite.\\n- Don\u2019t cancel all files and Assemblies when clicking \u201cdone\u201d.\\n- Update Dashboard\u2019s blue color to meet WCAG contrast requirements.\\n\\n## AWS S3\\n\\n- Fixed `TypeError`, fixed `uploadURL` when using `PUT`.\\n- Pass `signal` as separate arg for backward compat; pass the `uploadURL` back\\n  to the caller.\\n- Refresh file before calling user-defined functions.\\n- Made sure we retry signature request.\\n- Use uppercase HTTP method names.\\n- Call `#setCompanionHeaders` in `setOptions`.\\n\\n## Companion\\n\\nOne of the most notable changes in Companion is on the client side, we\u2019ve made\\nauthentication optional, allowing for more provider types, with publicly\\naccessable links, for example.\\n\\nIn Companion Client we were able to drop the now unnecessary preflight requests,\\nimproving upload speeds and latency yet again.\\n\\nOther notable changes and fixes:\\n\\n- Allow dynamic S3 bucket.\\n- Companion+client stability fixes, error handling and retries.\\n- Catch \u201cinvalid initialization vector\u201d instead of crashing.\\n- Added Onedrive refresh tokens.\\n- Fixed `authProvider` property inconsistency.\\n- Fixed accelerated endpoints for presigned POST.\\n- Fixed double tus uploads.\\n- Fixed onedrive pagination.\\n- Fixed Redis key default TTL.\\n- Fixed Uploader.js metadata normalisation.\\n- Make CSRF protection helpers available to providers.\\n- Refactor `getProtectedHttpAgent` to make TS happy.\\n- Unify redis initialization.\\n- Use deferred length for tus streams.\\n- Fixed a refresh token race condition.\\n- Fixed edge case for pagination on root.\\n- Fixed instagram/facebook auth error regression; uploadRemoteFile undefined;\\n  ProviderView error on empty plugin.icon.\\n- Added getBucket metadata argument.\\n- Added missing credentialsURL for box.\\n- Added test endpoint for dynamic oauth creds.\\n- Added Companion OAuth Key type.\\n- Aliased \u201cremoveListener\u201d as \u201coff\u201d in Redis emitter.\\n- Use user-defined `onSuccess`, `onError`, and `onProgress` callbacks in\\n  `@uppy/tus`.\\n- Invoke headers function for remote uploads.\\n- Send certain Onedrive errors to the user.\\n- Upgraded Node.js docker version.\\n\\n## Frameworks Integraions\\n\\n- Angular: upgraded to Angular 16.x.\\n- Svelte: Fixed TS build command.\\n- Vue: added export for FileInput.\\n\\n## Locales\\n\\n- Added Catalan locale `ca_ES`.\\n- Added missing translations to `de_DE`.\\n- Update Farsi.\\n\\n## Transloadit\\n\\n- Emit assembly progress events.\\n- Removed Socket.io \u2014 it\u2019s server-sent events with fallback to polling now.\\n\\n## Misc\\n\\n- Added Prettier, migrated to Vitest for Uppy core and Uppy plugins.\\n- Update `file.meta.name` after compression, becase format/extension might have\\n  changed.\\n- use latest Node.js version for tests.\\n- Migrate to AWS-SDK V3 syntax.\\n- Move remote file upload logic into companion-client.\\n\\nHappy holidays and see you in 2024!"},{"id":"2023-10-25-image-editor","metadata":{"permalink":"/blog/2023-10-25-image-editor","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2023-10-25-image-editor.md","source":"@site/blog/2023-10-25-image-editor.md","title":"Scaling Images on Rotation","description":"We recently released an \u201cimage scaling on rotation\u201d feature for Uppy\u2019s","date":"2023-12-08T00:00:00.000Z","tags":[],"readingTime":5.805,"hasTruncateMarker":true,"authors":[{"email":"lakesare@gmail.com","name":"Evgenia Karunus","id":"evgenia","tagline":"Developer","imageURL":"https://github.com/lakesare.png","key":"evgenia"},{"email":"tim@transloadit.com","name":"Tim Koschuetzki","id":"tim","tagline":"Transloadit co-founder","imageURL":"https://github.com/tim-kos.png","key":"tim"}],"frontMatter":{"title":"Scaling Images on Rotation","date":"2023-12-08T00:00:00.000Z","authors":["evgenia","tim"],"image":"/img/blog/3.4-3.13/single-file-mode.jpg","slug":"2023-10-25-image-editor","published":true,"toc_max_heading_level":3},"unlisted":false,"prevItem":{"title":"\ud83c\udf84 Uppy 3.13 to 3.21: Typescript Saga: the beginning, Image Editor improvements, Dashboard auto-install","permalink":"/blog/2023/07/3.13-3.21"},"nextItem":{"title":"Uppy 3.3 to 3.13: conditional S3 multipart, signing on the client, speedy handling of 10k files and much much more","permalink":"/blog/2023/07/3.3-3.13"}},"content":"\x3c!--retext-simplify disable prior-to all-of employ very represents appropriate--\x3e\\n\\nWe recently released an \u201cimage scaling on rotation\u201d feature for Uppy\u2019s\\n[Image Editor](https://uppy.io/docs/image-editor/), an often-requested feature\\nthat we\u2019re super proud to be able to announce.\\n\\nIn this blog post, we\u2019ll be taking a peek behind the curtain, as we take a\\ndetailed look into the development of this feature, and our thought-process\\napproaching it.\\n\\nBefore we start though, take a look below at a comparison between how Uppy\u2019s\\nImage Editor used to handle image rotations, and how it handles them now.\\n\\n<table style={{ textAlign: \\"center\\" }}>\\n  <thead>\\n  <tr>\\n    <th colspan={2}>\\n      Rotation\\n    </th>\\n  </tr>\\n\\n  <tr>\\n    <th>Without scaling</th>\\n    <th>With scaling</th>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n  <tr>\\n  <td>\\n    <video controls muted autoplay>\\n      <source src=\\"/img/blog/2023-10-25-image-editor/without-scaling.mov\\" type=\\"video/mp4\\" />\\n    </video>\\n  </td>\\n\\n  <td>\\n    <video controls muted autoplay>\\n      <source src=\\"/img/blog/2023-10-25-image-editor/with-scaling.mov\\" type=\\"video/mp4\\" />\\n    </video>\\n  </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\\nWithout further ado, let\u2019s dive into some of the finer technical details, so you\\ncan follow along and implement this feature into your own image editor.\\n\\n\x3c!--truncate--\x3e\\n\\nThe above UI is present in many image editors - for example, the default image\\neditors on iOS and Android both employ it. Often users expect this behaviour\\ntoo, leading to some confusion when their images are left with ugly corners\\nafter a rotation.\\n\\nWe implemented this in Uppy\u2019s Image Editor last week, and the solution turned\\nout to be non-trivial. Since this is a pretty ubiquitous task to solve for all\\nimage editors, we decided to release our solution to the world and write out a\\npost about it, instead of keeping it hidden away as part of internal notes.\\n\\n## 3 Steps\\n\\nThere are **3 steps** to our scaling implementation:\\n\\n1. Ask your designer what scaling on rotation should look like\\n1. Find the `.scale()` function\\n1. Calculating the geometry\\n\\n### 1. Trust your designer\\n\\nWhen I first approached this task, my gut-instinct was to go for the \u201crotated\\nrectangle inscribed within another rectangle\u201d solution so that the largest-area\\ninscription possible is achieved. This route turned out to be an unpleasant user\\nexperience, so take this as an important lesson in trusting your designer, and\\nconsulting them first on what the user might want.\\n\\nAlternatively, you can choose to trust our designer\u2019s advice by:\\n\\n- always rotating the image around the center of the image (intersection of the\\n  diagonals)\\n- just enlarging the image to remove any empty corners\\n\\n### 2. Find the `.scale()` function\\n\\nTo enlarge the image in a way that covers empty corners, we first need a scaling\\nfunction. Uppy uses [cropperjs v1.x](https://github.com/fengyuanchen/cropperjs)\\nas an image editing library, which exposes the `cropper.scale(scalingFactor)`\\nfunction. Most image editing libraries are likely to have a similar function,\\nbut of course feel free to code one yourself if you feel up to the challenge.\\n\\nImportantly, the scaling function should\\n[uniformly enlarge](<https://en.wikipedia.org/wiki/Scaling_(geometry)#Uniform_scaling>)\\nthe image _around its center_, where the `scalingFactor` is determined by\\n`desiredHeight/oldHeight`.\\n\\n### 3. Calculate the geometry\\n\\nNow, we want to draw our before-rotation & after-rotation shapes on the same\\npicture, and apply some trigonometry. If you need to brush up on the mathematics\\nbehind this, we recommend watching the following Khan Academy lessons on\\n[how angles work](https://www.khanacademy.org/test-prep/praxis-math/praxis-math-lessons/gtp--praxis-math--lessons--geometry/a/gtp--praxis-math--article--angles--lesson)\\nand\\n[how sines and cosines work](https://www.khanacademy.org/math/geometry/hs-geo-trig/hs-geo-trig-ratios-intro/a/finding-trig-ratios-in-right-triangles),\\nas these cover everything you\u2019ll need to follow along.\\n\\nIn the images below, we see what happens on rotation by default. To remove the\\nempty corners, the user would have to drag around the edges of the cropbox. What\\nwe can do instead is scale the image (in the directions shown by the <span\\nstyle={{ color: `rgb(127, 194, 65)` }}>green arrows</span>) so that these\\ncorners disappear.\\n\\n<table style={{ background: `rgb(250, 250, 250)` }}>\\n  <thead>\\n  <tr><th colspan={2}>What happens on rotation</th></tr>\\n  </thead>\\n\\n  <tbody>\\n  <tr>\\n  <td width=\\"50%\\">\\n    <img style={{ maxWidth: 300 }} src=\\"/img/blog/2023-10-25-image-editor/1a.jpg\\" />\\n  </td>\\n\\n  <td width=\\"50%\\">\\n    <img style={{ maxWidth: 340 }} src=\\"/img/blog/2023-10-25-image-editor/1b.jpg\\" />\\n  </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\\nSo, to cover up these checkered corners, we will need to scale the image. If we\\ncover up the larger corner, the smaller corner will get covered up\\nautomatically, so our code takes the form of\\n`scale(Math.max(scalingFactor1, scalingFactor2))`. These two scaling factors are\\ncalculated very similarly, so we\u2019ll only focus on calculating only one of them\\nin this tutorial (although the full solution is given in the conclusion).\\n\\nIn the images below, the <span style={{ color: `rgb(127, 194, 65)` }}>green\\nrectangle</span> represents the desired dimensions of our image after it\u2019s\\nscaled. Our scaling function (and hopefully yours) is defined in such a way that\\nif we have the image of height `h`, and we want to scale it up to height `H`, we\\nneed to execute `.scale(H/h)`. Since we already know `h`, as it\u2019s the height of\\nour image, we only need to find `H` to complete our scaling function.\\n\\n<table style={{ background: \\"rgb(250, 250, 250)\\" }}>\\n  <thead>\\n  <tr><th colspan={2}>We want to find H</th></tr>\\n  </thead>\\n\\n  <tbody>\\n  <tr>\\n  <td width=\\"50%\\">\\n    <img src=\\"/img/blog/2023-10-25-image-editor/2a.jpg\\" />\\n  </td>\\n\\n  <td width=\\"50%\\">\\n    <img src=\\"/img/blog/2023-10-25-image-editor/2b.jpg\\" />\\n  </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\\nFor the rest of the tutorial, the following steps are then automatic - as we\\nknow all the angles in the image, we know the image\u2019s width and height, and we\\nknow to find `H`.\\n\\n<p style={{ padding: 0 }}>The easiest way to go about it, is to first annotate the image with all the\\nrelevant angles. We\u2019ll be using <span\\nstyle={{ color: `rgb(26, 196, 213)` }}>blue </span> for the rotation angle\\n <code>\u03b1</code>, and <span style={{ color: `rgb(224, 128, 193)` }}>pink </span>\\nfor <code>90 - \u03b1</code>:</p>\\n\\n<table style={{ background: \\"rgb(250, 250, 250)\\", textAlign: \\"center\\" }}>\\n  <thead style={{ display: \\"table\\", width: \\"100%\\" }}>\\n  <tr><th>Color all angles</th></tr>\\n  </thead>\\n\\n  <tbody style={{ display: \\"table\\", width: \\"100%\\" }}>\\n  <tr>\\n  <td>\\n    <img style={{ width: 500 }} src=\\"/img/blog/2023-10-25-image-editor/3.jpg\\" />\\n  </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\\nWe can then find `H`, by adding the two outer sides of these triangles.\\n\\n<table style={{ background: \\"rgb(250, 250, 250)\\" }}>\\n  <thead>\\n  <tr><th colspan={2}>Add two triangle sides: H = sin(\u03b1 - 90) * h + sin(\u03b1) * w</th></tr>\\n  </thead>\\n\\n  <tbody>\\n  <tr>\\n  <td width=\\"50%\\">\\n    <img src=\\"/img/blog/2023-10-25-image-editor/4a.jpg\\" />\\n  </td>\\n\\n  <td width=\\"50%\\">\\n    <img src=\\"/img/blog/2023-10-25-image-editor/4b.jpg\\" />\\n  </td>\\n  </tr>\\n  </tbody>\\n</table>\\n\\nSo, now we have our desired `H`! We know one of our scaling factors is `H/h`.\\nNow, we just need to find our other scaling factor, which is `W/w`. This follows\\na similar process, and you can find the calculations as part of the full\\nsolution below.\\n\\n```javascript\\nscalingFactor\\n= max(scalingFactor1, scalingFactor2)\\n= max(H/h, W/w)\\n= max(\\n  (sin(\u03b1 - 90) * h + sin(\u03b1) * w) / h,\\n  (sin(\u03b1) * h + sin(\u03b1 - 90) * w) / w\\n)\\n```\\n\\n## Conclusion\\n\\nIn Uppy, our code ended up looking like this:\\n\\n```javascript\\nfunction getScalingFactor(w, h, rotationAngle) {\\n\\tconst \u03b1 = Math.abs(toRadians(rotationAngle));\\n\\n\\tconst scalingFactor = Math.max(\\n\\t\\t(Math.sin(\u03b1) * w + Math.cos(\u03b1) * h) / h,\\n\\t\\t(Math.sin(\u03b1) * h + Math.cos(\u03b1) * w) / w,\\n\\t);\\n\\n\\treturn scalingFactor;\\n}\\nconst image = cropper.getImageData();\\nconst scaleFactor = getScalingFactor(image.width, image.height, rotationAngle);\\ncropper.scale(scaleFactor);\\n```\\n\\nYou can see the full version\\n[on GitHub](https://github.com/transloadit/uppy/blob/12e08ada02b9080bd5e1d19526bdf8a2010e62a1/packages/%40uppy/image-editor/src/utils/getScaleFactorThatRemovesDarkCorners.js).\\n\\n<details>\\n  <summary>Bonus content: our founder\u2019s (Tim Koschuetzki) initial scribbled notes with the solution</summary>\\n  <img src=\\"/img/blog/2023-10-25-image-editor/tim.jpg\\"/>\\n</details>"},{"id":"2023/07/3.3-3.13","metadata":{"permalink":"/blog/2023/07/3.3-3.13","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2023-07-3.4-3.13.md","source":"@site/blog/2023-07-3.4-3.13.md","title":"Uppy 3.3 to 3.13: conditional S3 multipart, signing on the client, speedy handling of 10k files and much much more","description":"This is a big Uppy update post, covering releases from","date":"2023-07-26T00:00:00.000Z","tags":[],"readingTime":8.82,"hasTruncateMarker":true,"authors":[{"email":"merlijn@transloadit.com","name":"Merlijn Vos","id":"merlijn","tagline":"Developer","imageURL":"https://github.com/murderlon.png","key":"murderlon"},{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"},{"email":"antoine@transloadit.com","name":"Antoine du Hamel","id":"aduh95","tagline":"Developer","imageURL":"https://github.com/aduh95.png","key":"aduh95"},{"email":"mikael@transloadit.com","name":"Mikael Finstad","id":"mikael","tagline":"Developer","imageURL":"https://github.com/mifi.png","key":"mifi"}],"frontMatter":{"title":"Uppy 3.3 to 3.13: conditional S3 multipart, signing on the client, speedy handling of 10k files and much much more","date":"2023-07-26T00:00:00.000Z","authors":["murderlon","arturi","aduh95","mifi"],"image":"/img/blog/3.4-3.13/single-file-mode.jpg","slug":"2023/07/3.3-3.13","published":true,"toc_max_heading_level":2},"unlisted":false,"prevItem":{"title":"Scaling Images on Rotation","permalink":"/blog/2023-10-25-image-editor"},"nextItem":{"title":"New Uppy.io and docs","permalink":"/blog/2023-05-new-website"}},"content":"<img src=\\"/img/blog/3.4-3.13/single-file-mode.jpg\\" className=\\"border\\" alt=\\"Screenshot of the new Uppy website homepage\\" />\\n\\nThis is a big Uppy update post, covering releases from\\n[`3.3.0` to `3.13.0`](https://github.com/transloadit/uppy/compare/uppy%403.4.0...uppy%403.13.0)!\\n\\nIn this issue: the long-awaited unified S3 plugin which can switch between\\nregular and multipart uploads, improved performance when adding and validating\\n10k+ files, and stability improvements and bug fixes. The Transloadit plugin is\\nnow also easier to configure and leaner in bundle size, since we removed\\n`socket.io-client` in favor of\\n[Server-Sent Events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events).\\n\\nPlease make a cup of something tasty \u2615\ufe0f (in a non-spillable container), as this\\nwill be quite a ride.\\n\\n\x3c!--truncate--\x3e\\n\\n## AWS S3\\n\\n### Merging of the plugins\\n\\nAfter years of separating regular non-multipart uploads and multipart uploads,\\nwe are finally merging the two sibling plugins: `@uppy/aws-s3` and\\n`@uppy/aws-s3-multpart`. Here\u2019s the brief version of what you need to know, with\\ndetails to follow in the next section:\\n\\n- `@uppy/aws-s3-multipart` is deprecated. You should use `@uppy/aws-s3` and set\\n  the `shouldUseMultipart: true` option to get the same \u201cmultipart always\\n  enabled\u201d behavior. We plan to keep `@uppy/aws-s3-multipart` around as an alias\\n  for the next major cycle and add a warning at the install when Uppy 4.0.0 will\\n  be released.\\n- `@uppy/aws-s3` now hosts two plugins:\\n  - the legacy one, untouched, to guarantee backward compatibility. We plan to\\n    get rid of it in the next major, we recommend moving away from it and report\\n    if you see something missing in the new plugin.\\n  - the new merged plugin, available if you pass\\n    [`shouldUseMultipart`](https://uppy.io/docs/aws-s3-multipart/#shouldusemultipartfile)\\n    option.\\n\\nOur plan for this merge is to maintain the backward compatibility until the next\\nmajor, while also providing forward compatibility so you can try our new plugin\\nand give us some feedback before we remove the old code for good.\\n\\n### Conditional Multipart Explained\\n\\nMultipart and \u201cregular\u201d uploads have different use cases. The advantages of\\nmultipart uploads are:\\n\\n- **Improved throughput** \u2013 You can upload parts in parallel to improve\\n  throughput.\\n- **Quick recovery from any network issues** \u2013 Smaller part size minimizes the\\n  impact of restarting a failed upload due to a network error.\\n- **Pause and resume object uploads** \u2013 You can upload object parts over time.\\n  After you initiate a multipart upload, there is no expiry; you must explicitly\\n  complete or stop the multipart upload.\\n- **Begin an upload before you know the final object size** \u2013 You can upload an\\n  object as you are creating it.\\n\\nHowever, the downside is _request overhead_, as it needs to do creation,\\nsigning, and completion requests besides the upload requests. For example, if\\nyou are uploading files that are only a couple kilobytes with a 100ms roundtrip\\nlatency, you are spending 400ms on overhead and only a few milliseconds on\\nuploading. This really adds up if you upload a lot of small files.\\n\\nSo now you can use just one plugin, the `@uppy/aws-s3`, and enable multipart\\nconditionally, even per-file:\\n\\n```js\\nuppy.use(AwsS3, {\\n\\tshouldUseMultipart(file) {\\n\\t\\t// Use multipart only for files larger than 100MiB.\\n\\t\\treturn file.size > 100 * 2 ** 20;\\n\\t},\\n});\\n```\\n\\nor\\n\\n```js\\nuppy.use(AwsS3, {\\n\\tshouldUseMultipart: true,\\n});\\n```\\n\\nPlease see the new\\n[`shouldUseMultipart: boolean | function`](https://uppy.io/docs/aws-s3-multipart/#shouldusemultipartfile)\\noption for details.\\n\\n### Signing on the client\\n\\nBy default, when you upload to S3 with Uppy, every file, or every chunk in case\\nof Multipart, needs to be signed on the server. For many small files or files\\nwith many chunks this means a few additional requests per file/chunk of the\\nupload.\\n\\nTo address this issue and speed up the uploads by roughly 20%, we are\\nintroducing a new option: `getTemporarySecurityCredentials: boolean | function`.\\nWhen `true`, both S3 and S3 Multipart uploads will be signed on the client using\\nthe\\n[AWS Security Federation Token](https://docs.aws.amazon.com/STS/latest/APIReference/API_GetFederationToken.html),\\ncreated once per user (until it expires) on your backend rather than a unique\\nsigned URL for every single chunk.\\n\\n:::caution\\n\\nYou should opt-in into this only if you are comfortable giving end users direct\\naccess to signing files for your bucket.\\n\\n:::\\n\\n### Stability and bug fixes\\n\\n- We\u2019ve improved the internal handling of `RateLimitedQueue` to make\\n  [retries more robust](https://github.com/transloadit/uppy/pull/4424) and\\n  increased\\n  [priority of `abort` and `complete`](https://github.com/transloadit/uppy/pull/4542)\\n  requests.\\n- While we were at it, we\u2019ve also fixed\\n  [resuming in single-chunk uploads](https://github.com/transloadit/uppy/pull/4528),\\n  and improved\\n  [chunk size calculation](https://github.com/transloadit/uppy/pull/4508).\\n- [Golden Retriever integration with S3 Multipart](https://github.com/transloadit/uppy/pull/4526)\\n  was fixed.\\n\\nAdditionally, we\u2019ve disabled pause-resume buttons in the UI for remote S3\\nMultipart uploads \u2014\xa0they are not supported on Companion, so the UI now reflects\\nthat.\\n\\n## Core\\n\\nPerformance of adding and uploading big batches of files has (yet again) been\\ngreatly improved with refactors in both Uppy Core and Provider Views (that\u2019s\\nwhat we internally call all remote UIs: Instagram, Unsplash, Dropbox).\\n\\nWe\u2019ve been able to achieve this by\\n[refactoring out totals validation for Restrictions (maxTotalFileSize, maxNumberOfFiles)](https://github.com/transloadit/uppy/pull/4402):\\ninstead of doing it for each file, we perform the check at the end, after all\\nthe files have been added/validated. This was confirmed to work with 10k+ files!\\n\ud83d\ude80\\n\\n<img src=\\"/img/blog/3.4-3.13/10k-files.jpg\\" className=\\"border\\" alt=\\"Uppy UI with over 10k files selected from a remote source\\" />\\n\\nWe\u2019ve also fixed an issue with delayed throttled progress events, which could\\nlead to incorrect progress.\\n\\n## Transloadit\\n\\n### assemblyOptions\\n\\nWe\u2019ve introduced a new option called\\n[`assemblyOptions: object | function`](https://uppy.io/docs/transloadit/#assemblyoptions),\\nwhich replaces the `getAssemblyOptions`, `params` and `fields` (those are now\\ndeprecated and will be removed in the next major).\\n\\nHere\u2019s how you can use the new option as an object:\\n\\n```js\\nuppy.use(Transloadit, {\\n\\tassemblyOptions: {\\n\\t\\tparams: {\\n\\t\\t\\tauth: { key: \'key-from-transloadit\' },\\n\\t\\t\\ttemplate_id: \'id-from-transloadit\',\\n\\t\\t\\tsteps: {\\n\\t\\t\\t\\t// Overruling Template at runtime\\n\\t\\t\\t},\\n\\t\\t},\\n\\t\\tsignature: \'generated-signature\',\\n\\t\\tfields: {\\n\\t\\t\\t// Dynamic or static fields to send along\\n\\t\\t},\\n\\t},\\n});\\n```\\n\\nAnd here\u2019s an example with a function, to be able to set meta fields per-file,\\nfor instance:\\n\\n```js\\nuppy.use(Transloadit, {\\n\\tassemblyOptions(file) {\\n\\t\\treturn {\\n\\t\\t\\tparams: {\\n\\t\\t\\t\\tauth: { key: \'TRANSLOADIT_AUTH_KEY_HERE\' },\\n\\t\\t\\t\\ttemplate_id: \'xyz\',\\n\\t\\t\\t},\\n\\t\\t\\tfields: {\\n\\t\\t\\t\\tcaption: file.meta.caption,\\n\\t\\t\\t},\\n\\t\\t};\\n\\t},\\n});\\n```\\n\\n### Server-sent events\\n\\nHistorically Transloadit supported progress updates via Socket.io. It is a\\nrobust and stable package, but came with a \u201cprice-tag\u201d in the form of bundle\\nsize:\\n[38.3 kB Minified](https://bundlephobia.com/package/socket.io-client@4.7.1). So\\nit\u2019s been on our minds for a while to replace it with something more\\nlightweight, without breaking backwards-compatibility for the older clients (so\\nsimply removing Socket.io on the server in favor of plain WebSockets is not\\ndesireable).\\n\\nThe answer \u2014\\n[Server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events).\\nIt\u2019s a simple low-overhead one-way connection from Transloadit servers to\\n`@uppy/transloadit`. As was the case with Socket.io, we fall back to HTTP\\npolling every 2 seconds if SSE connection fails for some reason.\\n\\nSocket.io is still around in `@uppy/transloadit`, but will be removed soon, once\\nSSE proves itself in production.\\n\\n### Bug fixes\\n\\n- Reset `tus` key in the file on error, so retried files are re-uploaded.\\n- Clean up event listener to prevent cancelled assemblies.\\n- Make sure `fields` is not nullish when there are no files in Assembly.\\n\\n## Companion\\n\\n### Refresh tokens\\n\\nWe\u2019ve\\n[implemented refresh tokens](https://github.com/transloadit/uppy/pull/4448) for\\nDropbox and Google Drive to solve issued where tokens would expire in the middle\\nof a long upload and then the upload would fail.\\n\\nHere\u2019s how it\u2019s implemented in Companion:\\n\\n- We changed the logic when receiving a 401 from Companion, Uppy will now call a\\n  new `/:provider/refresh-token` endpoint which will give uppy a new access\\n  token.\\n- `refresh_token` is now stored inside uppy auth token along with `access_token`\\n  (encrypted JWT) for providers that give a refresh token (before only\\n  `access_token` was stored, now we store both as a `JSON.stringify`\u2019d\\n  document).\\n\\n### Bug fixes and improvements\\n\\n- Fixed a bug with non-ASCII metadata crashed Companion. The AWS SDK doesn\u2019t\\n  encode metadata by itself, so now we do it in Companion.\\n- Switched from aws-sdk v2 to @aws-sdk/\\\\* v3\\n- Upgraded Grant dependency\\n- We now send expire info for non-multipart uploads and added connection\\n  keep-alive to Dropbox to improve connection stability\\n- Merged Provider and SearchProvider internal remote source classes.\\n- Increased max limits for remote file list operations and fixed part listing in\\n  S3\\n\\n## Url\\n\\nWe\u2019ve upgraded the Url plugin to use `filename` from `Content-Disposition`\\nheader of the file you are importing, instead of relying on the url (but kept\\nthe latter as a fallback) (#4489). So now your files have proper names instead\\nof `noname`.\\n\\n<img src=\\"/img/blog/3.4-3.13/url-name.jpg\\" className=\\"border\\" alt=\\"Uppy UI with a file selected with the Url plugin\\" />\\n\\n## Dashboard and Status Bar\\n\\nSingle File Mode has been improved to adapt to height of less than 400px \u2014 the\\nUI turns back to grid in this case. We are also not using `fit: cover` anymore\\nto avoid cropping important parts of the image:\\n\\n<img src=\\"/img/blog/3.4-3.13/single-file-mode.jpg\\" className=\\"border\\" alt=\\"Uppy UI with single file\\" />\\n\\nWe\u2019ve also added an option to disable the Single File mode, as it can be\\nunwanted in certain use cases:\\n[`singleFileFullScreen`](https://uppy.io/docs/dashboard/#singlefilefullscreen).\\n\\nIf you wrapped Uppy Dashboard in a `<form>` element, it could be accidentally\\nsubmitted when a user pressed Enter to save meta fields or entering urls. Now\\nwe\u2019ve\\n[added a `form=\\"\\"` attribute, connected to an empty `<form>`](https://github.com/transloadit/uppy/pull/4283)\\nin document root to prevent the outer form from being submitted.\\n\\nA bug has been fixed that allowed clicking on buttons and links in Dashboard\\n[disabled mode](https://uppy.io/docs/dashboard/#disabled).\\n\\nRange selection of remote files has been fixed, you can now shift+click to\\nselect multiple files again. We\u2019ve added the `VirtualList` component which is\\nalready used in Uppy \u201cselected files\u201d screen to remote file lists. So now\\nscrolling through 10k+ files is breeze \ud83c\udf2c\ufe0f\\n\\n<img src=\\"/img/blog/3.4-3.13/range-selection.jpg\\" className=\\"border\\" alt=\\"Dashboard UI with range selection\\" />\\n\\n### Status Bar\\n\\n- Fixed ETA when Uppy recovers its state.\\n- Remove throttled component to fix a bug where state would become shared\\n  between multiple status bars on a page.\\n\\n## Locales\\n\\nWe\u2019ve added support for Hindi and Mexican Spanish. French, Spanish and Chinese\\nlocales have been improved.\\n\\n## Uploaders\\n\\n- Fixed an issue where sockets were opened right away, ignoring the\\n  `RateLimitedQueue`, which led to bugs in all plugins that handle remote\\n  uploads. Additionally, when file is removed (or all are canceled), we call\\n  `controller.abort` on queued requests.\\n- Fixed a bug with sockets being closed, while the upload was still in progress.\\n- In XHR Upload we\u2019ve added support for arrays in metadata and an\\n  `\'upload-stalled\'` event.\\n\\n## Miscellaneous\\n\\n- `@uppy/golden-retriever` has been refactored refactor to modernize the\\n  codebase.\\n- We\u2019ve switched more non-critical errors to warnings.\\n- Improved fallbacks for the drag & drop API.\\n- The React Native example has been modernized and updated.\\n- `uppy.resetProgress()` in Core has been fixed.\\n\\nWe hope you\u2019ve enjoyed this update posts and all the fixes and features we\u2019ve\\nworked on! As always, please see the full changelog on GitHub:\\n[3.4.0 \u2014 3.13.0](https://github.com/transloadit/uppy/compare/uppy%403.4.0...uppy%403.13.0)."},{"id":"/2023-05-new-website","metadata":{"permalink":"/blog/2023-05-new-website","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2023-05-new-website.md","source":"@site/blog/2023-05-new-website.md","title":"New Uppy.io and docs","description":"We are excited to announce that our new website, documentation and blog are now","date":"2023-05-10T00:00:00.000Z","tags":[],"readingTime":1.08,"hasTruncateMarker":false,"authors":[{"email":"merlijn@transloadit.com","name":"Merlijn Vos","id":"merlijn","tagline":"Developer","imageURL":"https://github.com/murderlon.png","key":"murderlon"},{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"},{"email":"antoine@transloadit.com","name":"Antoine du Hamel","id":"aduh95","tagline":"Developer","imageURL":"https://github.com/aduh95.png","key":"aduh95"}],"frontMatter":{"title":"New Uppy.io and docs","date":"2023-05-10T00:00:00.000Z","authors":["murderlon","arturi","aduh95"],"image":"/img/blog/new-website/homepage.png","published":true},"unlisted":false,"prevItem":{"title":"Uppy 3.3 to 3.13: conditional S3 multipart, signing on the client, speedy handling of 10k files and much much more","permalink":"/blog/2023/07/3.3-3.13"},"nextItem":{"title":"\ud83c\udf84 Uppy 3.1-3.3: Improved AWS S3 Multipart, Single File Mode","permalink":"/blog/2022/12/3.3"}},"content":"<img src=\\"/img/blog/new-website/homepage.png\\" className=\\"border\\" alt=\\"Screenshot of the new Uppy website homepage\\" />\\n\\nWe are excited to announce that our new website, documentation and blog are now\\nlive out of beta, ready for you to enjoy on [Uppy.io](https://uppy.io)! Let us\\nknow what you think [on twitter](https://twitter.com/uppy_io).\\n\\nThe first iteration of the Uppy website was built by Artur and Kevin over 7\\nyears ago, using [Hexo](https://hexo.io/) static site generator as a base. It\\nserved us well, but over time Hexo got less maintained, our docs more messy, and\\nquite a few places were collecting dust.\\n\\nAbout a year ago Merlijn set on a task to refresh the Uppy documentation\\nexperience, rewriting most of the docs from the ground up, with everyone on the\\nteam contributing in their area of Uppy knowledge.\\n[Docusaurus](https://docusaurus.io/) \ud83e\udd95 was chosen as one of the top modern\\ntools for documentation.\\n\\n![Screenshot of the Uppy website showing a documentation page with new design](/img/blog/new-website/dashboard-docs.png)\\n\\nMost of the plugin\u2019s docs now explain when you should use it (and sometimes when\\nnot), followed by how to install, tips and details and links to CodeSandbox\\nsamples.\\n\\nAnd for desert, we now have a swift website-wide search in the top bar, powered\\nby [Algolia](https://www.algolia.com), give it a go!\\n\\n![Screenshot of the Uppy website showing the search interface](/img/blog/new-website/search.png)\\n\\nEnjoy the new [uppy.io](https://uppy.io)!"},{"id":"2022/12/3.3","metadata":{"permalink":"/blog/2022/12/3.3","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2022-12-3.3.md","source":"@site/blog/2022-12-3.3.md","title":"\ud83c\udf84 Uppy 3.1-3.3: Improved AWS S3 Multipart, Single File Mode","description":"\ud83c\udf85\ud83d\udc36 Ho-ho-ho, we are about to wrap up another year for Uppy! Three minor","date":"2022-12-23T00:00:00.000Z","tags":[],"readingTime":2.48,"hasTruncateMarker":true,"authors":[{"email":"antoine@transloadit.com","name":"Antoine du Hamel","id":"aduh95","tagline":"Developer","imageURL":"https://github.com/aduh95.png","key":"aduh95"},{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"},{"email":"mikael@transloadit.com","name":"Mikael Finstad","id":"mikael","tagline":"Developer","imageURL":"https://github.com/mifi.png","key":"mifi"},{"email":"merlijn@transloadit.com","name":"Merlijn Vos","id":"merlijn","tagline":"Developer","imageURL":"https://github.com/murderlon.png","key":"murderlon"}],"frontMatter":{"title":"\ud83c\udf84 Uppy 3.1-3.3: Improved AWS S3 Multipart, Single File Mode","date":"2022-12-23T00:00:00.000Z","authors":["aduh95","arturi","mifi","murderlon"],"image":"https://uppy.io/img/blog/3.1-3.3/dashboard-christmas.jpg","published":true,"slug":"2022/12/3.3"},"unlisted":false,"prevItem":{"title":"New Uppy.io and docs","permalink":"/blog/2023-05-new-website"},"nextItem":{"title":"Uppy 3.0: Future-proof, conveniently easy, stable as ever","permalink":"/blog/2022/09/3.0"}},"content":"![](/img/blog/3.1-3.3/dashboard-christmas.jpg)\\n\\n\ud83c\udf85\ud83d\udc36 Ho-ho-ho, we are about to wrap up another year for Uppy! Three `minor`\\nreleases ago we\u2019ve introduced Uppy 3.0. It\u2019s time to give you an update on\\nwhat\u2019s been cooking in the Uppy-Transloadit headquarters (besides cranberry\\nsauce) for the past couple of months.\\n\\nIn short: AWS S3 Multipart stability improvements, Single File Mode for the\\nDashboard, more tests and bugfixes, new locales.\\n\\n\x3c!--truncate--\x3e\\n\\n## Safer AWS S3 Multipart uploads on slow connections\\n\\n`@uppy/aws-s3-multipart` has been serving well for people who prefer a\\n_client-to_s3_ setup with Uppy. However, some uploads could occasionally fail in\\npoor network conditions. It turned out, simultaneously signing and uploading\\nmany chunks at once saturated the HTTP/1.1 connection limit, which lead to\\nsignatures expiring by the time Uppy started uploading the next chunk.\\n\\nWe\u2019ve refactored our internal queue mechanism to sign chunks right before we\\nbegin uploading them to the remote server. When the upload is paused, the queue\\nis emptied and re-populated again on resume. The default `limit` for this plugin\\nhas been set to `6` and the default S3 signature expiry has been lifted from\\n`300` to `800` seconds.\\n\\n## Single File Mode\\n\\nOften times people only want to upload a single file (most commonly an image)\\nvia Uppy. But the Dashboard UI is tailored to handling many files at once, and\\nit used to display the single image as a small, sad-looking block in the corner.\\nThis ends now! (Actually, it ended a few releases ago, figure of speech).\\n\\n<img src=\\"/img/blog/3.1-3.3/single-file-mode.jpg\\" className=\\"border\\" />\\n\\nWith only one file selected, we\u2019ll display it large and centered, and make sure\\nto re-generate the image preview so it\u2019s `600px` wide, looking nice and sleek on\\nmodern displays.\\n\\nSee [PR #4188](https://github.com/transloadit/uppy/pull/4188) for more\\nscreenshots.\\n\\n## Bug fixes and Upgrades\\n\\nWe\u2019ve upgraded Typescript to `v4.8` and Jest to `v29`, among other tools and\\npackages.\\n\\nWe are now additionally testing that Uppy packages are correctly bundled with\\nthe latest Rollup, Webpack, Parcel, Vite, and ESBuild.\\n\\nNotable bug fixes:\\n\\n- XHR Upload: Queue requests for socket token for remote files\\n- Core: Prevent crashes when a file is removed before the upload starts\\n- Golden Retriever: Fixed upload retries\\n- AWS S3 and XHR Upload: Fixed Cannot mark a queued request as done in\\n  MiniXHRUpload\\n- Webcam: Set default videoConstraints\\n- Image Editor: Fix controls in small Dashboard\\n\\nSee the full list in the\\n[changelog](https://github.com/transloadit/uppy/blob/main/CHANGELOG.md).\\n\\n## Companion\\n\\nAnd of course, this festive season we are not forgetting Companion under the\\ntree:\\n\\n- Throttle progress by time\\n- Added workaround for S3 accelerated endpoints\\n- Send expire info for non-multipart uploads\\n- Send expiry time alongside S3 signed requests\\n- Added support for AbortSignal\\n- Prevent preflight race condition\\n\\n## Locales\\n\\nUzbek language pack was added, while Polish and Ukrainian language packs were\\nupdated.\\n\\n---\\n\\nThat\u2019s it for our updates! Stay tuned for more in 2023 and happy holidays (if\\nyou are celebrating)! Cheers. In the meantime, we are driving home, driving home\\nfor Christmas. Yeah.\\n\\n![](/img/blog/3.1-3.3/driving-home.gif)"},{"id":"2022/09/3.0","metadata":{"permalink":"/blog/2022/09/3.0","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2022-09-3.0.md","source":"@site/blog/2022-09-3.0.md","title":"Uppy 3.0: Future-proof, conveniently easy, stable as ever","description":"Screenshot of Uppy 3.0.0 UI","date":"2022-09-13T00:00:00.000Z","tags":[],"readingTime":6.68,"hasTruncateMarker":true,"authors":[{"email":"antoine@transloadit.com","name":"Antoine du Hamel","id":"aduh95","tagline":"Developer","imageURL":"https://github.com/aduh95.png","key":"aduh95"},{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"},{"email":"mikael@transloadit.com","name":"Mikael Finstad","id":"mikael","tagline":"Developer","imageURL":"https://github.com/mifi.png","key":"mifi"},{"email":"merlijn@transloadit.com","name":"Merlijn Vos","id":"merlijn","tagline":"Developer","imageURL":"https://github.com/murderlon.png","key":"murderlon"}],"frontMatter":{"title":"Uppy 3.0: Future-proof, conveniently easy, stable as ever","date":"2022-09-13T00:00:00.000Z","authors":["aduh95","arturi","mifi","murderlon"],"image":"https://uppy.io/img/blog/3.0/uppy-3-0.jpg","published":true,"slug":"2022/09/3.0"},"unlisted":false,"prevItem":{"title":"\ud83c\udf84 Uppy 3.1-3.3: Improved AWS S3 Multipart, Single File Mode","permalink":"/blog/2022/12/3.3"},"nextItem":{"title":"Uppy 2.4-2.7: Image Compressor, Transloadit Rate Limiting, ESM","permalink":"/blog/2022/03/2.4-2.7"}},"content":"![Screenshot of Uppy 3.0.0 UI](/img/blog/3.0/uppy-3-0.jpg)\\n\\n> For those new to Uppy, coming from Reddit, Hacker News and Product Hunt today:\\n> Uppy is a popular open source file uploader for the browser. Pick files from\\n> local disk or camera, remote sources like Instagram, Unsplash, Dropbox etc,\\n> record audio and screencasts. Crop and tweak images with the image editor\\n> plugin. Supports resumable uploads to a tus.io server, AWS S3 (and many others\\n> with similar API like DigitalOcean), multipart.\\n> [Try it](https://uppy.io/examples/dashboard)!\\n\\nUppy is turning three! When you\u2019re counting in\\n[dog years](https://www.akc.org/expert-advice/health/how-to-calculate-dog-years-to-human-years/)\\n\u2013 which we most certainly are \u2013 that\u2019s 29 already. An age like that signifies\\nproper adulthood. For Uppy, this means it\u2019s ready to stay loyal, but without the\\nsilly mistakes (read: bugs). Uppy also underwent (ESM) surgery to keep it\\nstrolling by your side in the current ecosystem, and received other behavioral\\nimprovements \ud83d\udc36\\n\\n\x3c!--truncate--\x3e\\n\\nTL;DR: ESM transition, native mobile camera, new Remote Sources plugin, sweeping\\nCompanion rewrite and streaming support, `async`/`await` everything, React 18\\nand Vue 3 support, all examples rewritten.\\n\\n## ESM surgery\\n\\n[ECMAScript Modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules)\\n(ESM) are the future and we\u2019re ready to adopt it. Benefits over CommonJS\\ninclude: improved security, better tree shaking, and a syntax that can be\\nunderstood natively by browsers, which can greatly improve the DX if the tools\\nare configured to take advantage of that.\\n\\nFollowing in the footsteps of many other packages, we now only ship Uppy core\\nand its plugins as ESM. For Uppy 2.x, we were shipping CommonJS.\\n\\nIf you are already using ESM or the CDN builds, nothing changes for you! If you\\nare using CommonJS, you may have to add extra tooling for everything to work, or\\nconsider refactoring your codebase to ESM. Please refer to the\\n[Pure ESM package gist](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c)\\nfor more information and help on how to do that.\\n\\n## Less integration code with the new remote sources preset\\n\\nWe\u2019ve introduced a new Uppy preset plugin,\\n[`@uppy/remote-sources`](/docs/remote-sources), which combines Instagram,\\nFacebook, Google Drive, Box, Unsplash, Dropbox, One Drive, Zoom and any other\\nremote cloud sources that Uppy will support in the future. The plugin only works\\nwith Dashboard and allows you to enable all the above sources in a single line.\\n\\nBefore, you had to manually include every cloud provider / remote source:\\n\\n```js\\nuppy\\n\\t.use(Instagram, {\\n\\t\\tcompanionUrl: COMPANION_URL,\\n\\t\\tcompanionAllowedHosts: COMPANION_ALLOWED_HOSTS,\\n\\t})\\n\\t.use(GoogleDrive, {\\n\\t\\tcompanionUrl: COMPANION_URL,\\n\\t\\tcompanionAllowedHosts: COMPANION_ALLOWED_HOSTS,\\n\\t})\\n\\t.use(OneDrive, {\\n\\t\\tcompanionUrl: COMPANION_URL,\\n\\t\\tcompanionAllowedHosts: COMPANION_ALLOWED_HOSTS,\\n\\t})\\n\\t.use(Instagram, {\\n\\t\\tcompanionUrl: COMPANION_URL,\\n\\t\\tcompanionAllowedHosts: COMPANION_ALLOWED_HOSTS,\\n\\t})\\n\\t.use(Facebook, {\\n\\t\\tcompanionUrl: COMPANION_URL,\\n\\t\\tcompanionAllowedHosts: COMPANION_ALLOWED_HOSTS,\\n\\t})\\n\\t.use(Unsplash, {\\n\\t\\tcompanionUrl: COMPANION_URL,\\n\\t\\tcompanionAllowedHosts: COMPANION_ALLOWED_HOSTS,\\n\\t});\\n// ...\\n```\\n\\nAfter:\\n\\n```js\\nuppy.use(RemoteSources, { companionUrl: COMPANION_URL });\\n```\\n\\nTo get started, check out the [`RemoteSources` docs](/docs/remote-sources).\\n\\n## Robodog ends its service\\n\\nUppy is flexible and extensible through plugins, but the integration code could\\nsometimes prove daunting. This is what brought [Robodog](/docs/robodog/) to\\nlife. It served as an alternative with the same features, but with a more\\nergonomic and minimal API.\\n\\nIt did, however, come with its own set of new problems:\\n\\n- Robodog tries to do the exact same thing as Uppy, but looks like an entirely\\n  different product.\\n- Users are faced with a confusing choice between using Robodog or using Uppy\\n  directly.\\n- Robodog is more ergonomic because it\u2019s limited. When hitting such a limit, the\\n  user has to refactor everything to Uppy using plugins.\\n\\nThis has now led us to deprecating Robodog and embracing Uppy for its strong\\nsuits: modularity and flexibility. At the same time, we\u2019re also introducing\\nsomething to take away some of the repetitive integration code:\\n[`@uppy/remote-sources`](/docs/remote-sources).\\n\\nAre you using Robodog in your code base? You can check out the\\n[migration guide](https://uppy.io/docs/guides/migration-guides/#migrate-from-robodog-to-uppy-plugins)\\nto see how you can transition to Uppy plugins without losing functionality. We\\nhave committed ourselves to extending Robodog support for one year to give our\\nusers more time to migrate.\\n\\n## Native mobile camera\\n\\nAs you are probably aware, Uppy\u2019s Webcam plugin provides a nice UI for desktop\\ndevices to take pictures and record videos. Up until 3.0, the same UI was\\nutilized on mobile as well.\\n\\nSince most mobile devices have a system UI for taking pictures and recording\\nvideos \u2013 which is usually better than any custom solution we can offer \u2013 we\u2019ve\\nintroduced a new option called `mobileNativeCamera` for the Webcam plugin:\\n\\n```js\\nuppy.use(Webcam, {\\n\\tmobileNativeCamera: isMobile({ tablet: true }),\\n});\\n```\\n\\nBy default, it uses the [`is-mobile`](https://github.com/juliangruber/is-mobile)\\npackage to detect mobile devices, like smartphones and tablets, but you can\\nmanually set this option to `true` or `false` if you wish. When enabled, instead\\nof the usual Camera/Webcam Uppy UI, users will be presented with buttons that\\nopen their device\u2019s native camera interface:\\n\\n![Uppy native camera UI](/img/blog/3.0/native-camera.jpg)\\n\\n[`videoConstraints.facingMode`](/docs/webcam/#videoConstraints) is also\\nsupported by this option via the\\n[`capture`](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/capture)\\nattribute (in the browsers and devices that respect it).\\n\\n```js\\nuppy.use(Webcam, {\\n\\tvideoConstraints: {\\n\\t\\tfacingMode: \'user\',\\n\\t},\\n});\\n```\\n\\nThe same applies to [`modes`](/docs/webcam/#modes), allowing you to enable only\\nvideo or only photos.\\n\\n## Devotedly stable\\n\\nSince the Uppy 2.7.0 release, **we\u2019ve fixed over 95 bugs!** This includes fixes\\nto bugs that made uploading less stable, documentation corrections, and\\ndependency upgrades.\\n\\n## Companion turns 4.0\\n\\nEveryone\u2019s favorite Companion also received some love.\\n\\n### Streaming upload\\n\\nStreaming upload can now also be enabled in Companion when using Tus. This comes\\nwith greatly improved upload speeds and allows uploading up to hundreds of\\ngigabytes without needing a large server storage. We found that this improves\\nspeeds by about 37% for a Google Drive upload of a 1 GB file\\n([source](https://github.com/transloadit/uppy/pull/4046#issuecomment-1235697937)).\\nThis feature was also available before Companion 4.0, but it didn\u2019t work with\\nTus until now.\\n\\nWith streaming upload disabled (default), the whole file will be downloaded\\nfirst. The upload will then start when the download has completely finished.\\n\\nWhen streaming upload is enabled, Companion will start downloading the file from\\nthe provider (such as Google Drive), while at the same time starting the upload\\nto the destination (such as Tus), and sending every chunk of data consecutively.\\n\\nFor more information, see the [Companion docs](/docs/companion/).\\n\\n### Event emitter\\n\\nCompanion now has a server-side event emitter that can be used to detect when\\nuploads start, finish and fail, without having to depend on the client (so it\\nworks even when users have closed their browser).\\n\\nExample code:\\n\\n```js\\nconst { app, emitter } = companion.app(options);\\n\\nemitter.on(\'upload-start\', ({ token }) => {\\n\\tconsole.log(\'Upload started\', token);\\n\\n\\tfunction onUploadEvent({ action, payload }) {\\n\\t\\tif (action === \'success\') {\\n\\t\\t\\temitter.off(token, onUploadEvent); // avoid listener leak\\n\\t\\t\\tconsole.log(\'Upload finished\', token, payload.url);\\n\\t\\t} else if (action === \'error\') {\\n\\t\\t\\temitter.off(token, onUploadEvent); // avoid listener leak\\n\\t\\t\\tconsole.error(\'Upload failed\', payload);\\n\\t\\t}\\n\\t}\\n\\temitter.on(token, onUploadEvent);\\n});\\n```\\n\\n### Internal improvements\\n\\nCompanion\u2019s internal request code and Providers have been rewritten to\\n`async`/`await`, which has greatly simplified and reduced the amount of code.\\nThis will lead to less bugs and security issues, and make it easier to implement\\nnew custom Providers.\\n\\nWe have also replaced the deprecated\\n[`request`](https://github.com/request/request) library with\\n[`got`](https://github.com/sindresorhus/got). This also removed the need for\\n[`purest`](https://github.com/simov/purest).\\n\\n### And more!\\n\\n- [Compressor](/docs/compressor) is officially stable. The Compressor plugin for\\n  Uppy optimizes images (JPEG, PNG), saving on average up to 60% in size. It has\\n  proven itself through extensive battle testing.\\n- [AWS S3 Multipart](/docs/aws-s3-multipart) also became more stable this\\n  release, as a result of us hammering out some of the last edge cases with lots\\n  of files and/or huge files.\\n- React 18 is now supported in [`@uppy/react`](/docs/react), Vue 3 is supported\\n  for [`@uppy/vue`](/docs/vue), and Angular 14 for\\n  [`@uppy/angular`](/docs/angular).\\n- Our [examples](https://github.com/transloadit/uppy/tree/main/examples) have\\n  received a fresh round of updates to keep them relevant.\\n\\n---\\n\\n![Animate picture of a visibly happy dog getting a head massage](/img/blog/3.0/dog-enjoys.gif)\\n\\nFor more details, see the full\\n[changelog](https://github.com/transloadit/uppy/blob/HEAD/CHANGELOG.md#1300) and\\nthe [migration guide](/docs/migration-guides.html).\\n\\nThat\u2019s it from us for now! As you can see, Uppy may be slowly turning into an\\nold dog, but we\u2019re still committed to keep teaching it new tricks. We hope\\nyou\u2019ll enjoy this latest major release, and all the features and improvements it\\nincludes. We can\u2019t wait to hear your thoughts about it on\\n[Twitter](https://twitter.com/uppy_io)!"},{"id":"2022/03/2.4-2.7","metadata":{"permalink":"/blog/2022/03/2.4-2.7","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2022-03-2.4-2.7.md","source":"@site/blog/2022-03-2.4-2.7.md","title":"Uppy 2.4-2.7: Image Compressor, Transloadit Rate Limiting, ESM","description":"We\u2019re always looking for opportunities to teach Uppy cool new tricks, and the","date":"2022-03-11T00:00:00.000Z","tags":[],"readingTime":3.32,"hasTruncateMarker":true,"authors":[{"email":"antoine@transloadit.com","name":"Antoine du Hamel","id":"aduh95","tagline":"Developer","imageURL":"https://github.com/aduh95.png","key":"aduh95"},{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"},{"email":"mikael@transloadit.com","name":"Mikael Finstad","id":"mikael","tagline":"Developer","imageURL":"https://github.com/mifi.png","key":"mifi"},{"email":"merlijn@transloadit.com","name":"Merlijn Vos","id":"merlijn","tagline":"Developer","imageURL":"https://github.com/murderlon.png","key":"murderlon"}],"frontMatter":{"title":"Uppy 2.4-2.7: Image Compressor, Transloadit Rate Limiting, ESM","date":"2022-03-11T00:00:00.000Z","authors":["aduh95","arturi","mifi","murderlon"],"image":"https://uppy.io/img/blog/2.4-2.7/compressor.jpg","published":true,"slug":"2022/03/2.4-2.7"},"unlisted":false,"prevItem":{"title":"Uppy 3.0: Future-proof, conveniently easy, stable as ever","permalink":"/blog/2022/09/3.0"},"nextItem":{"title":"\ud83c\udf84 Uppy 2.1-2.3: Audio plugin, fast and efficient streaming for Companion, production-ready Unsplash, and more","permalink":"/blog/2021/12/2.1-2.3"}},"content":"We\u2019re always looking for opportunities to teach Uppy cool new tricks, and the\\npast few months have been no exception. Since our\\n[most recent post](https://uppy.io/blog/2021/12/2.1-2.3/) in December, Uppy has\\ncontinued to receive a steady stream of updates. This post covers all the\\nimprovements made in Uppy versions 2.4 through 2.7. Changes and additions\\ninclude: image compression, improved Transloadit rate limiting and a lighter\\nDashboard plugin. We\u2019ve also moved our end-to-end tests to Cypress, and are\\nslowly converting plugins to ES modules (ESM).\\n\\n<img className=\\"border\\" alt=\\"Uppy Compressor plugin showing compressed images notification\\" src=\\"/img/blog/2.4-2.7/compressor.jpg\\" />\\n\\n\x3c!--truncate--\x3e\\n\\n## Compressor\\n\\nSome of the most commonly uploaded files on the internet are images \u2014 photos,\\nstock images, screenshots, and documents scans. Uppy now includes a new plugin\\ncalled `@uppy/compressor` that optimizes images (JPEG, PNG), saving on average\\nup to 60% in size (roughly 18 MB for 10 images). It uses\\n[Compressor.js](https://github.com/fengyuanchen/compressorjs) under the hood.\\n\\n[Read the docs](https://uppy.io/docs/compressor/) and\\n[try Compressor in action](https://uppy.io/examples/dashboard/).\\n\\n```js\\nimport Uppy from \'@uppy/core\';\\nimport Compressor from \'@uppy/compressor\';\\n\\nconst uppy = new Uppy();\\nuppy.use(Compressor);\\n```\\n\\n`@uppy/compressor` is also the first plugin that we are releasing as ESM,\\nbackwards compatible as CJS, to test out how this works. Please report any\\nissues.\\n\\n## Hosted Companion custom credentials\\n\\nIt cannot be overstated that our\\n[Transloadit-hosted](https://transloadit.com/docs/sdks/uppy/)\\n[Companion Plugin](https://uppy.io/docs/companion/) is the easiest secure way to\\nallow your users pick files from cloud sources like Google Drive, Instagram,\\nBox, etc. via Uppy. Up until now, however, that meant your users had to\\nauthenticate their cloud account with Transloadit, preventing you from showing\\nyour own logo instead. That has now been fixed! Head to `Transloadit Console` /\\n`Credentials`, scroll down to `Third-party Credentials`, click on\\n`Add new Credentials`, select `Companion OAuth`, and voil\xe0!\\n\\n<img className=\\"border\\" alt=\\"Transloadit Companion 3rd party credentials\\" src=\\"/img/blog/2.4-2.7/companion-3rd-party-oauth.jpg\\" />\\n\\nTry it out with the\\n[free Transloadit Community Plan \u2014 5GB / month and access to Companion](https://transloadit.com/pricing/).\\n\\n## Transloadit rate limiting\\n\\nWe\u2019ve added rate limiting to Transloadit\\n[assembly creation and status polling](https://github.com/transloadit/uppy/pull/3429),\\nand [tus retries](https://github.com/transloadit/uppy/pull/3394):\\n\\n> When the remote server responds with HTTP 429, all requests are paused for a\\n> while in the hope that it can resolve the rate limiting. Failed requests are\\n> now also queued up after the retry delay. Before, they were scheduled for\\n> retry without being queued up, which would sometimes end up overflowing the\\n> limit option.\\n\\nAs a result of this change, uploading many files at once has become even more\\nrobust.\\n\\n## Move to ESM\\n\\nThe JavaScript ecosystem is moving towards ESM, and we want to follow suit. We\\nare slowly starting to adopt ESM in Uppy packages. To do so, we integrated a\\nplugin into our build system that transpiles ESM source code to CommonJS syntax,\\nwhich is distributed with the npm package. Nothing will change on your end,\\nthough \u2013 we know that not everyone is using tooling that support ESM, so we\u2019re\\nholding on to CommonJS for the time being. Our plan is to refactor all official\\nUppy plugins to ESM before Uppy 3.0 is released, and drop CommonJS in favor of\\nESM in the npm packages at that point.\\n\\nFor details, see [PR 3468](https://github.com/transloadit/uppy/pull/3468).\\n\\n## End to end: move to Cypress\\n\\nUppy has had end to end from the start, but the developer experience was less\\nthan ideal with custom Webdriver.io + Selenium. The transition to\\n[Cypress](https://github.com/transloadit/uppy/pull/3444) allows us to write\\ntests with ease and comfort, backed by great documentation.\\n\\n## Lighter Bundle\\n\\nWe continue to look for ways to reduce Uppy\u2019s bundle size and modernize our\\nbuild toolchain. This time, we\u2019ve replaced the\\n[Exifr.js](https://github.com/exif-js/exif-js) legacy bundle with the modern one\\nwithout IE polyfills. Our Browserify bundler has been replaced with a modern and\\nmore efficient ESBuild.\\n\\n## Companion improvements\\n\\n- Improved private IP check (#3403)\\n- Implement periodic ping functionality (#3246)\\n- Fix broken thumbnails for Box and Dropbox (#3460)\\n- Fix unpslash author meta, sanitize metadata to strings and improve Companion\\n  tests (#3478)\\n\\nThat\u2019s it for today! See the full\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1300)\\nfor more details."},{"id":"2021/12/2.1-2.3","metadata":{"permalink":"/blog/2021/12/2.1-2.3","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2021-12-2.1-2.3.md","source":"@site/blog/2021-12-2.1-2.3.md","title":"\ud83c\udf84 Uppy 2.1-2.3: Audio plugin, fast and efficient streaming for Companion, production-ready Unsplash, and more","description":"Last Christmas, we gave you Uppy 1.24, but","date":"2021-12-15T00:00:00.000Z","tags":[],"readingTime":5.075,"hasTruncateMarker":true,"authors":[{"email":"antoine@transloadit.com","name":"Antoine du Hamel","id":"aduh95","tagline":"Developer","imageURL":"https://github.com/aduh95.png","key":"aduh95"},{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"},{"email":"mikael@transloadit.com","name":"Mikael Finstad","id":"mikael","tagline":"Developer","imageURL":"https://github.com/mifi.png","key":"mifi"},{"email":"merlijn@transloadit.com","name":"Merlijn Vos","id":"merlijn","tagline":"Developer","imageURL":"https://github.com/murderlon.png","key":"murderlon"}],"frontMatter":{"title":"\ud83c\udf84 Uppy 2.1-2.3: Audio plugin, fast and efficient streaming for Companion, production-ready Unsplash, and more","date":"2021-12-15T00:00:00.000Z","authors":["aduh95","arturi","mifi","murderlon"],"image":"https://uppy.io/img/blog/2.1-2.3/audio-cover.jpg","published":true,"slug":"2021/12/2.1-2.3"},"unlisted":false,"prevItem":{"title":"Uppy 2.4-2.7: Image Compressor, Transloadit Rate Limiting, ESM","permalink":"/blog/2022/03/2.4-2.7"},"nextItem":{"title":"Uppy 2.0.0: smaller, faster, modular plugins, Preact X, stricter types, and much more","permalink":"/blog/2021/08/2.0"}},"content":"\x3c!--retext-simplify ignore very--\x3e\\n\\nLast Christmas, we gave you [Uppy 1.24](https://uppy.io/blog/2020/12/1.24/), but\\nthis very next year, we\u2019ll take it away (since it\u2019s outdated by now) and give\\nyou a brand-new Uppy 2.3 \ud83c\udf81!\\n\\nAfter the [release](https://uppy.io/blog/2021/08/2.0/) of our latest major\\nversion, 2.0.0, we\u2019ve been busy with many things. First of all is the\\nlong-awaited Audio plugin to record and upload live audio directly. We then\\nworked on adding a fast and efficient streaming interface to Companion and made\\nUnsplash production ready. Housekeeping was also part of the job: we made Status\\nBar improvements, moved from npm to Yarn 3, did some refactoring, and updated\\ndependencies.\\n\\nLast but not least, we got the issue count down from around 110 since 2.0.0 to\\naround 45 now.\\n\\n\x3c!--truncate--\x3e\\n\\n## Audio plugin\\n\\nUppy now has a new `@uppy/audio` plugin for recording audio memos, sounds,\\njingling bells, Christmas carols, and all your holiday cheer. Check it out on\\nthe [demo page](https://uppy.io/examples/dashboard/).\\n\\n<video alt=\\"Audio plugin demo\\" muted autoplay loop>\\n  <source src=\\"/img/blog/2.1-2.3/audio-demo.mp4\\" type=\\"video/mp4\\" />\\n  Your browser does not support the video tag: https://uppy.io/img/blog/2.1-2.3/audio-demo.mp4\\n</video>\\n\\n## `@uppy/unsplash` is now production ready\\n\\nThe Unsplash plugin has received an update, providing attribution to the image\\nauthors and adding some polish to make it look better. Being fully brand\\ncompliant with Unsplash means it\u2019s now production ready. You can demo the plugin\\non the [website](https://uppy.io/examples/dashboard) or read the\\n[docs](https://uppy.io/docs/unsplash/).\\n\\n## New streaming interface for Companion\\n\\n[Companion][companion] handles the server-to-server communication between your\\nserver and file storage providers such as Google Drive, Dropbox, Instagram, and\\nthe like. This bypasses the client (so a 5 GB video isn\u2019t eating into your\\nusers\u2019 data plans) and files are directly uploaded to the final destination.\\nCompanion is made to be effortlessly integrate-able with Uppy.\\n\\nIt used to work by downloading the requested file from a remote provider on the\\nserver to then start uploading it to the destination. This did the job, but it\u2019s\\nwasn\u2019t ideal.\\n\\nWe now built streaming support into Companion, which means the download and\\nupload can happen simultaneously. This can result in **two times faster\\nuploads**, because we no longer have to wait for files to finish downloading\\nbefore starting the upload process. It\u2019s especially useful for large files and\\nremoves the need for a lot of storage space on the server, as data will be\\nbuffered in memory.\\n\\nYou can enable this by setting `streamingUpload` in the Companion\\n[options](https://uppy.io/docs/companion/#Options).\\n\\n**NOTE:** Streaming is turned off by default. Do not turn it on yet if you\u2019re\\nusing TUS for uploads, due to\\n[this tus-js-client bug](https://github.com/tus/tus-js-client/issues/275).\\n\\nInterested in using Companion? You can use Transloadit-hosted Companion on every\\n[Plan](https://transloadit.com/pricing/).\\n\\n## Status Bar error state improvements\\n\\nThe Status Bar plugin would get confused about upload errors in Uppy, and we\u2019ve\\naddressed this:\\n\\n- The error state is now shown in case of only _one_ failed file instead of\\n  _all_ failed files. The plugin used to get stuck in the uploading state when a\\n  single file failed.\\n- Added \u201cX of X files uploaded\u201d below \u201cUpload failed\u201d for extra context.\\n- Improved the error details button styling in the Status Bar and the file info\\n  card.\\n- Status Bar state is set to complete if the user manually removes the failed\\n  files.\\n\\n![status bar improvements screenshot](/img/blog/2.1-2.3/status-bar-improvements.jpg)\\n\\n## Internal housekeeping\\n\\n### Yarn v3 instead of npm\\n\\nWe\u2019ve switched the Uppy repo to Yarn 3 to improve package install performance.\\nWith our complex dependency graph and over thirty packages in a monorepo, we are\\nseeing install times reduced by more than a few minutes!\\n\\nWe are using [Corepack](https://github.com/nodejs/corepack) to make sure all\\nUppy contributors are using the same version of Yarn. If you are an Uppy\\ncontributor, please run the following commands to enable Corepack:\\n\\n```sh\\ncorepack -v || npm i -g corepack # install Corepack if not already installed\\nyarn -v || corepack enable # install Yarn through Corepack if not already installed\\nyarn || corepack yarn install # install npm dependencies using yarn\\n```\\n\\n[View the PR](https://github.com/transloadit/uppy/pull/3237)\\n\\n### Refactor locale scripts & generate types and docs\\n\\nThis is an internal change, but important nonetheless. Our locales now live in a\\nseparate `locale.js` file for every plugin instead of `this.defaultLocale` in\\nthe class. The docs and types are automatically updated when we add or remove\\nnew locale strings.\\n\\n[View the PR](https://github.com/transloadit/uppy/pull/3276).\\n\\n### Automated release scripts\\n\\nA lot of things need to happen when we\u2019re publishing a new release. A complete\\nredo of the automation script is now available for quick and secure releases.\\n\\nHere are some highlights:\\n\\n- Releaser runs `yarn release` and will get a series of\\n  [prompts](https://github.com/terkelg/prompts) to set up a release.\\n- A changelog will be generated.\\n- The contributions table will be updated.\\n- GitHub Actions will create a release candidate pull request.\\n- When approved, GitHub Actions automatically merges, publishes to the npm\\n  public registry, and creates CDN bundles.\\n\\n[View the PR](https://github.com/transloadit/uppy/pull/3304).\\n\\n## And more\\n\\n- google-drive: plugin has been updated for brand compliance (#3178)\\n- google-drive: sort Google Drive list by name #3069\\n- status-bar: now shows all details on mobile when `showProgressDetails` is\\n  `true` (#3174)\\n- core: move `Uppy` class to its own module (#3225)\\n- angular: fix component crash by loosening `package.json` version constraints\\n  (#3210)\\n- drop-target: exposed events (#3238)\\n- companion: add `maxFileSize` option in companion for safety #3159\\n- companion: new AWS S3 multipart presigned URL batching endpoint #3056\\n- companion: improve CORS default headers #3167\\n- companion: use GET instead of HEAD for `getURLMeta` for better server\\n  compatibility (especially signed S3 URLs) #3048\\n- companion: deprecate missing `uploadUrls` option (will be required in the\\n  future) #3182\\n- companion: close window on auth callback error and show error to user #3143\\n- companion: cut off length of file names to avoid AWS error #3048\\n- companion: safely escape `<script>` injected code in Companion\u2019s send-token.js\\n  #3101\\n- companion: upgrade aws-sdk #3334\\n- companion: improve logging #3103\\n- companion: change Provider/SearchProvider API to async and use streams instead\\n  #3159\\n\\nHappy Holidays from the Uppy team! Enjoy Christmas and New Year, stay safe, take\\na walk outside. See you in 2022!\\n\\n\x3c!-- definitions --\x3e\\n\\n[companion]: https://uppy.io/docs/companion/"},{"id":"2021/08/2.0","metadata":{"permalink":"/blog/2021/08/2.0","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2021-08-2.0.md","source":"@site/blog/2021-08-2.0.md","title":"Uppy 2.0.0: smaller, faster, modular plugins, Preact X, stricter types, and much more","description":"Today, our tails are positively wagging with excitement about the release of","date":"2021-08-30T00:00:00.000Z","tags":[],"readingTime":8.85,"hasTruncateMarker":true,"authors":[{"email":"antoine@transloadit.com","name":"Antoine du Hamel","id":"aduh95","tagline":"Developer","imageURL":"https://github.com/aduh95.png","key":"aduh95"},{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"},{"email":"mikael@transloadit.com","name":"Mikael Finstad","id":"mikael","tagline":"Developer","imageURL":"https://github.com/mifi.png","key":"mifi"},{"email":"merlijn@transloadit.com","name":"Merlijn Vos","id":"merlijn","tagline":"Developer","imageURL":"https://github.com/murderlon.png","key":"murderlon"},{"email":"github@kooi.me","name":"Ren\xe9e Kooi","id":"renee","tagline":"Developer","imageURL":"https://github.com/goto-bus-stop.png","key":"renee"},{"email":"andrew@transloadit.com","name":"Andrew Kachnic","id":"andrew","tagline":"Developer","key":"andrew"}],"frontMatter":{"title":"Uppy 2.0.0: smaller, faster, modular plugins, Preact X, stricter types, and much more","date":"2021-08-30T00:00:00.000Z","authors":["aduh95","arturi","mifi","murderlon","renee","andrew"],"image":"https://uppy.io/img/blog/2.0/uppy-2-0-cover.jpg","published":true,"slug":"2021/08/2.0"},"unlisted":false,"prevItem":{"title":"\ud83c\udf84 Uppy 2.1-2.3: Audio plugin, fast and efficient streaming for Companion, production-ready Unsplash, and more","permalink":"/blog/2021/12/2.1-2.3"},"nextItem":{"title":"Uppy 1.30: Angular integration, granular image rotation, Google Drive shortcuts","permalink":"/blog/2021/07/1.30"}},"content":"Today, our tails are positively wagging with excitement about the release of\\nUppy 2.0! This latest version is on average 25% smaller and up to a thousand\\ntimes faster, thanks to dropping support for IE11 and a lot of refactoring work.\\nWe\u2019ve upgraded many dependencies, most notably Preact 8 to Preact X, greatly\\nimproved TypeScript support and screen reader accessibility, paid technical\\ndebt, and added support for multiple messages in the Informer plugin.\\n\\nChow down on all the juicy bits and pieces inside! And make sure to\\n[try Uppy live demo](https://uppy.io/examples/dashboard/).\\n\\n![Uppy 2.0 cover banner](/img/blog/2.0/uppy-2-0-cover.jpg)\\n\\n\x3c!--truncate--\x3e\\n\\n> Uppy is a sleek, modular JavaScript file uploader that integrates seamlessly\\n> with any application. It is made for developers who want to provide their\\n> users with the ability to see image previews, edit metadata, pick large files\\n> directly from Dropbox, restore selected files when a tab was accidentally\\n> closed, or crop an image in-browser before sending.\\n\\n---\\n\\n## A pup no more\\n\\nEver since the first introduction of Uppy\\n[five years ago](/blog/2016/07/uppy-begins/) (or 36 in\\n[dog-years](https://www.akc.org/expert-advice/health/how-to-calculate-dog-years-to-human-years/)),\\nwe\u2019ve always referred to our project as \u2018the next open source file uploader for\\nweb browsers\u2019. The release of [Uppy 1.0](/blog/2019/04/1.0/) a little over two\\nyears ago, however, soon led to a steep increase in adoption. Uppy now boasts\\nover\\n[24,000 stargazers on GitHub](https://github.com/transloadit/uppy/stargazers),\\nmaking it the undisputed top dog in the world of file uploaders \ud83c\udf0d\\n\\nWith that in mind, we felt it was high time to give Uppy some more much-needed\\ntrimming. We want to take this opportunity to break with the past, to make the\\nproject leaner \u2013 and to pave the way for an even brighter future for Uppy!\\n\\n<img className=\\"border\\" alt=\\"Uppy 2.0 UI with files\\" src=\\"/img/blog/2.0/uppy-ui-with-files.jpg\\" />\\n\\n## Table of Contents\\n\\n- [Highlights since 1.0](#Highlights-since-1-0)\\n- [Smaller bundles](#Smaller-bundles)\\n- [Faster](#Faster)\\n- [Preact X and upgraded dependencies](#Preact-X-and-upgraded-dependencies)\\n- [`Plugin` is replaced with `BasePlugin` and `UIPlugin`](#Plugin-is-replaced-with-BasePlugin-and-UIPlugin)\\n- [Strict TypeScript types by default](#Strict-TypeScript-types-by-default)\\n- [Batch pre-signing URL\'s for AWS S3 Multipart](#Batch-pre-signing-URLs-for-AWS-S3-Multipart)\\n- [And more](#And-more)\\n- [What future remains for 1.0?](#What-future-remains-for-1-0?)\\n- [That\'s it](#That\u2019s-it)\\n\\n<video alt=\\"Video demo showing updated Uppy 2.0 UI\\" muted autoplay loop>\\n  <source src=\\"/images/uppy-2-0-demo-aug-2021.mp4\\" type=\\"video/mp4\\" />\\n  Your browser does not support the video tag: https://uppy.io/images/uppy-2-0-demo-aug-2021.mp4\\n</video>\\n\\n## Highlights since 1.0\\n\\nA lot of things have happened since we released Uppy 1.0 in April of 2019. In\\ncase you have missed some of our 1.x releases, here is a small overview. We have\\nadded:\\n\\n- Official integrations for [Vue](/blog/2020/11/1.23/)\\n  ([3](/blog/2021/04/1.27/)), [Angular](/blog/2021/07/1.30/), and\\n  [Svelte](/blog/2020/12/1.24/)\\n- [Hooks](/blog/2020/12/1.24/) for the React integration\\n- Support for picking files from [Box](/blog/2020/11/1.23/),\\n  [Unsplash](/blog/2020/10/1.22/), [Facebook](/blog/2020/04/1.10/), and\\n  [OneDrive](/blog/2020/04/1.10/)\\n- [\u201cGhost\u201d files](/blog/2021/05/1.29/), as part of a revamped Golden Retriever\\n  plugin, which makes recovering lost files even more intuitive\\n- Support for 25 more languages (bringing it to a total of\\n  [37](/docs/locales/#List-of-locale-packs))\\n- [Dark mode](/blog/2020/04/1.13/)\\n- an [Image Editor](/blog/2020/07/1.18-image-editor/)\\n- And four new core team members: [@ajkachnic](https://github.com/ajkachnic),\\n  [@mifi](https://github.com/mifi), [@aduh95](https://github.com/aduh95), and\\n  [@murderlon](https://github.com/murderlon)\\n\\n## Smaller bundles\\n\\nWith 2.0, following in the footsteps of Microsoft, we are dropping support for\\nIE11. As a result, we are able to remove all built-in polyfills, and the new\\nbundle size is **25% smaller**! If you want your app to still support older\\nbrowsers (such as IE11), you may need to add the following polyfills to your\\nbundle:\\n\\n- [abortcontroller-polyfill](https://github.com/mo/abortcontroller-polyfill)\\n- [core-js](https://github.com/zloirock/core-js)\\n- [md-gum-polyfill](https://github.com/mozdevs/mediaDevices-getUserMedia-polyfill)\\n- [resize-observer-polyfill](https://github.com/que-etc/resize-observer-polyfill)\\n- [whatwg-fetch](https://github.com/github/fetch)\\n\\nIf you\'re using a bundler, you need import these before Uppy:\\n\\n```js\\nimport \'core-js\';\\nimport \'whatwg-fetch\';\\nimport \'abortcontroller-polyfill/dist/polyfill-patch-fetch\';\\n// Order matters here: AbortController needs fetch, which needs Promise (provided by core-js).\\n\\nimport \'md-gum-polyfill\';\\nimport ResizeObserver from \'resize-observer-polyfill\';\\n\\nwindow.ResizeObserver ??= ResizeObserver;\\n\\nexport { default } from \'@uppy/core\';\\nexport * from \'@uppy/core\';\\n```\\n\\nIf you\'re using Uppy from a CDN, we now provide two bundles: one for up-to-date\\nbrowsers that do not include polyfills and use modern syntax, and one for legacy\\nbrowsers. When migrating, be mindful about the types of browsers you want to\\nsupport:\\n\\n```html\\n\x3c!-- Modern browsers (recommended) --\x3e\\n<script src=\\"https://releases.transloadit.com/uppy/v2.0.1/uppy.min.js\\"><\/script>\\n\\n\x3c!-- Legacy browsers (IE11+) --\x3e\\n<script\\n\\tnomodule\\n\\tsrc=\\"https://releases.transloadit.com/uppy/v2.0.1/uppy.legacy.min.js\\"\\n><\/script>\\n<script type=\\"module\\">\\n\\timport \'https://releases.transloadit.com/uppy/v2.0.1/uppy.min.js\';\\n<\/script>\\n```\\n\\nPlease note that while you may be able to get 2.0 to work in IE11 this way, we\\ndo not officially support it anymore.\\n\\n## Faster\\n\\nUppy now loads faster thanks to the decreased bundle size. With Uppy 1.0, adding\\nmany files (hundreds or even thousands) used to take dozens of seconds. Uppy 2.0\\ndoes the same thing in mere milliseconds! So, at least for this specific use\\ncase, we feel comfortable in claiming that you may see your loading times go\\n**up to a thousand times faster**.\\n\\nThis was made possible by avoiding having to re-render all the file components\\nwhenever something changes, using `memoize` and `virtual-list` (allowing us to\\nonly render what is actually visible on screen). In addition, multiple files are\\nnow added to state in one go via `uppy.addFiles(Array)` as opposed to before,\\nwhen `uppy.addFile(File)` + `uppy.setState` were being called in a loop.\\n\\nBefore optimizations:\\n\\n![](/img/blog/2.0/uppy-performance-before.gif)\\n\\nAnd after:\\n\\n![](/img/blog/2.0/uppy-performance-after.gif)\\n\\n## Preact X and upgraded dependencies\\n\\nWe\u2019ve upgraded almost all of Uppy\u2019s dependencies. This includes the migration to\\nPreact X. All plugins that depend on Preact have been upgraded from `8.2.9` to\\nthe latest version `10.5.13`. If you\u2019d like your custom plugin to continue\\nworking with Uppy 2.0, it also needs to be using latest version of Preact.\\n\\nOther notable upgrades include browserify to `v10`, typescript to `v4.3`,\\nautoprefixer to `v10`, and lerna to `v4`.\\n\\n## `Plugin` is replaced with `BasePlugin` and `UIPlugin`\\n\\n[`@uppy/core`][core] provided a `Plugin` class for creating plugins. This was\\nused for any official plugin, but also for users who want to create their own\\ncustom plugin. However, `Plugin` always came bundled with Preact, even if the\\nplugin itself didn\'t add any UI elements.\\n\\nAs of Uppy 2.0.0, `Plugin` has been replaced with `BasePlugin` and `UIPlugin`.\\n`BasePlugin` is the minimum you need to create a plugin and `UIPlugin` adds\\nPreact for rendering user interfaces.\\n\\n**Note:** some bundlers will include `UIPlugin` (and therefore Preact) if you\\nimport from `@uppy/core`. To make sure this does not happen, you can import\\n`Uppy` and `BasePlugin` directly:\\n\\n```js\\nimport Uppy from \'@uppy/core/lib/Uppy.js\';\\nimport BasePlugin from \'@uppy/core/lib/BasePlugin.js\';\\n```\\n\\nInterested in creating your own plugin? Check out the\\n[\u201cwriting plugins\u201d](/docs/writing-plugins) guide.\\n\\n## Strict TypeScript types by default\\n\\nUppy used to have loose types by default and strict types as an opt-in. The\\ndefault export was a function that returned the `Uppy` class, and the types came\\nbundled with the default export (`Uppy.SomeType`).\\n\\n```ts\\nimport Uppy from \'@uppy/core\';\\nimport Tus from \'@uppy/tus\';\\n\\nconst uppy = Uppy<Uppy.StrictTypes>();\\n\\nuppy.use(Tus, {\\n\\tinvalidOption: null, // this will make the compilation fail!\\n});\\n```\\n\\nUppy is now strictly typed by default and loose types have been removed. The\\ndefault export is the `Uppy` class and not a function. This means you need to\\ncall `Uppy` with the `new` keyword when initializing it.\\n\\n```ts\\n// ...\\n\\nconst uppy = new Uppy();\\n\\nuppy.use(Tus, {\\n\\tinvalidOption: null, // this will make the compilation fail!\\n});\\n```\\n\\nUppy types are now individual exports and should be imported separately.\\n\\n\x3c!-- eslint-disable @typescript-eslint/no-unused-vars --\x3e\\n\\n```ts\\nimport type { PluginOptions, UIPlugin, PluginTarget } from \'@uppy/core\';\\n```\\n\\n### Event types\\n\\n[`@uppy/core`][core] provides an [`.on`](/docs/uppy/#uppy-on-39-event-39-action)\\nmethod to listen to [events](/docs/uppy/#Events). The types for these events\\nwere loose and allowed for invalid events to be passed, such as\\n`uppy.on(\'upload-errrOOOoooOOOOOrrrr\')`.\\n\\nEvents have received a big update thanks to [@Hawxy](https://github.com/Hawxy),\\nmaking them more strict and accurate.\\n\\nA breaking change was required to make this happen:\\n\\n\x3c!-- eslint-disable @typescript-eslint/no-unused-vars --\x3e\\n\\n```ts\\n// Before:\\n\\ntype Meta = { myCustomMetadata: string };\\n\\n// Invalid event\\nuppy.on<Meta>(\'upload-errrOOOoooOOOOOrrrr\', () => {\\n\\t// ...\\n});\\n\\n// After:\\n\\n// Normal event signature\\nuppy.on(\'complete\', (result) => {\\n\\tconst successResults = result.successful;\\n});\\n\\n// Custom signature\\ntype Meta = { myCustomMetadata: string };\\n\\n// Notice how the custom type has now become the second argument\\nuppy.on<\'complete\', Meta>(\'complete\', (result) => {\\n\\t// The passed type is now merged into the `meta` types.\\n\\tconst meta = result.successful[0].meta.myCustomMetadata;\\n});\\n```\\n\\nPlugins that add their own events can merge with existing ones in `@uppy/core`\\nwith `declare module \'@uppy/core\' { ... }`. This is a TypeScript pattern called\\n[module augmentation](https://www.typescriptlang.org/docs/handbook/declaration-merging.html#module-augmentation).\\nFor instance, when using [`@uppy/dashboard`][dashboard]:\\n\\n\x3c!-- eslint-disable @typescript-eslint/no-unused-vars --\x3e\\n\\n```ts\\nuppy.on(\'dashboard:file-edit-start\', (file) => {\\n\\tconst fileName = file.name;\\n});\\n```\\n\\n## Batch pre-signing URLs for AWS S3 Multipart\\n\\nThe [`@uppy/aws-s3-multipart`][aws-s3-multipart] plugin can be used to upload\\nfiles directly to an S3 bucket using S3\u2019s Multipart upload strategy. With this\\nstrategy, files are chopped up in parts of 5MB+ each, so they can be uploaded\\nconcurrently. It is also very reliable: if a single part fails to upload, only\\nthat 5MB chunk has to be retried.\\n\\nHowever, in Uppy 1.0, every part had to make the trip to the server to generate\\na pre-signed URL. This meant that a 1GB file uploaded in 5MB chunks would\\nrequire two hundred trips to the server.\\n\\nAs of Uppy 2.0.0, we now pre-sign URLs in batches. That same 1GB file now only\\ntakes fifty trips to the server (if the limit was four).\\n\\nThis is now the new default. Thanks to\\n[@martin-brennan](https://github.com/martin-brennan) for this contribution!\\n\\nDo you care about reliable uploads? You could also consider [`@uppy/tus`][tus]\\nwith a self-hosted or Transloadit Tus server. Tus can resume uploads, supports\\nsmaller chunks, and offers increased upload speeds.\\n\\n## And more\\n\\n- The `.run` method on the `Uppy` instance has been removed. This method was\\n  already obsolete and only logged a warning. As of this major version, it no\\n  longer exists.\\n- [`@uppy/informer`][informer] now supports showing multiple notifications at\\n  the same time. The notifications themselves have also been improved.\\n- Improved screen reader accessibility for checkboxes and the \'remove file\'\\n  button for [`@uppy/dashboard`][dashboard].\\n- Sort files and folders alphabetically in the Google Drive provider.\\n- Polished our code base with improved eslint rules, private field methods, and\\n  other modern JavaScript features that help us write more intention-revealing\\n  and safe code.\\n- To make Uppy more friendly towards new contributors, we have renamed our\\n  `master` branch to `main`.\\n\\n## What future remains for 1.0?\\n\\nUppy 1.0 will continue to receive bug fixes for three more months (until\\n<time datetime=\\"2021-12-01\\">1 December 2021</time>), security fixes for one more\\nyear (until <time datetime=\\"2022-09-01\\">1 September 2022</time>), but no more\\nnew features after today. Exceptions are unlikely, but _can_ be made \u2013 to\\naccommodate those with commercial support contracts, for example.\\n\\n## That\'s it!\\n\\nWe hope you\'ll waste no time in taking Uppy 2.0 out for a walk. When you do,\\nplease let us know what you thought of it on\\n[Reddit](https://www.reddit.com/r/javascript/comments/penbr7/uppy_file_uploader_20_smaller_and_faster_modular/),\\n[HN](https://news.ycombinator.com/item?id=28359287), ProductHunt, or\\n[Twitter](https://twitter.com/uppy_io/status/1432399270846603264). We\'re howling\\nat the moon to hear from you!\\n\\n\x3c!-- definitions --\x3e\\n\\n[core]: /docs/uppy/\\n[dashboard]: /docs/dashboard/\\n[informer]: /docs/informer/\\n[aws-s3-multipart]: /docs/aws-s3-multipart/\\n[tus]: /docs/tus/"},{"id":"2021/07/1.30","metadata":{"permalink":"/blog/2021/07/1.30","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2021-07-1.30.md","source":"@site/blog/2021-07-1.30.md","title":"Uppy 1.30: Angular integration, granular image rotation, Google Drive shortcuts","description":"Uppy 1.30 introduces the long-awaited Angular integration (beta), granular image","date":"2021-07-02T00:00:00.000Z","tags":[],"readingTime":1.66,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 1.30: Angular integration, granular image rotation, Google Drive shortcuts","date":"2021-07-02T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2021/07/1.30"},"unlisted":false,"prevItem":{"title":"Uppy 2.0.0: smaller, faster, modular plugins, Preact X, stricter types, and much more","permalink":"/blog/2021/08/2.0"},"nextItem":{"title":"Uppy 1.29: Golden Retriever, disableLocalFiles, Webcam previews, uppy.logout","permalink":"/blog/2021/05/1.29"}},"content":"Uppy 1.30 introduces the long-awaited Angular integration (beta), granular image\\nrotation and Google Drive shortcuts.\\n\\n\x3c!--truncate--\x3e\\n\\n## Angular integration\\n\\nUppy now has an official Angular integration! It\u2019s still in beta, so please try\\nit out and do let us know how we can improve through\\n[Twitter](https://mobile.twitter.com/uppy_io/) or\\n[GitHub](https://github.com/transloadit/uppy). The original draft implementation\\nwas made by [Adam Medford](https://github.com/adammedford), then finalized,\\npolished and brought to release today by\\n[Andrew Kachnic](https://github.com/ajkachnic) \ud83d\udc4f\\n\\n```sh\\nnpm install @uppy/angular\\n```\\n\\n```ts\\n// app.component.ts\\n\\nimport { Component } from \'@angular/core\';\\nimport { Uppy } from \'@uppy/core\';\\n\\n@Component({\\n\\tselector: \'app-root\',\\n})\\nexport class AppComponent {\\n\\tuppy: Uppy = new Uppy({ debug: true, autoProceed: true });\\n}\\n```\\n\\n```html\\n\x3c!--- app.component.html --\x3e\\n\\n<uppy-dashboard [uppy]=\\"uppy\\"> </uppy-dashboard>\\n```\\n\\nThe following plugins are available as Angular component wrappers:\\n\\n- `<uppy-dashboard />`\\n- `<uppy-drag-drop />`\\n- `<uppy-progress-bar />`\\n- `<uppy-status-bar />`\\n\\nSee the [Angular docs](/docs/angular/) for more details.\\n\\n## Granular image rotation\\n\\n`@uppy/image-editor` plugin received a new option `granularRotate: true` that\\nallows for granular image rotation: be it 12\xb0 or 59\xb0 \u2014 just adjust the slider to\\nyour liking.\\n\\n<video alt=\\"\\" muted autoplay loop>\\n  <source src=\\"/img/blog/1.30/granular-rotation.mp4\\" type=\\"video/mp4\\" />\\n  Your browser does not support the video tag: https://uppy.io/img/blog/1.30/granular-rotation.mp4\\n</video>\\n\\n## Google Drive Shortcuts\\n\\nGoogle Drive shortcuts, much like in a desktop OS, are pointers to files or\\nfolders that can be stored in another folder or drive. Uppy now supports\\nshortcuts \u2013 you will see them alongside your usual files and folders.\\n\\n![](/img/blog/1.30/drive-shortcut.png)\\n\\n![](/img/blog/1.30/uppy-shortcut.png)\\n\\n## Misc\\n\\n- @uppy/react: allowed HTML attributes to be passed via props (#2891 /\\n  @ajkachnic)\\n- @uppy/drag-drop: Expose drag-drop events (#2914 / @Murderlon)\\n- @uppy/companion: add `logClientVersion` option (#2855 / @mifi)\\n- build: Fix eslint uppy package imports (#2915 / @Murderlon)\\n\\nSee the\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1300)\\nfor more details.\\n\\n## Download\\n\\n<a class=\\"TryButton\\" href=\\"https://releases.transloadit.com/uppy/v1.29.1/uppy-v1.30.0.zip\\">Download\\nUppy 1.30 Bundle</a>\\n\\n<small>Or [include from CDN](https://uppy.io/docs/). Note that it\u2019s highly\\nrecommended to pick and choose specific Uppy plugins that you need, and install\\nthem with `npm` or `yarn`. This is because the bundle includes all Uppy plugins\\nat once.</small>"},{"id":"2021/05/1.29","metadata":{"permalink":"/blog/2021/05/1.29","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2021-04-1.29.md","source":"@site/blog/2021-04-1.29.md","title":"Uppy 1.29: Golden Retriever, disableLocalFiles, Webcam previews, uppy.logout","description":"In Uppy 1.29, we\u2019ve revamped the Golden Retriever plugin with support for","date":"2021-05-31T00:00:00.000Z","tags":[],"readingTime":2.53,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 1.29: Golden Retriever, disableLocalFiles, Webcam previews, uppy.logout","date":"2021-05-31T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/1.29/golden-retriever-all-recovered.png","published":true,"slug":"2021/05/1.29"},"unlisted":false,"prevItem":{"title":"Uppy 1.30: Angular integration, granular image rotation, Google Drive shortcuts","permalink":"/blog/2021/07/1.30"},"nextItem":{"title":"Uppy 1.27: Drop Target plugin, Vue 3 support, Dashboard dynamic meta fields, \u201cShared with me\u201d in Google Drive","permalink":"/blog/2021/04/1.27"}},"content":"In Uppy 1.29, we\u2019ve revamped the Golden Retriever plugin with support for\\npartially recovered \u201cghost\u201d files, added a `disableLocalFiles` option to the\\nDashboard, enabled the ability to preview webcam videos before submitting and\\nprovided an `uppy.logout()` method, along with an assortment of Companion\\nimprovements.\\n\\n<video alt=\\"Demo of Uppy Golden Retriever file restore plugin in action\\" muted autoplay loop>\\n  <source src=\\"/img/blog/1.29/ghosts-demo.mp4\\" type=\\"video/mp4\\" />\\n  Your browser does not support the video tag: https://uppy.io/img/blog/1.29/ghosts-demo.mp4\\n</video>\\n\\n\x3c!--truncate--\x3e\\n\\n## Golden Retriever\\n\\n[Golden Retriever](/docs/golden-retriever/) (`@uppy/golden-retriever`) is Uppy\u2019s\\ninnovative plugin that recovers users\u2019 files after an accidentally closed\\ntab/window or a browser crash. Golden Retriever was first\\n[introduced a few years ago](/blog/2017/07/golden-retriever/), during\\nTransloadit\u2019s company meetup in Berlin, and now it finally underwent a proper\\nrefactor.\\n\\n![](/img/blog/1.29/golden-retriever-all-recovered.png)\\n\\nIn this release, we\u2019re adding support for \u201cghosts\u201d \u2014 files for which we\u2019ve\\nrestored the metadata, but were unable to recover the data blob itself (usually\\ndue to its size). In this case, users will see a ghost icon over the file and a\\n\u201cRe-select\u201d button to pick the file again.\\n\\n![](/img/blog/1.29/golden-retriever-ghost.png)\\n\\nYou can try Golden Retriever in action on\\n[the Dashboard example page](https://uppy.io/examples/dashboard/).\\n\\n<center><img src=\\"/img/blog/golden-retriever/catch-fail-2.gif\\" alt=\\"Golden Retriever failing to catch something\\" title=\\"Good try, girl!\\" /></center>\\n\\n## Dashboard: `disableLocalFiles`\\n\\nThe `disableLocalFiles: true` option will disable drag & drop, and hide the\\n\u201cBrowse\u201d and \u201cMy Device\u201d buttons, allowing only uploads from plugins, such as\\nWebcam, Screen Capture, Google Drive or Instagram.\\n\\n![](/img/blog/1.29/disableLocalFiles.png)\\n\\n[Docs: disableLocalFiles](https://uppy.io/docs/dashboard/#disableLocalFiles).\\n\\n## Webcam Previews\\n\\nWhen recording a video with the `@uppy/webcam` plugin, you will now be given the\\nopportunity to play it back and review before submitting. If you happen to not\\nlike the crab mask you\u2019ve used, you can re-record the video using a more\\nappropriate baby Yoda or duckface mask.\\n\\n<video alt=\\"Demo of Uppy Golden Retriever file restore plugin in action\\" muted autoplay loop>\\n  <source src=\\"/img/blog/1.29/webcam-preview-demo.mp4\\" type=\\"video/mp4\\" />\\n  Your browser does not support the video tag: https://uppy.io/img/blog/1.29/webcam-preview-demo.mp4\\n</video>\\n\\n## uppy.logout()\\n\\nWhen your users log out of your app, you might want to also log them out of any\\ncloud providers they might have used through Uppy, for extra security.\\n\\n`uppy.logout()` calls `provider.logout()` on each remote provider plugin, like\\nGoogle Drive, Instagram, Dropbox, etc.\\n\\n[Docs: uppy-logout](https://uppy.io/docs/uppy/#uppy-logout)\\n\\n## Companion\\n\\n- @uppy/companion-client: rethrow original error objects (#2889 /\\n  @goto-bus-stop)\\n- Pull out metric middleware logic (#2854 / @mifi)\\n- Smaller Heroku deployment (#2845 / @goto-bus-stop)\\n- Bump redis from 2.8.0 to 3.1.1 (#2865 / @dependabot, @ kiloreux)\\n- add chunkSize Companion option (#2881 / @mifi)\\n- fix NRP TypeScript errors (#2884 / @mifi)\\n- support relative redirect URLs in responses (#2901 / @ goto-bus-stop)\\n\\n## Misc\\n\\n- core: use AggregateError when available (#2869 / @aduh95)\\n- build: upgrade TypeScript (#2856 / @ajkachnic)\\n- webcam: improve MIME type detection to solve issue in iOS Safari (#2851 /\\n  @dominiceden)\\n\\nSee\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1291)\\nfor details.\\n\\n## Download\\n\\n<a class=\\"TryButton\\" href=\\"https://releases.transloadit.com/uppy/v1.29.1/uppy-v1.29.1.zip\\">Download\\nUppy 1.29.1</a>\\n\\n<small>Or [include from CDN](https://uppy.io/docs/). Note that it\u2019s highly\\nrecommended to pick and choose specific Uppy plugins that you need, and install\\nthem with `npm` or `yarn`. This is because the bundle includes all Uppy plugins\\nat once.</small>"},{"id":"2021/04/1.27","metadata":{"permalink":"/blog/2021/04/1.27","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2021-04-1.27.md","source":"@site/blog/2021-04-1.27.md","title":"Uppy 1.27: Drop Target plugin, Vue 3 support, Dashboard dynamic meta fields, \u201cShared with me\u201d in Google Drive","description":"In Uppy 1.27 we\u2019ve added a new @uppy/drop-target plugin, enabled support for","date":"2021-04-05T00:00:00.000Z","tags":[],"readingTime":2.65,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 1.27: Drop Target plugin, Vue 3 support, Dashboard dynamic meta fields, \u201cShared with me\u201d in Google Drive","date":"2021-04-05T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/1.27/drop-target.jpg","published":true,"slug":"2021/04/1.27"},"unlisted":false,"prevItem":{"title":"Uppy 1.29: Golden Retriever, disableLocalFiles, Webcam previews, uppy.logout","permalink":"/blog/2021/05/1.29"},"nextItem":{"title":"Uppy 1.26: Dashboard \u201cdisabled\u201d, per-file headers","permalink":"/blog/2021/02/1.26"}},"content":"In Uppy 1.27 we\u2019ve added a new `@uppy/drop-target` plugin, enabled support for\\nVue 3, introduced dynamic `metaFields` option for Dashboard, Google Drive now\\nlists documents that have been shared with you.\\n\\n<video alt=\\"Demo video showing Uppy with Drop Target plugin which allows accepting drag and drop anywhere on a page\\" poster=\\"/img/blog/1.26/dashboard-disabled.jpg\\" muted autoplay loop>\\n  <source src=\\"/img/blog/1.27/drop-target.mp4\\" type=\\"video/mp4\\" />\\n  Your browser does not support the video tag: https://uppy.io/img/blog/1.27/drop-target.mp4\\n</video>\\n\\n\x3c!--truncate--\x3e\\n\\n## Drop Target\\n\\nWith `@uppy/drop-target` it is now possible to turn your whole app / page (or\\nany other element, like `<textarea>`, for instance) into a drag-and-drop area:\\n\\n![Uppy Dashboard UI with drop target plugin](/img/blog/1.27/drop-target.jpg)\\n\\n```js\\nuppy.use(DropTarget, {\\n\\ttarget: document.body,\\n});\\n```\\n\\n## Google Drive \u201cShared with me\u201d\\n\\nIf you connect Uppy to Google Drive, you\u2019ll now see a new virtual folder called\\n\u201cShared with me\u201d \u2014 there you\u2019ll find (hard to guess, I know), documents that\\nhave been shared with you.\\n\\n![Google Drive \u201cShared with me\u201d folder](/img/blog/1.27/shared-with-me.jpg)\\n\\n[PR #2758](https://github.com/transloadit/uppy/pull/2758).\\n\\n## Dashboard Dynamic `metaFields`\\n\\nSometimes you may want to show specific meta fields for certain type of files.\\nFor instance, you may want to show location and alt attribute for images. Now,\\ninstead of setting a fixed array of fields, you can pass a function that will be\\ncalled for each file, returning an array of fields from it:\\n\\n```js\\n.use(Dashboard, {\\n  trigger: \'#pick-files\',\\n  metaFields: (file) => {\\n    const fields = [{ id: \'name\', name: \'File name\' }]\\n    if (file.type.startsWith(\'image/\')) {\\n      fields.push({ id: \'location\', name: \'Photo Location\' })\\n      fields.push({ id: \'alt\', name: \'Alt text\' })\\n    }\\n    return fields\\n  },\\n})\\n```\\n\\nSee [Dashboard `metaFields`](https://uppy.io/docs/dashboard/#metaFields) docs\\nfor details.\\n\\n## Vue 3\\n\\n`@uppy/vue` integration now supports Vue 3! This is done by checking the\\narguments of the `render` function and determining whether it is using Vue 2 or\\n3, and then returning the appropriate rendering method.\\n\\n[PR #2755](https://github.com/transloadit/uppy/pull/2755).\\n\\n## Companion CORS and Better Testing\\n\\nIn Companion, we\u2019ve improved unit testing DX\\n([#2827](https://github.com/transloadit/uppy/pull/2827)) and switched to using\\nthe `cors` module instead of custom cors logic\\n([#2823](https://github.com/transloadit/uppy/pull/2823)).\\n\\n@coreprocess submited a fix that allows Companion to serve on a subpath\\n([#2797](https://github.com/transloadit/uppy/pull/2797)), and added Redis pubsub\\nscope setting ([#2804](https://github.com/transloadit/uppy/pull/2804))!\\n\\n## npm 7\\n\\nWe\u2019ve finally upgraded our monorepo to npm 7 and\\n[Workspaces](https://docs.npmjs.com/cli/v7/using-npm/workspaces). If you are a\\ncontributor, please upgrade `npm install npm -g`, as npm 7 is now required for\\nthe Uppy repo.\\n\\n[PR #2835](https://github.com/transloadit/uppy/pull/2835)\\n\\n## New Linter Rules\\n\\nQuite a few new rules have been added to our eslint-config, which is now mostly\\n`eslint-config-transloadit` with some custom uppy-specific overrides.\\n\\n[PR #2796](https://github.com/transloadit/uppy/pull/2796)\\n\\n## Misc\\n\\n- @uppy/xhr-upload: Set headers just before the upload in case options changed\\n  (#2781 / @rart)\\n- @uppy/aws-s3-multipart: Aws-s3-multipart sends outdated file info to\\n  upload-success event (#2828 / @goto-bus-stop)\\n- @uppy/aws-s3: removeUploader triggered on uninstall (#2824 / @slawexxx44)\\n- @uppy/webcam: Fix issue where the modes: `[\'audio-only\']` option was ignored\\n  when getting tracks from the media stream (#2810 / @dominiceden)\\n- website: Website improvements (#2803 / @nqst)\\n\\nSee\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1270)\\nfor details.\\n\\n## Download\\n\\n<a class=\\"TryButton\\" href=\\"https://releases.transloadit.com/uppy/v1.27.0/uppy-v1.27.0.zip\\">Download\\nUppy 1.27.0</a>\\n\\n<small>Or [include from CDN](https://uppy.io/docs/). Note that it\u2019s highly\\nrecommended to pick and choose specific Uppy plugins that you need, and install\\nthem with `npm` or `yarn`. This is because the bundle includes all Uppy plugins\\nat once.</small>"},{"id":"2021/02/1.26","metadata":{"permalink":"/blog/2021/02/1.26","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2021-02-1.26.md","source":"@site/blog/2021-02-1.26.md","title":"Uppy 1.26: Dashboard \u201cdisabled\u201d, per-file headers","description":"Uppy 1.26 brings a new disabled option for the Dashboad, ability to set","date":"2021-02-26T00:00:00.000Z","tags":[],"readingTime":1.775,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 1.26: Dashboard \u201cdisabled\u201d, per-file headers","date":"2021-02-26T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/1.26/dashboard-disabled.jpg","published":true,"slug":"2021/02/1.26"},"unlisted":false,"prevItem":{"title":"Uppy 1.27: Drop Target plugin, Vue 3 support, Dashboard dynamic meta fields, \u201cShared with me\u201d in Google Drive","permalink":"/blog/2021/04/1.27"},"nextItem":{"title":"Uppy 1.25: right-to-left scripts, Ukrainian translation, Companion improvements","permalink":"/blog/2021/01/1.25"}},"content":"Uppy 1.26 brings a new `disabled` option for the Dashboad, ability to set\\nheaders per file with XHR Upload, and fixes for the Transloadit plugin.\\n\\n![Uppy Dashboard UI with disabled state](/img/blog/1.26/dashboard-disabled.jpg)\\n\\n\x3c!--truncate--\x3e\\n\\n## Dashboard \u201cDisabled\u201d\\n\\nYou can now specify a `disabled` option for the Dashboard, in order to make it\\nnon-interactive and grayed out. Users won\u2019t be able to click on buttons or drop\\nfiles.\\n\\nThis is useful when you need to confitionally enable/disable file uploading or\\nmanipulation, based on a condition in your app.\\n\\n<video alt=\\"Demo video showing Uppy with Dashboard disabled vs enabled state\\" poster=\\"/img/blog/1.26/dashboard-disabled.jpg\\" muted autoplay loop>\\n  <source src=\\"/img/blog/1.26/dashboard-disabled-vs-enabled.mp4\\" type=\\"video/mp4\\" />\\n  Your browser does not support the video tag: https://uppy.io/img/blog/img/blog/1.26/dashboard-disabled-vs-enabled.mp4\\n</video>\\n\\nThis option can be set on init:\\n\\n```js\\nuppy.use(Dashboard, {\\n\\tdisabled: true,\\n});\\n```\\n\\nand via API:\\n\\n```js\\nconst dashboard = uppy.getPlugin(\'Dashboard\');\\ndashboard.setOptions({ disabled: true });\\n\\nuserNameInput.addEventListener(\'change\', () => {\\n\\tdashboard.setOptions({ disabled: false });\\n});\\n```\\n\\n[See the docs](https://uppy.io/docs/dashboard/#disabled-false).\\n\\n## XHR Upload Per File headers\\n\\n`@uppy/xhr-upload` now accept a `headers: (file) => {}` function, so you can do:\\n\\n```js\\nuppy.use(XHRUpload, {\\n\\theaders: (file) => ({\\n\\t\\tauthorization: `bearer ${global.userToken}`,\\n\\t\\t\'header-name\': file.meta.someMetaValue,\\n\\t}),\\n});\\n```\\n\\nto determine file-specific headers.\\n\\nThe function syntax for `headers` is only available if the `bundle` option is\\n`false` (the default). `bundle` uploads share only one set of headers.\\n\\n## Build System Improvements\\n\\n- build: set legacy-peer-deps for npm 7. We have some peerDependency mismatches\\n  in our install tree. In npm 6 this was OK (maybe reason for a warning) but in\\n  npm 7 they hard fail the install\\n- build: added npm version check (33e656cad32b865f960dbd88abf4d3839c8377f0 /\\n  @goto-bus-stop)\\n\\n## Transloadit Plugin\\n\\n- Fixed a case where the plugin used stale file data.\\n- Fixed polling fallback bugs.\\n- Url concatenation is now more robust.\\n\\n## Misc\\n\\n- @uppy/companion: Docker tag release (#2771 / @kiloreux)\\n- @uppy/companion: Companion should respect previously set value for\\n  Accesss-Control-Allow-Methods (#2726 / @tim-kos, @mifi, @so-steve)\\n- @uppy/transloadit: fix polling fallback bugs (#2759 / @goto-bus-stop)\\n- @uppy/utils: added mp4 file type support \u2014 Safari 14.0 on Mac records audio\\n  using audio/mp4 MIME type which isn\'t currently recognised by Uppy (#2753 /\\n  @dominiceden)\\n\\nSee\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1260)\\nfor details."},{"id":"2021/01/1.25","metadata":{"permalink":"/blog/2021/01/1.25","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2021-01-1.25.md","source":"@site/blog/2021-01-1.25.md","title":"Uppy 1.25: right-to-left scripts, Ukrainian translation, Companion improvements","description":"Uppy 1.25 adds support for right-to-left scripts, Ukrainian translation and","date":"2021-01-29T00:00:00.000Z","tags":[],"readingTime":1.84,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 1.25: right-to-left scripts, Ukrainian translation, Companion improvements","date":"2021-01-29T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/1.25/right-to-left.jpg","published":true,"slug":"2021/01/1.25"},"unlisted":false,"prevItem":{"title":"Uppy 1.26: Dashboard \u201cdisabled\u201d, per-file headers","permalink":"/blog/2021/02/1.26"},"nextItem":{"title":"Uppy 1.24: \ud83c\udf85 Happy Holidays \u2014 Svelte, React hook, Auto Open Image Editor","permalink":"/blog/2020/12/1.24"}},"content":"Uppy 1.25 adds support for right-to-left scripts, Ukrainian translation and\\nvarious improvements for Companion.\\n\\nJust see how cool this looks, and read further for a video demo and some behind\\nthe scenes implementation sorcery:\\n\\n![Uppy Dashboard UI flipped for right-to-left Arabic language](/img/blog/1.25/right-to-left.jpg)\\n\\n\x3c!--truncate--\x3e\\n\\n## Right-to-left scripts\\n\\nRen\xe9e have improved support for right-to-left scripts (such as Arabic, Farsi,\\nHebrew). This means that Uppy UI can now be mirrored, like how you might see on\\nsites like\\n[Wikipedia](https://ar.wikipedia.org/wiki/%D8%A7%D9%84%D8%B5%D9%81%D8%AD%D8%A9_%D8%A7%D9%84%D8%B1%D8%A6%D9%8A%D8%B3%D9%8A%D8%A9).\\n\\n<video alt=\\"Demo video showing Uppy with right-to-left mirrored UI\\" poster=\\"/img/blog/1.25/right-to-left.jpg\\" muted autoplay loop>\\n  <source src=\\"/img/blog/1.25/right-to-left.mp4\\" type=\\"video/mp4\\" />\\n  Your browser does not support the video tag: https://uppy.io/img/blog/img/blog/1.25/right-to-left.mp4\\n</video>\\n\\nHTML `dir` attribute can be used to set the direction \u2014 any parent element of\\nthe Dashboard may have it. It\u2019s good practice for sites to add a dir attribute\\non `<html>` element, but for backwards compatibility the Dashboard will default\\nto left-to-right rendering.\\n\\nThe text direction can also be set in code using the new `direction` option for\\nthe Dashboard plugin. This is useful for the modal dashboard, which would\\ntypically be mounted in the `<body>` element, so there is no other parent\\nelement that you could set the `dir` attribute on (aside from `<body>` and\\n`<html>`, which sites _should_ do, but may not).\\n\\n> Head over to the\\n> [#2705 PR description and code](https://github.com/transloadit/uppy/pull/2705),\\n> if you are interested in how this is implemented, using new CSS properties\\n> like `inline-start` and `inline-end` with `postcss-logical` and\\n> `postcss-dir-pseudo-class` for the fallback.\\n\\n## Locales\\n\\n[@DenysNosov](https://github.com/elkebab) contributed a Ukrainian translation\\nand fixes for Russian grammar!\\n\\n## Integration Guide\\n\\nAndrew, who\u2019s been on fire recently adding Vue and Svelte integrations for Uppy,\\nhas taken the time to share his experience and has written an \u201cAdding a new\\nintegration\u201d guide, in case you\u2019d like to help befriend Uppy with your favorite\\nframework or library.\\n\\n## Companion\\n\\n- Added support for setting 3rd party credentials in runtime\\n- Metadata is now passed to S3\\n- Support for `opts.companionCookiesRule` rule\\n- Delete tus error\u2019s `originalRequest` field before propagating error\\n- Companion now uses multi-stage docker build\\n\\n## Misc\\n\\n- @uppy/dashboard: emit fileId on both file-edit-start and file-edit-complete\\n  events\\n- @uppy/box: added Box to Uppy CDN\\n\\nSee\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1250)\\nfor details."},{"id":"2020/12/1.24","metadata":{"permalink":"/blog/2020/12/1.24","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2020-12-1.24.md","source":"@site/blog/2020-12-1.24.md","title":"Uppy 1.24: \ud83c\udf85 Happy Holidays \u2014 Svelte, React hook, Auto Open Image Editor","description":"Uppy 1.24 adds an experimental Svelte integration, additional React components,","date":"2020-12-24T00:00:00.000Z","tags":[],"readingTime":2.08,"hasTruncateMarker":true,"authors":[{"name":"renee"}],"frontMatter":{"title":"Uppy 1.24: \ud83c\udf85 Happy Holidays \u2014 Svelte, React hook, Auto Open Image Editor","date":"2020-12-24T00:00:00.000Z","author":"renee","image":"https://uppy.io/img/blog/1.24/uppy-svelte.png","published":true,"slug":"2020/12/1.24"},"unlisted":false,"prevItem":{"title":"Uppy 1.25: right-to-left scripts, Ukrainian translation, Companion improvements","permalink":"/blog/2021/01/1.25"},"nextItem":{"title":"Uppy 1.23: Vue.js, Box, Done button and cloud file restrictions","permalink":"/blog/2020/11/1.23"}},"content":"Uppy 1.24 adds an experimental Svelte integration, additional React components,\\n`autoOpenFileEditor` option for Dashboard, and a Norwegian (bokm\xe5l) translation!\\n\\n![](/img/blog/1.24/uppy-svelte.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Svelte\\n\\nLast month we introduced the first release of official Vue.js components for\\nUppy. This month, we\'re releasing `@uppy/svelte`: a set of components for the\\nSvelte framework. Credit, once again, goes to\\n[Andrew Kachnic](https://github.com/ajkachnic) (and special thanks to\\n[Adam Medford](https://github.com/adammedford))!\\n\\n```sh\\nnpm install @uppy/svelte\\n```\\n\\n```html\\n<main><Dashboard uppy={uppy} plugins={[\'Webcam\']} /></main>\\n\\n<script>\\n\\timport { Dashboard } from \'@uppy/svelte\';\\n\\n\\timport Uppy from \'@uppy/core\';\\n\\timport Webcam from \'@uppy/webcam\';\\n\\n\\tlet uppy = new Uppy().use(Webcam);\\n<\/script>\\n```\\n\\nPlease see [the Uppy Svelte documentation](https://uppy.io/docs/svelte/) for all\\nthe components.\\n\\n## React\\n\\nThe `@uppy/react` package now contains `<FileInput />`, a wrapper for the\\n`@uppy/file-input` plugin. It can render simple HTML file input or button, for\\nsituations where a flashy user interface is not desired.\\n\\nAdditionally, `useUppy()` is our first React Hook, made to manage the lifecycle\\nof Uppy instances. Without this, it\'s easy to accidentally create many garbage\\nUppy instances in modern React code.\\n\\n```js\\nimport { FileInput, useUppy } from \'@uppy/react\';\\nimport Uppy from \'@uppy/core\';\\nimport Tus from \'@uppy/tus\';\\n\\nfunction MyUploader() {\\n\\tconst uppy = useUppy(() => {\\n\\t\\treturn new Uppy().use(Tus, { endpoint: \'https://tusd.tusdemo.net\' });\\n\\t});\\n\\n\\t// useUppy() will automatically `.close()` the Uppy instance for us when\\n\\t// MyUploader unmounts.\\n\\n\\treturn <FileInput uppy={uppy} />;\\n}\\n```\\n\\nThis does not solve all our problems yet: dynamic configuration is still\\ndifficult to do right, due to the mismatch between React\'s declarative and\\nUppy\'s imperative style. We hope to add more documentation and tools to bridge\\nthe gap in the new year.\\n\\n## Locales\\n\\n[@elkebab](https://github.com/elkebab) contributed a Norwegian translation!\\n\\n## Auto Open Image Editor\\n\\nIf you are using Image Editor plugin with the Dashboard, there\u2019s a new option\\n[`autoOpenFileEditor`](https://uppy.io/docs/dashboard/#autoOpenFileEditor-false),\\nwhich will open Image Editor automatically for the first image that was added to\\nUppy.\\n\\n```js\\nconst uppy = new Uppy().use(Dashboard, {\\n\\tautoOpenFileEditor: true,\\n});\\n```\\n\\n<img className=\\"border\\" src=\\"/img/blog/1.24/image-editor-alone.jpg\\" alt=\\"Uppy Image Editor in Dashboard\\" />\\n\\n## Misc\\n\\n- @uppy/core: new event `files-added` with all files added in one batch (#2681 /\\n  @arturi)\\n- @uppy/utils: Add archive mime types (#2703 / @ahmedkandel)\\n- @uppy/companion: fix crash when Dropbox API returns an error (#2687 /\\n  @ifedapoolarewaju)\\n\\nSee\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#1240)\\nfor details.\\n\\n## Happy Holidays!\\n\\nMany thanks to all our contributors and users over the past year! Uppy has\\ngained quite a few new features and important improvements in 2020 (despite\\neverything going on offline!). We hope to see you again soon in our first\\nrelease of 2021 :)"},{"id":"2020/11/1.23","metadata":{"permalink":"/blog/2020/11/1.23","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2020-11-1.23.md","source":"@site/blog/2020-11-1.23.md","title":"Uppy 1.23: Vue.js, Box, Done button and cloud file restrictions","description":"Uppy 1.23 brings Vue.js components \ud83d\udca5, Box file service support, a \u201cDone\u201d button","date":"2020-11-30T00:00:00.000Z","tags":[],"readingTime":2.57,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 1.23: Vue.js, Box, Done button and cloud file restrictions","date":"2020-11-30T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/1.23/vue-code-cover.png","published":true,"slug":"2020/11/1.23"},"unlisted":false,"prevItem":{"title":"Uppy 1.24: \ud83c\udf85 Happy Holidays \u2014 Svelte, React hook, Auto Open Image Editor","permalink":"/blog/2020/12/1.24"},"nextItem":{"title":"\ud83c\udf83 Uppy 1.22: Webcam camera source, Unsplash and maxTotalFileSize","permalink":"/blog/2020/10/1.22"}},"content":"Uppy 1.23 brings Vue.js components \ud83d\udca5, Box file service support, a \u201cDone\u201d button\\nfor the Status Bar + Dashboard, and a better cloud file restrictions UI.\\n\\n![Vue.js Uppy code sample](/img/blog/1.23/vue-code-cover.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Vue.js\\n\\nWe\u2019ve had [Uppy React components](https://uppy.io/docs/react/) available for\\nquite some time now. With the increasing popularity of Vue.js library, we\u2019re\\nproud to announce it\u2019s now much easier to use\\n[Uppy with Vue](https://uppy.io/docs/vue/), thanks to the amazing work by\\n[Andrew Kachnic](https://mobile.twitter.com/su_andrewk):\\n\\n```sh\\nnpm install @uppy/vue\\n```\\n\\n```html\\n<template>\\n\\t<div id=\\"app\\">\\n\\t\\t<dashboard :uppy=\\"uppy\\" :plugins=\\"[\'Webcam\']\\" />\\n\\t</div>\\n</template>\\n\\n<script>\\n\\timport { Dashboard } from \'@uppy/vue\';\\n\\n\\timport \'@uppy/core/dist/style.css\';\\n\\timport \'@uppy/dashboard/dist/style.css\';\\n\\n\\timport Uppy from \'@uppy/core\';\\n\\timport Webcam from \'@uppy/webcam\';\\n\\n\\texport default {\\n\\t\\tname: \'App\',\\n\\t\\tcomponents: {\\n\\t\\t\\tDashboard,\\n\\t\\t},\\n\\t\\tcomputed: {\\n\\t\\t\\tuppy: () => new Uppy().use(Webcam),\\n\\t\\t},\\n\\t\\tbeforeDestroy() {\\n\\t\\t\\tthis.uppy.close();\\n\\t\\t},\\n\\t};\\n<\/script>\\n```\\n\\n`@uppy/vue` package provides components for all of the most popular Uppy UI\\nplugins:\\n\\n- `<dashboard />` - renders an inline `@uppy/dashboard`\\n- `<dashboard-modal />` - renders a `@uppy/dashboard` modal\\n- `<drag-drop />` - renders a `@uppy/drag-drop` area\\n- `<progress-bar />` - renders a `@uppy/progress-bar`\\n- `<status-bar />` - renders a `@uppy/status-bar`\\n\\nCheck out the [Vue documentation](https://uppy.io/docs/vue/) for details.\\n\\nAngular and Svelte support is on our list next.\\n\\n## Cloud File Restrictions\\n\\nDropbox, Instagram, Google Drive and other cloud providers now immediately gray\\nout files that won\u2019t pass Uppy restrictions set by the developer:\\n\\n![Google Drive restrictions example](/img/blog/1.23/restrictions-1.jpg)\\n\\n![Instagram restrictions example](/img/blog/1.23/restrictions-2.jpg)\\n\\n## Done Button\\n\\nIf [`doneButtonHandler`](https://uppy.io/docs/dashboard/#doneButtonHandler)\\noption is passed to the Status Bar plugin, it will render a \u201cDone\u201d button in\\nplace of Pause/Resume/Cancel buttons, once the upload/encoding is done. The\\nbehaviour of the \u201cDone\u201d button is defined by the handler function \u2014 can be used\\nto close file picker modals or clear the upload state.\\n\\n<img className=\\"border\\" alt=\\"Status Bar Done button UI\\" src=\\"/img/blog/1.23/status-bar-done.jpg\\" />\\n\\nBy default the Done button will close the Dashboard modal window and reset Uppy\\nstate.\\n\\n## Box File Provider\\n\\nThanks to [@cartfisk](https://github.com/cartfisk) Uppy gains support for Box\\nfile service. You can add try it out by doing `npm install @uppy/box` and\\nupgrading `@uppy/companion` to the latest version.\\n\\nBragging moment, here\u2019s what\\n[@cartfish had to say about Uppy](https://github.com/transloadit/uppy/pull/2549#issue-491527196):\\n\\n> Hope this is useful! Hats off to the awesome React integration, easy\\n> contribution workflow, helpful docs, and readable, clean code. 10/10.\\n\\n## Image Editor Optional Buttons\\n\\n`@uppy/image-editor` plugin got support for optional buttons \u2014 you can choose to\\nhide or show just the ones you need \u2014 crop, rotate, square, landscape, etc.\\nThanks, [@lamartire](https://github.com/lamartire)!\\n\\nSee new [`actions`](https://uppy.io/docs/image-editor/#Options) property in the\\nImage Editor\u2019s options.\\n\\n## Misc\\n\\n- @uppy/robodog: Update addTransloaditPlugin.js to include missing configurable\\n  Transloadit plugin options (#2612 / @ethanwillis)\\n- @uppy/core: add `uppy.opts.infoTimeout` (#2619 / @arturi)\\n- @uppy/onedrive: fix OneDrive for Business (#2536 / @szh)\\n- @uppy/image-editor: show \u201cedit\u201d icon even when metaFields are not specified\\n  (#2614 / @arturi)\\n- test: added test DeepFrozenStore with deepFreeze to try and assert that state\\n  in not mutated anywhere by accident (#2607 / @arturi)\\n- build: switched from Travis to GitHub Actions (@goto-bus-stop)\\n\\nAs always, you can find the full list of changes and package versions, as well\\nas future plans, in our\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md)."},{"id":"2020/10/1.22","metadata":{"permalink":"/blog/2020/10/1.22","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2020-10-1.22.md","source":"@site/blog/2020-10-1.22.md","title":"\ud83c\udf83 Uppy 1.22: Webcam camera source, Unsplash and maxTotalFileSize","description":"Uppy 1.22 (the spooky Halloween edition) adds a new Unsplash provider, Webcam","date":"2020-10-30T00:00:00.000Z","tags":[],"readingTime":1.35,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"\ud83c\udf83 Uppy 1.22: Webcam camera source, Unsplash and maxTotalFileSize","date":"2020-10-30T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/1.22/unsplash.jpg","published":true,"slug":"2020/10/1.22"},"unlisted":false,"prevItem":{"title":"Uppy 1.23: Vue.js, Box, Done button and cloud file restrictions","permalink":"/blog/2020/11/1.23"},"nextItem":{"title":"Companion 2.0 is here","permalink":"/blog/2020/09/companion-2.0"}},"content":"Uppy 1.22 (the spooky Halloween edition) adds a new Unsplash provider, Webcam\\ncamera selector dropdown and a `maxTotalFileSize` restriction.\\n\\n\x3c!--truncate--\x3e\\n\\n## Webcam Camera Source\\n\\nIf your device has multiple cameras, you can now choose which one you want to\\nuse (if you allow the\\n[showVideoSourceDropdown](https://uppy.io/docs/webcam/#showVideoSourceDropdown-false)\\noption).\\n\\n![](/img/blog/1.22/webcam-dropdown-full.png)\\n\\n![](/img/blog/1.22/webcam-dropdown-short.png)\\n\\n## maxTotalFileSize\\n\\nNew `maxTotalFileSize` restriction makes sure the total size of all the files\\nselected isn\u2019t over a certain threshold:\\n\\n```js\\nconst uppy = new Uppy({\\n\\trestrictions: {\\n\\t\\tmaxTotalFileSize: 104857600,\\n\\t},\\n});\\n```\\n\\n## Unsplash\\n\\n[Unsplash](https://unsplash.com/) is a popular website dedicated to sharing free\\nstock photography. With a new Uppy plugin you can search for \u201ctrains\u201d, \u201cNew\\nYork\u201d or \u201cHarry Potter\u201d images and upload them where needed:\\n\\n![](/img/blog/1.22/unsplash.jpg)\\n\\nThe plugin launches in beta, but you can already try it out by installing\\n`@uppy/unsplash` and upgrading `@uppy/companion` to the latest version (2.1.0).\\n\\n## Misc\\n\\n- @uppy/companion: add option to hide welcome and metrics (#2521 / @szh)\\n- @uppy/companion: add more test cases to companion tests (#2585 /\\n  @ifedapoolarewaju)\\n- @uppy/companion: upgrade prometheus (fixes memory leak) (#2600 /\\n  @ifedapoolarewaju)\\n- @uppy/locales: update th_TH.js (#2571 / @dogrocker)\\n- @uppy/locales: add missing camera translations to de_DE (#2574 / @ferdiusa)\\n- @uppy/locales: update el_GR.js with more proper wording for Drag\'n\'Drop (#2578\\n  / @aalepis)\\n- @uppy/core: add postprocess progress when upload success (#2535 / @mejiaej)\\n- @uppy/react: Webpack5: Fix react imports (#2589 / @olemoign)\\n- @uppy/thumbnail-generator: Add support for png thumbnails (#2603 / @SxDx)\\n- website: mobile issues fixes + compact Companion migration table (#2593 /\\n  @nqst)\\n\\nAs always, you can find the full list of changes and package versions, as well\\nas future plans, in our\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md)."},{"id":"2020/09/companion-2.0","metadata":{"permalink":"/blog/2020/09/companion-2.0","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2020-09-companion-2.0.md","source":"@site/blog/2020-09-companion-2.0.md","title":"Companion 2.0 is here","description":"We are happy to announce version 2.0 of Companion! \ud83c\udf89 After maintaining and","date":"2020-09-09T00:00:00.000Z","tags":[],"readingTime":1.565,"hasTruncateMarker":true,"authors":[{"name":"ife"}],"frontMatter":{"title":"Companion 2.0 is here","date":"2020-09-09T00:00:00.000Z","author":"ife","published":true,"slug":"2020/09/companion-2.0"},"unlisted":false,"prevItem":{"title":"\ud83c\udf83 Uppy 1.22: Webcam camera source, Unsplash and maxTotalFileSize","permalink":"/blog/2020/10/1.22"},"nextItem":{"title":"Image Editor \ud83c\udf08","permalink":"/blog/2020/07/1.18-image-editor"}},"content":"We are happy to announce version 2.0 of Companion! \ud83c\udf89 After maintaining and\\nimproving the 1.x series for over a year, we\'re now releasing a major version\\nbump on the Companion package. The drive on this release is mainly towards\\nfixing some terminology inconsistencies and aligning with Node.js LTS to ease\\nthe maintenance burden.\\n\\n\x3c!--truncate--\x3e\\n\\nSo what are the changes you can expect with Companion 2.0?\\n\\n## Node >= v10\\n\\nNode.js 8.x has reached end-of-life. Consequently, Companion 2.0 has dropped\\nsupport for Node.js 6.x and Node.js 8.x, and now requires that you run at least\\nNode.js 10.20.1.\\n\\n## Renamed provider options\\n\\nPre 2.0, there were inconsistencies in relation to the provider names. In some\\nplaces, the Google Drive provider was referred to as _google_ (e.g., in\\n`providerOptions`) while in some other places, it was referred to as _drive_\\n(e.g., the server endpoints `/drive/list`). Companion 2.0 now consistently uses\\nthe name _drive_ everywhere. Similarly, the OneDrive provider was made to have\\nthe consistent name _onedrive_.\\n\\n## Changed Redirect URIs\\n\\nOn the topic of consistent naming, we have also made some changes to the\\nredirect URIs supplied during the OAuth process. For example, in the case of\\nGoogle Drive, the form of the old redirect URI was\\n`https://mycompanionwebsite.tld/connect/google/callback`. In Companion 2.0, this\\nis now changed to `https://mycompanionwebsite.tld/drive/redirect`. This is a\\nBreaking Change: you will need to make the corresponding changes to your\\nredirect URIs on your Providers\' API Dashboards.\\n\\n## Compatibility with Uppy 1.x client\\n\\nCompanion 2.0 is compatible with any Uppy 1.x version, so you don\'t have to\\nworry about upgrading your Uppy client installations when you upgrade Companion\\non your server.\\n\\n## Will Companion v1 still receive updates?\\n\\nCompanion 1.x will continue to receive security patches until March 1, 2021.\\n\\n## Migrating from Companion 1.x to 2.x\\n\\nGiven the breaking changes, we\'ve created a\\n[migration tutorial for upgrading from Companion v1 to v2](https://uppy.io/docs/companion/#Migrating-v1-to-v2)."},{"id":"2020/07/1.18-image-editor","metadata":{"permalink":"/blog/2020/07/1.18-image-editor","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2020-07-1.18-image-editor.md","source":"@site/blog/2020-07-1.18-image-editor.md","title":"Image Editor \ud83c\udf08","description":"One of the most-requested Uppy features, the","date":"2020-07-21T00:00:00.000Z","tags":[],"readingTime":1.23,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Image Editor \ud83c\udf08","date":"2020-07-21T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/1.18-image-editor/image-editor-dashboard.jpg","published":true,"slug":"2020/07/1.18-image-editor"},"unlisted":false,"prevItem":{"title":"Companion 2.0 is here","permalink":"/blog/2020/09/companion-2.0"},"nextItem":{"title":"Adding Custom Providers: Step by Step Tutorial to add Custom Providers","permalink":"/blog/2020/03/custom-providers"}},"content":"One of the most-requested Uppy features, the\\n[Image Editor](/docs/image-editor/), has landed (as beta) in 1.18.\\n\\n<video alt=\\"Demo video showing Uppy with Image Editor plugin \u2014 cropping, rotating and resizing images\\" poster=\\"https://uppy.io/img/blog/1.18-image-editor/image-editor-dashboard.jpg\\" muted autoplay loop>\\n  <source src=\\"/img/blog/1.18-image-editor/image-editor-demo.mp4\\" type=\\"video/mp4\\" />\\n  Your browser does not support the video tag: https://uppy.io/img/blog/1.18-image-editor/image-editor-demo.mp4\\n</video>\\n\\n\x3c!--truncate--\x3e\\n\\nThe editor currently supports cropping, resizing, rotating, flipping and zooming\\nyour images in and out. You can try it out on\\n[the Dashboard example page](/examples/dashboard/).\\n\\nUnder the hood we are using the excellent open source (just like Uppy itself)\\n[Cropper.js](https://fengyuanchen.github.io/cropperjs/) library.\\n\\n```sh\\nnpm install @uppy/image-editor\\n```\\n\\n```js\\nconst Uppy = require(\'@uppy/core\');\\nconst Dashboard = require(\'@uppy/dashboard\');\\nconst ImageEditor = require(\'@uppy/image-editor\');\\n\\nconst uppy = new Uppy();\\nuppy.use(Dashboard);\\nuppy.use(ImageEditor, {\\n\\ttarget: Dashboard,\\n\\tquality: 0.8, // for the resulting image, 0.8 is a sensible default\\n});\\n```\\n\\n![Uppy with Image Editor plugin screenshot \u2014 cropping, rotating and resizing images](https://uppy.io/img/blog/1.18-image-editor/image-editor-dashboard.jpg)\\n\\nThe Image Editor plugin is meant to be used with the Dashboard UI, but in theory\\nit can work without it, rendered somewhere else. This has not been tested, try\\nat your own risk ;-)\\n\\nYou can\\n[override the options from Cropper.js](https://uppy.io/docs/image-editor/#cropperOptions),\\ntoo. Check out\\n[the docs for up to date options and events](https://uppy.io/docs/image-editor).\\n\\nPlease leave your feedback\\n[on Twitter](https://mobile.twitter.com/uppy_io/status/1285532376249110528).\\n\\n<blockquote class=\\"twitter-tweet\\"><p lang=\\"en\\" dir=\\"ltr\\">\ud83d\uddbc One of the most-requested Uppy features, the Image Editor, for cropping, resizing, rotating, flipping and zooming your images is live now! <br/><br/>Check it out: <a href=\\"https://t.co/dDXRoW0HGj\\">https://t.co/dDXRoW0HGj</a> <a href=\\"https://t.co/IhYo0gwtvP\\">pic.twitter.com/IhYo0gwtvP</a></p>&mdash; Uppy (@uppy_io) <a href=\\"https://twitter.com/uppy_io/status/1285532376249110528?ref_src=twsrc%5Etfw\\">July 21, 2020</a></blockquote> <script async src=\\"https://platform.twitter.com/widgets.js\\" charset=\\"utf-8\\"><\/script>"},{"id":"2020/03/custom-providers","metadata":{"permalink":"/blog/2020/03/custom-providers","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2020-03-custom-providers.md","source":"@site/blog/2020-03-custom-providers.md","title":"Adding Custom Providers: Step by Step Tutorial to add Custom Providers","description":"In this post we will be going through a step by step tutorial on how to develop,","date":"2020-06-08T00:00:00.000Z","tags":[],"readingTime":8.94,"hasTruncateMarker":true,"authors":[{"name":"ife"}],"frontMatter":{"title":"Adding Custom Providers: Step by Step Tutorial to add Custom Providers","date":"2020-06-08T00:00:00.000Z","author":"ife","published":false,"slug":"2020/03/custom-providers"},"unlisted":false,"prevItem":{"title":"Image Editor \ud83c\udf08","permalink":"/blog/2020/07/1.18-image-editor"},"nextItem":{"title":"Uppy 1.11 \u2014 1.13: Dark Mode, custom meta fields and Google Docs in Companion","permalink":"/blog/2020/04/1.13"}},"content":"In this post we will be going through a step by step tutorial on how to develop,\\nand add custom providers to Uppy and Companion. For the purpose of this tutorial\\nwe will be building a custom provider for [Unsplash](https://unsplash.com/).\\n\\n\x3c!--truncate--\x3e\\n\\n## What are Provider Plugins?\\n\\n> Provider Plugins help you connect to your accounts with remote file storage\\n> providers such as Dropbox, Google Drive, Instagram and remote URLs.\\n>\\n> They work tightly with\\n> [Companion](https://www.npmjs.com/package/@uppy/companion) \u2014 Uppy\'s\\n> server-to-server communication handler between your server and file storage\\n> providers.\\n\\nCreating a custom provider composes of two parts; **Custom Companion Provider**\\nand **Custom Uppy Plugin**\\n\\n## Creating a Custom Companion Provider\\n\\nOn the Companion side, we need to create a Provider that receives the provider\\nrelated requests that would come from Uppy.\\n\\n### Setting up Companion\\n\\nWe\'ll start off by setting up a minimal express server.\\n\\n1. Create a folder named \\"custom-provider\\" and navigate into it\\n\\n```sh\\nmkdir custom-provider\\ncd custom-provider\\n```\\n\\n2. Run `npm init` to setup your `package.json` file\\n3. install express, express-session, body-parser, request, uppy and\\n   @uppy/companion\\n\\n```sh\\nnpm i -S express express-session body-parser request @uppy/companion uppy\\n```\\n\\nwith all that done, my package.json file looks something like this:\\n\\n```json\\n{\\n\\t\\"name\\": \\"custom-provider\\",\\n\\t\\"dependencies\\": {\\n\\t\\t\\"body-parser\\": \\"^1.18.2\\",\\n\\t\\t\\"express\\": \\"^4.16.2\\",\\n\\t\\t\\"express-session\\": \\"^1.15.6\\",\\n\\t\\t\\"request\\": \\"^2.88.0\\",\\n\\t\\t\\"uppy\\": \\"^1.16.1\\",\\n\\t\\t\\"@uppy/companion\\": \\"^2.0.0\\"\\n\\t},\\n\\t\\"private\\": true,\\n\\t\\"scripts\\": {}\\n}\\n```\\n\\n4. Create a `server/index.js` file within the project and add initiate your\\n   express server\\n\\n```js\\nconst express = require(\'express\');\\nconst companion = require(\'@uppy/companion\');\\nconst bodyParser = require(\'body-parser\');\\nconst session = require(\'express-session\');\\n\\nconst app = express();\\n\\napp.use(bodyParser.json());\\napp.use(\\n\\tsession({\\n\\t\\tsecret: \'some-secret\',\\n\\t\\tresave: true,\\n\\t\\tsaveUninitialized: true,\\n\\t}),\\n);\\n\\napp.use((req, res, next) => {\\n\\tres.setHeader(\'Access-Control-Allow-Origin\', req.headers.origin || \'*\');\\n\\tres.setHeader(\\n\\t\\t\'Access-Control-Allow-Methods\',\\n\\t\\t\'GET, POST, OPTIONS, PUT, PATCH, DELETE\',\\n\\t);\\n\\tres.setHeader(\\n\\t\\t\'Access-Control-Allow-Headers\',\\n\\t\\t\'Authorization, Origin, Content-Type, Accept\',\\n\\t);\\n\\tnext();\\n});\\n\\n// initialize uppy\\nconst companionOptions = {\\n\\tproviderOptions: {\\n\\t\\tdropbox: {\\n\\t\\t\\tkey: \'your Dropbox key\',\\n\\t\\t\\tsecret: \'your Dropbox secret\',\\n\\t\\t},\\n\\t},\\n\\tserver: {\\n\\t\\thost: \'localhost:3020\',\\n\\t\\tprotocol: \'http\',\\n\\t},\\n\\tfilePath: \'./output\',\\n\\tsecret: \'some-secret\',\\n\\tdebug: true,\\n};\\n\\napp.use(companion.app(companionOptions));\\n\\n// handle 404\\napp.use((req, res, next) => {\\n\\treturn res.status(404).json({ message: \'Not Found\' });\\n});\\n\\ncompanion.socket(app.listen(3020));\\n\\nconsole.log(\'Welcome to Companion!\');\\nconsole.log(`Listening on http://0.0.0.0:3020`);\\n```\\n\\nThe code snippet above sets up an express server and plugs Companion into it.\\nHowever, the Companion setup doesn\'t include a custom provider yet. It only\\nincludes the Dropbox provider.\\n\\nTo be sure everything is working correctly so far, you can start the server by\\nrunning:\\n\\n`node server/index.js`\\n\\nIt should log the following message in the console:\\n\\n```sh\\nWelcome to Companion!\\nListening on http://0.0.0.0:3020\\n```\\n\\nNow we need to proceed to add our custom provider.\\n\\n### Setting up Unsplash API\\n\\nHead to Unsplash\'s [developer platform](https://unsplash.com/oauth/applications)\\n(you\'d need to create an account if you don\'t already have one).\\n\\nClick \\"New Application\\" to create a new application. For the sake of this\\ntutorial, I am naming my application \\"companion-provider\\". Once it is created,\\nyour page should look something like this:\\n\\n![](/img/blog/custom-providers/unsplash-api-dashboard.png)\\n\\n### Writing the custom provider\\n\\nBack to our project directory, we are going to create a\\n`server/customprovider.js` file. This will contain the code that implements the\\nUnsplash provider.\\n\\nAccording to\\n[the docs](https://uppy.io/docs/companion/#Adding-custom-providers), we need to\\ncreate a class that implements the methods `list`, `download`, and `size`.\\n\\nThe constructor of our class will look something like this:\\n\\n```js\\nclass MyCustomProvider {\\n\\tstatic authProvider = \'google\'; // the name of the OAuth provider to use (lowercased)\\n\\t// ...\\n}\\n```\\n\\nOur `list` method would look something like this\\n\\n```js\\nlist ({ token, directory }, done) {\\n  const path = directory ? `/${directory}/photos` : \'\'\\n  const options = {\\n    url: `${BASE_URL}/collections${path}`,\\n    method: \'GET\',\\n    json: true,\\n    headers: {\\n      Authorization: `Bearer ${token}`\\n    }\\n  }\\n\\n  request(options, (err, resp, body) => {\\n    if (err) {\\n      console.log(err)\\n      done(err)\\n      return\\n    }\\n\\n    done(null, this._adaptData(body))\\n  })\\n}\\n\\n_adaptData (res) {\\n  const data = {\\n    username: null,\\n    items: [],\\n    nextPagePath: null\\n  }\\n\\n  const items = res\\n  items.forEach((item) => {\\n    const isFolder = !!item.published_at\\n    data.items.push({\\n      isFolder: isFolder,\\n      icon: isFolder ? item.cover_photo.urls.thumb : item.urls.thumb,\\n      name: item.title || item.description,\\n      mimeType: isFolder ? null : \'image/jpeg\',\\n      id: item.id,\\n      thumbnail: isFolder ? item.cover_photo.urls.thumb : item.urls.thumb,\\n      requestPath: item.id,\\n      modifiedDate: item.updated_at,\\n      size: null\\n    })\\n  })\\n\\n  return data\\n}\\n```\\n\\nthe method makes an http request to the unsplash API based on the documentation\\nto [list collections](https://unsplash.com/documentation#list-collections) and\\n[list collection\'s photos](https://unsplash.com/documentation#get-a-collections-photos).\\nThe `_adaptData` method exists to help us conform to\\n[the list data](https://uppy.io/docs/companion/#list-data)\\n\\nOur `size` method will look something like this:\\n\\n```js\\nsize ({ id, token }, done) {\\n  const options = {\\n    url: `${BASE_URL}/photos/${id}`,\\n    method: \'GET\',\\n    json: true,\\n    headers: {\\n      Authorization: `Bearer ${token}`\\n    }\\n  }\\n\\n  request(options, (err, resp, body) => {\\n    if (err) {\\n      console.log(err)\\n      done(err)\\n      return\\n    }\\n\\n    done(null, body.width * body.height)\\n  })\\n}\\n```\\n\\nUnsplash\'s API doesn\'t provide the file size, so we are estimating it by\\nmultiplying the width and height of the image.\\n\\nThe `download` method will look like this:\\n\\n```js\\ndownload ({ id, token }, onData) {\\n  const options = {\\n    url: `${BASE_URL}/photos/${id}`,\\n    method: \'GET\',\\n    json: true,\\n    headers: {\\n      Authorization: `Bearer ${token}`\\n    }\\n  }\\n\\n  request(options, (err, resp, body) => {\\n    if (err) {\\n      console.log(err)\\n      return\\n    }\\n\\n    const url = body.links.download\\n    request.get(url)\\n      .on(\'data\', (chunk) => onData(null, chunk))\\n      .on(\'end\', () => onData(null, null))\\n      .on(\'error\', (err) => console.log(err))\\n  })\\n}\\n```\\n\\nWith all of this put together the entire file would look something like this:\\n\\n```js\\nconst request = require(\'request\');\\n\\nconst BASE_URL = \'https://api.unsplash.com\';\\n\\nclass MyCustomProvider {\\n\\tstatic authProvider = \'unsplash\'; // the name of the OAuth provider to use (lowercased)\\n\\n\\tlist({ token, directory }, done) {\\n\\t\\tconst path = directory ? `/${directory}/photos` : \'\';\\n\\t\\tconst options = {\\n\\t\\t\\turl: `${BASE_URL}/collections${path}`,\\n\\t\\t\\tmethod: \'GET\',\\n\\t\\t\\tjson: true,\\n\\t\\t\\theaders: {\\n\\t\\t\\t\\tAuthorization: `Bearer ${token}`,\\n\\t\\t\\t},\\n\\t\\t};\\n\\n\\t\\trequest(options, (err, resp, body) => {\\n\\t\\t\\tif (err) {\\n\\t\\t\\t\\tconsole.log(err);\\n\\t\\t\\t\\tdone(err);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tdone(null, this._adaptData(body));\\n\\t\\t});\\n\\t}\\n\\n\\tdownload({ id, token }, onData) {\\n\\t\\tconst options = {\\n\\t\\t\\turl: `${BASE_URL}/photos/${id}`,\\n\\t\\t\\tmethod: \'GET\',\\n\\t\\t\\tjson: true,\\n\\t\\t\\theaders: {\\n\\t\\t\\t\\tAuthorization: `Bearer ${token}`,\\n\\t\\t\\t},\\n\\t\\t};\\n\\n\\t\\trequest(options, (err, resp, body) => {\\n\\t\\t\\tif (err) {\\n\\t\\t\\t\\tconsole.log(err);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst url = body.links.download;\\n\\t\\t\\trequest\\n\\t\\t\\t\\t.get(url)\\n\\t\\t\\t\\t.on(\'data\', (chunk) => onData(null, chunk))\\n\\t\\t\\t\\t.on(\'end\', () => onData(null, null))\\n\\t\\t\\t\\t.on(\'error\', (err) => console.log(err));\\n\\t\\t});\\n\\t}\\n\\n\\tsize({ id, token }, done) {\\n\\t\\tconst options = {\\n\\t\\t\\turl: `${BASE_URL}/photos/${id}`,\\n\\t\\t\\tmethod: \'GET\',\\n\\t\\t\\tjson: true,\\n\\t\\t\\theaders: {\\n\\t\\t\\t\\tAuthorization: `Bearer ${token}`,\\n\\t\\t\\t},\\n\\t\\t};\\n\\n\\t\\trequest(options, (err, resp, body) => {\\n\\t\\t\\tif (err) {\\n\\t\\t\\t\\tconsole.log(err);\\n\\t\\t\\t\\tdone(err);\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tdone(null, body.width * body.height);\\n\\t\\t});\\n\\t}\\n\\n\\t_adaptData(res) {\\n\\t\\tconst data = {\\n\\t\\t\\tusername: null,\\n\\t\\t\\titems: [],\\n\\t\\t\\tnextPagePath: null,\\n\\t\\t};\\n\\n\\t\\tconst items = res;\\n\\t\\titems.forEach((item) => {\\n\\t\\t\\tconst isFolder = !!item.published_at;\\n\\t\\t\\tdata.items.push({\\n\\t\\t\\t\\tisFolder,\\n\\t\\t\\t\\ticon: isFolder ? item.cover_photo.urls.thumb : item.urls.thumb,\\n\\t\\t\\t\\tname: item.title || item.description,\\n\\t\\t\\t\\tmimeType: isFolder ? null : \'image/jpeg\',\\n\\t\\t\\t\\tid: item.id,\\n\\t\\t\\t\\tthumbnail: isFolder ? item.cover_photo.urls.thumb : item.urls.thumb,\\n\\t\\t\\t\\trequestPath: item.id,\\n\\t\\t\\t\\tmodifiedDate: item.updated_at,\\n\\t\\t\\t\\tsize: null,\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\treturn data;\\n\\t}\\n}\\n\\nmodule.exports = MyCustomProvider;\\n```\\n\\nNow we can go back to `server/index.js` to enable our custom provider:\\n\\n```js\\n// initialize uppy\\nconst uppyOptions = {\\n\\tproviderOptions: {\\n\\t\\tdropbox: {\\n\\t\\t\\tkey: \'your Dropbox key\',\\n\\t\\t\\tsecret: \'your Dropbox secret\',\\n\\t\\t},\\n\\t},\\n\\tcustomProviders: {\\n\\t\\tmyunsplash: {\\n\\t\\t\\tconfig: {\\n\\t\\t\\t\\t// source https://unsplash.com/documentation#user-authentication\\n\\t\\t\\t\\tauthorize_url: \'https://unsplash.com/oauth/authorize\',\\n\\t\\t\\t\\taccess_url: \'https://unsplash.com/oauth/token\',\\n\\t\\t\\t\\toauth: 2,\\n\\t\\t\\t\\tkey: \'YOUR UNSPLASH API KEY\',\\n\\t\\t\\t\\tsecret: \'YOUR UNSPLASH API SECRET\',\\n\\t\\t\\t},\\n\\t\\t\\t// you provider module\\n\\t\\t\\tmodule: require(\'./customprovider\'),\\n\\t\\t},\\n\\t},\\n\\tserver: {\\n\\t\\thost: \'localhost:3020\',\\n\\t\\tprotocol: \'http\',\\n\\t},\\n\\tfilePath: \'./output\',\\n\\tsecret: \'some-secret\',\\n\\tdebug: true,\\n};\\n```\\n\\nYou can find your unsplash API key on your Unsplash\\n[app dashboard](https://unsplash.com/oauth/applications)\\n\\n## Creating a Custom Uppy Plugin\\n\\nNow we need to implement the client part of this. To do this we need to\\nimplement an Uppy Plugin.\\n\\nFirst, we\'ll create a `client/MyCustomProvider.js` file. Following the\\ninstructions [here](https://uppy.io/docs/writing-plugins/), our Uppy Plugin (aka\\n`client/MyCustomProvider.js` file) could look something like this:\\n\\n```js\\nconst { UIPlugin } = require(\'@uppy/core\');\\nconst { Provider } = require(\'@uppy/companion-client\');\\nconst { ProviderViews } = require(\'@uppy/provider-views\');\\nconst { h } = require(\'preact\');\\n\\nmodule.exports = class MyCustomProvider extends UIPlugin {\\n\\tconstructor(uppy, opts) {\\n\\t\\tsuper(uppy, opts);\\n\\t\\tthis.type = \'acquirer\';\\n\\t\\tthis.id = this.opts.id || \'MyCustomProvider\';\\n\\t\\tProvider.initPlugin(this, opts);\\n\\n\\t\\tthis.title = \'MyUnsplash\';\\n\\t\\tthis.icon = () => (\\n\\t\\t\\t<svg width=\\"32\\" height=\\"32\\" xmlns=\\"http://www.w3.org/2000/svg\\">\\n\\t\\t\\t\\t<path\\n\\t\\t\\t\\t\\td=\\"M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z\\"\\n\\t\\t\\t\\t\\tfill=\\"#000000\\"\\n\\t\\t\\t\\t\\tfill-rule=\\"nonzero\\"\\n\\t\\t\\t\\t/>\\n\\t\\t\\t</svg>\\n\\t\\t);\\n\\n\\t\\tthis.provider = new Provider(uppy, {\\n\\t\\t\\tcompanionUrl: this.opts.companionUrl,\\n\\t\\t\\tcompanionHeaders: this.opts.companionHeaders,\\n\\t\\t\\tprovider: \'myunsplash\',\\n\\t\\t\\tpluginId: this.id,\\n\\t\\t});\\n\\n\\t\\tthis.files = [];\\n\\t\\tthis.onFirstRender = this.onFirstRender.bind(this);\\n\\t\\tthis.render = this.render.bind(this);\\n\\n\\t\\t// merge default options with the ones set by user\\n\\t\\tthis.opts = { ...opts };\\n\\t}\\n\\n\\tinstall() {\\n\\t\\tthis.view = new ProviderViews(this, {\\n\\t\\t\\tprovider: this.provider,\\n\\t\\t});\\n\\n\\t\\tconst { target } = this.opts;\\n\\t\\tif (target) {\\n\\t\\t\\tthis.mount(target, this);\\n\\t\\t}\\n\\t}\\n\\n\\tuninstall() {\\n\\t\\tthis.view.tearDown();\\n\\t\\tthis.unmount();\\n\\t}\\n\\n\\tonFirstRender() {\\n\\t\\treturn this.view.getFolder();\\n\\t}\\n\\n\\trender(state) {\\n\\t\\treturn this.view.render(state);\\n\\t}\\n};\\n```\\n\\nAsides from implementing the methods required by the Uppy Plugin, we are also\\nimplmeneting the method `onFirstRender`. This is because we are using the\\n[@uppy/provider-views](https://www.npmjs.com/package/@uppy/provider-views)\\npackage to reuse its UI componenets. The\\n[@uppy/provider-views](https://www.npmjs.com/package/@uppy/provider-views)\\npackage requires that our plugin implements an `onFirstRender` method.\\n\\nWe are also pre-setting a default plugin with a default object structure which\\nis used by the `@uppy/provider-views` package.\\n\\nWith that done, we can now use our new plugin with Uppy. Create a file\\n`client/main.js` and initiate Uppy in there like so:\\n\\n```js\\nconst Uppy = require(\'@uppy/core\');\\nconst Dropbox = require(\'@uppy/dropbox\');\\nconst Tus = require(\'@uppy/tus\');\\nconst Dashboard = require(\'@uppy/dashboard\');\\nconst MyCustomProvider = require(\'./MyCustomProvider\');\\n\\nconst uppy = Uppy({\\n\\tdebug: true,\\n});\\n\\nuppy.use(Dropbox, {\\n\\tcompanionUrl: \'http://localhost:3020\',\\n});\\n\\nuppy.use(MyCustomProvider, {\\n\\tcompanionUrl: \'http://localhost:3020\',\\n});\\n\\nuppy.use(Dashboard, {\\n\\tinline: true,\\n\\ttarget: \'body\',\\n\\tplugins: [\'Dropbox\', \'MyCustomProvider\'],\\n});\\n\\nuppy.use(Tus, { endpoint: \'https://master.tus.io/files/\' });\\n```\\n\\nNow we need to bundle the file so it can be loaded on the browser. To do this,\\nwe\'d install [budo](https://www.npmjs.com/package/budo):\\n\\n1. In the root project directory, run `npm install budo -g`.\\n2. Create a `babel.config.js` file looking like so:\\n\\n```js\\nmodule.exports = (api) => {\\n\\tapi.env(\'test\');\\n\\treturn {\\n\\t\\tpresets: [\\n\\t\\t\\t[\\n\\t\\t\\t\\t\'@babel/preset-env\',\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\tmodules: false,\\n\\t\\t\\t\\t\\tloose: true,\\n\\t\\t\\t\\t},\\n\\t\\t\\t],\\n\\t\\t],\\n\\t\\tplugins: [[\'@babel/plugin-transform-react-jsx\', { pragma: \'h\' }]].filter(\\n\\t\\t\\tBoolean,\\n\\t\\t),\\n\\t};\\n};\\n```\\n\\n3. Add an `index.html` file (in the root of the project) that uses a bundle file\\n   like so:\\n\\n```html\\n<!doctype html>\\n<html>\\n\\t<head>\\n\\t\\t<meta charset=\\"utf-8\\" />\\n\\t\\t<meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1\\" />\\n\\t\\t<title>Uppy Custom provider Example</title>\\n\\t\\t<link\\n\\t\\t\\thref=\\"https://releases.transloadit.com/uppy/v1.15.0/uppy.min.css\\"\\n\\t\\t\\trel=\\"stylesheet\\"\\n\\t\\t/>\\n\\t</head>\\n\\t<body>\\n\\t\\t<script src=\\"bundle.js\\"><\/script>\\n\\t</body>\\n</html>\\n```\\n\\n4. Create the bundle file by running\\n   `budo client/main.js:bundle.js -- -t babelify`. This will bundle your\\n   `client` side work and have it running on a local server. Please check the\\n   console log to see on what port the server is running. As at the time of this\\n   writing, it defaults to `9966` (URL will be http://localhost:9966/).\\n\\nYou can now load the URL of your client on your browser to see it running. When\\nI run mine, it looks something like this:\\n\\n![](/img/blog/custom-providers/dashboard-preview.png)\\n\\nIn order to use this with our Companion implementation, we need to also start\\nour Companion server by running `node server/index.js`.\\n\\nCongrats! \ud83c\udf89We have completed our custom plugin at this point. For an example\\nsource code on this tutorial, please see the\\n[custom provider example](https://github.com/transloadit/uppy/tree/master/examples/custom-provider)."},{"id":"2020/04/1.13","metadata":{"permalink":"/blog/2020/04/1.13","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2020-04-1.13.md","source":"@site/blog/2020-04-1.13.md","title":"Uppy 1.11 \u2014 1.13: Dark Mode, custom meta fields and Google Docs in Companion","description":"Releases 1.11 through 1.13 introduced a bunch of major new features and","date":"2020-04-20T00:00:00.000Z","tags":[],"readingTime":2.725,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 1.11 \u2014 1.13: Dark Mode, custom meta fields and Google Docs in Companion","date":"2020-04-20T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/1.13/uppy-dashboard-dark-mar-2020.png","published":true,"slug":"2020/04/1.13"},"unlisted":false,"prevItem":{"title":"Adding Custom Providers: Step by Step Tutorial to add Custom Providers","permalink":"/blog/2020/03/custom-providers"},"nextItem":{"title":"Uppy 1.10.1: Facebook and OneDrive","permalink":"/blog/2020/04/1.10"}},"content":"Releases 1.11 through 1.13 introduced a bunch of major new features and\\nbugfixes. Let\'s go through the main ones!\\n\\n## Dark mode\\n\\nA little while ago we\u2019ve\\n[announced work in progress](https://mobile.twitter.com/uppy_io/status/1221070643543838721)\\non Dark Mode for the Dashboard. We\'re happy to tell you it\u2019s live now! You can\\ntry it out on [the Dashboard example page](/examples/dashboard/).\\n\\n<video alt=\\"Demo video showing Uppy Dark Mode\\" muted autoplay loop>\\n  <source src=\\"/img/blog/1.13/dark-mode-auto.webm\\" type=\\"video/webm\\" />\\n  <source src=\\"/img/blog/1.13/dark-mode-auto.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\nThere are three options available:\\n\\n- `light` \u2014 the default\\n- `dark`\\n- `auto` \u2014 will respect the user\u2019s system settings and switch automatically\\n\\n```js\\nuppy.use(Dashboard, {\\n\\ttheme: \'dark\',\\n});\\n```\\n\\n![](/img/blog/1.13/uppy-dashboard-dark-mar-2020.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Custom meta fields\\n\\nThis is big one! Thanks to @galli-leo, you can now add custom fields to the\\nDashboard meta editor, such as `<input type=\\"tel\\">`, `<select>` or\\n`<input type=\\"checkbox\\">`, like this:\\n\\n```js\\nuppy.use(Dashboard, {\\n\\ttrigger: \'#pick-files\',\\n\\tmetaFields: [\\n\\t\\t{\\n\\t\\t\\tid: \'caption\',\\n\\t\\t\\tname: \'Caption\',\\n\\t\\t\\tplaceholder: \'describe what the image is about\',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tid: \'public\',\\n\\t\\t\\tname: \'Public\',\\n\\t\\t\\trender: ({ value, onChange }, h) => {\\n\\t\\t\\t\\treturn h(\'input\', {\\n\\t\\t\\t\\t\\ttype: \'checkbox\',\\n\\t\\t\\t\\t\\tonChange: (ev) => onChange(ev.target.checked ? \'on\' : \'off\'),\\n\\t\\t\\t\\t\\tdefaultChecked: value === \'on\',\\n\\t\\t\\t\\t});\\n\\t\\t\\t},\\n\\t\\t},\\n\\t],\\n});\\n```\\n\\nSee [the docs](/docs/dashboard/#metaFields) and\\n[PR #2147](https://github.com/transloadit/uppy/pull/2147) for details.\\n\\n## Google Docs support in Companion\\n\\nIn the past, Uppy could already import files from Google Drive using Companion.\\nHowever, files from Google Docs are not _really_ files, and could not be\\nimported. That was confusing for users: some of their files simply didn\'t\\nappear!\\n\\nCompanion now automagically converts GSuite documents, such as docs,\\nspreadsheets and presentations, to `.docx`, `.xlsx` and `.ppt` files that can be\\nopened in various applications. The current list of conversions is hardcoded to:\\n\\n```json\\n{\\n\\t\\"application/vnd.google-apps.document\\": \\".docx\\",\\n\\t\\"application/vnd.google-apps.drawing\\": \\".png\\",\\n\\t\\"application/vnd.google-apps.script\\": \\".json\\",\\n\\t\\"application/vnd.google-apps.spreadsheet\\": \\".xlsx\\",\\n\\t\\"application/vnd.google-apps.presentation\\": \\".ppt\\"\\n}\\n```\\n\\nThis may be configurable in a future release.\\n\\nNote that only documents under 10MB are converted. This is a limitation set by\\nthe Google Drive API.\\n\\n## AWS S3\\n\\nThe Aws S3 plugin now handles uploads internally, instead of deferring to XHR\\nUpload. This change fixes many bugs with Aws S3. See\\n[PR #2060](https://github.com/transloadit/uppy/pull/2147) for details.\\n\\n## Locales\\n\\nPolish, Croatian and Romanian language packs have been added by @alfatv, @dkisic\\nand @akizor :tada:\\n\\n## Exifr in Thumbnail Generator\\n\\n[@MikeKovarik](https://github.com/MikeKovarik) created an awesome library called\\n[Exifr](https://github.com/MikeKovarik/exifr), useful for extracting EXIF image\\ndata. He was kind enough to submit a PR that replaces Uppy\u2019s internal fork of\\n`exif-js` with `exifr`. Our thumbnail generation is now faster and more robust!\\nSee [PR 2140](https://github.com/transloadit/uppy/pull/2140) for details.\\n\\n## Misc\\n\\n- @uppy/tus, @uppy/xhr-upload: emit error when companion returns error during\\n  upload creation (#2166 / @ifedapoolarewaju)\\n- @uppy/transloadit: fix progress with very different Assembly runtimes (#2143 /\\n  @agreene-coursera)\\n- @uppy/core: Only `_startIfAutoProceed` if some files were actually added\\n  (#2146 / @arturi)\\n- @uppy/companion: emit error to client if download fails (#2139 /\\n  @ifedapoolarewaju)\\n- @uppy/companion: validate all client provided upload data. (#2160 /\\n  @ifedapoolarewaju)\\n- @uppy/dashboard: Log warning instead of an error when trigger is not found\\n  (#2144 / @arturi)\\n- @uppy/robodog: Pass `hideUploadButton` to Dashboard in Robodog too (#2169 /\\n  @arturi)\\n- @uppy/aws-s3-multipart: emit `upload-error` when companion returns error\\n  during upload instantiation (#2168 / @ifedapoolarewaju)\\n\\nAs always, you can find the full list of changes and package versions, as well\\nas future plans, in our\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md)."},{"id":"2020/04/1.10","metadata":{"permalink":"/blog/2020/04/1.10","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2020-04-1.10.md","source":"@site/blog/2020-04-1.10.md","title":"Uppy 1.10.1: Facebook and OneDrive","description":"Uppy 1.10.1 adds long-awaited support for Facebook and","date":"2020-04-03T00:00:00.000Z","tags":[],"readingTime":1.505,"hasTruncateMarker":true,"authors":[{"name":"ife"}],"frontMatter":{"title":"Uppy 1.10.1: Facebook and OneDrive","date":"2020-04-03T00:00:00.000Z","author":"ife","published":true,"slug":"2020/04/1.10"},"unlisted":false,"prevItem":{"title":"Uppy 1.11 \u2014 1.13: Dark Mode, custom meta fields and Google Docs in Companion","permalink":"/blog/2020/04/1.13"},"nextItem":{"title":"Uppy 1.8 and 1.9: security, error handling and better types","permalink":"/blog/2020/03/1.9"}},"content":"Uppy `1.10.1` adds long-awaited support for [Facebook](/docs/facebook/) and\\n[OneDrive](/docs/onedrive/) \ud83c\udf89\\n\\n![Screenshot showing Uppy file uploader with Facebook and OneDrive options](/img/blog/1.10/uppy-facebook-onedrive.png)\\n\\n```js\\nconst uppy = Uppy();\\nuppy.use(Dashboard);\\nuppy.use(Facebook, {\\n\\ttarget: Dashboard,\\n\\tcompanionUrl: \'https://companion.uppy.io/\',\\n});\\nuppy.use(OneDrive, {\\n\\ttarget: Dashboard,\\n\\tcompanionUrl: \'https://companion.uppy.io/\',\\n});\\n```\\n\\nTry the live demos on [Transloadit.com](https://transloadit.com): import your\\nfiles from Facebook or OneDrive, and then:\\n\\n- [Apply a watermark to an image](https://transloadit.com/demos/image-manipulation/text-watermarking/)\\n- [Convert an image to WebP](https://transloadit.com/demos/image-manipulation/convert-to-webp/)\\n- [Encode a video, extract 8 thumbnails and store everything in an S3 bucket](https://transloadit.com/demos/file-exporting/store-encoding-and-thumbnails-on-s3/)\\n- [Encode video for iPhone](https://transloadit.com/demos/video-encoding/encode-for-apple-iphone-11-pro-max/)\\n- [Create a single Zip file containing all uploaded files](https://transloadit.com/demos/file-compressing/create-one-zip-file-containing-all-uploaded-files/)\\n\\n(Uppy demos are below the description and steps, under \u201cLive Demo. See for\\nyourself\u201d ;-)\\n\\nYou can also play with an interactive demo, enabling different Uppy options and\\nproviders on the fly: <https://uppy.io/examples/dashboard>\\n\\nOneDrive:\\n\\n![Screenshot showing Uppy file uploader with OneDrive file list](/img/blog/1.10/uppy-onedrive.png)\\n\\nFacebook:\\n\\n![Screenshot showing Uppy file uploader with Facebook file list](/img/blog/1.10/uppy-facebook.png)\\n\\n\x3c!--truncate--\x3e\\n\\nAs with Dropbox and Instagram, using the Facebook and OneDrive integrations\\nrequires the client Plugins (see [here for Facebook](/docs/facebook/) and see\\n[here for OneDrive](/docs/onedrive/)), and also your\\n[Companion](/docs/companion/#Options) integration.\\n\\nThis is an exciting release for us, and we can\'t wait to get some feedback\\n(GitHub issues and PRs) on this! :)\\n\\n## Misc\\n\\n- @uppy/companion: pass `endpoint` and `region` to AWS SDK constructor (#2113 /\\n  @goto-bus-stop)\\n- @uppy/companion: Allow S3 ACL to be specified in Companion Standalone (#2111 /\\n  @jasonbosco)\\n- @uppy/companion: return 401 early if token is not set (#2118 /\\n  @ifedapoolarewaju)\\n- @uppy/companion: allow providing any S3 option, closes #1388 (#2030 /\\n  @goto-bus-stop)\\n- @uppy/companion:: don\u2019t log redundant errors in production (#2112 /\\n  @ifedapoolarewaju)\\n- docs: Add S3 ACL option to companion docs (#2109 / @jasonbosco)\\n\\nAs always, you can find the full list of changes and package versions, as well\\nas future plans, in our\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md)."},{"id":"2020/03/1.9","metadata":{"permalink":"/blog/2020/03/1.9","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2020-03-1.9.md","source":"@site/blog/2020-03-1.9.md","title":"Uppy 1.8 and 1.9: security, error handling and better types","description":"Uppy 1.8, 1.9 and a few important security patches are out! Here are the","date":"2020-03-09T00:00:00.000Z","tags":[],"readingTime":3.96,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 1.8 and 1.9: security, error handling and better types","date":"2020-03-09T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2020/03/1.9"},"unlisted":false,"prevItem":{"title":"Uppy 1.10.1: Facebook and OneDrive","permalink":"/blog/2020/04/1.10"},"nextItem":{"title":"Uppy 1.7: A Small One","permalink":"/blog/2019/12/1.7"}},"content":"Uppy 1.8, 1.9 and a few important security patches are out! Here are the\\nhighlights:\\n\\n\x3c!--truncate--\x3e\\n\\n## Companion: security patches and new Instagram API\\n\\n- We released a patch to an SSRF vulnerability affecting `@uppy/companion` and\\n  the `@uppy/url` plugin. Many thanks to the parties involved in\\n  [reporting and disclosing](https://hackerone.com/reports/786956) this\\n  vulnerability to the Uppy team. The patch is available in\\n  [@uppy/companion version 1.9.5](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#194).\\n- As the Instagram Legacy API will soon no longer be available, we have now\\n  added support for the new Instagram Graph API. As far as using this on\\n  `@uppy/companion` goes, not much has changed. The only difference is that you\\n  will now be retrieving your Instagram credentials from the\\n  [Facebook Developer Platform](https://developers.facebook.com/), and no longer\\n  from the [Instagram Developer Platform](https://www.instagram.com/developer/).\\n\\n## Error handling\\n\\n- We\u2019ve significantly improved error handling and retries in `@uppy/core`,\\n  `@uppy/transloadit` and `@uppy/dashboard`. The retry button on the Status Bar,\\n  which was broken in some edge cases, now works as expected.\\n- Errors from Transloadit assemblies now include Assembly ID, as well as the\\n  full assembly object, for easier debugging.\\n- You can now click on the question mark (?) icon on the Informer or Dashboard\\n  error message, and get a browser alert with error details \u2014 much easier for\\n  the users to copy-paste the text this way. The Informer now also conveniently\\n  stays on screen, as long as you hover over the question mark.\\n\\n## Dashboard\\n\\nThe Dashboard plugin has gained new file type icons: for images \u2014 useful before\\nthe preview is generated, or when there\u2019s no preview at all, like with images\\nfrom the Url plugin \u2014 and for archives.\\n\\n![](/img/blog/1.9/file-type-icons.png)\\n\\n## Types\\n\\nOur typings got a significant upgrade: plugin options can now be type-checked!\\nIn the past, we did have typings for plugin options, but the `uppy.use()`\\nfunction had a fallback that would accept _any_ object as options. If your\\nplugin options were wrong, typescript would just use the fallback and not tell\\nyou about it!\\n\\nStricter typings normally mean that old code may no longer type-check. So,\\nalthough this is a bugfix, you have to opt into the new types. In 2.0, the old\\nway will be removed and only the strict types will be available.\\n\\nYou can opt in by specifying the `StrictTypes` type parameter to the `Uppy`\\ntype:\\n\\n```typescript\\nimport Uppy = require(\'@uppy/core\');\\nconst uppy = Uppy<Uppy.StrictTypes>({\\n\\t// options here\\n});\\n```\\n\\nThis type parameter must also be specified if you are storing the `uppy`\\ninstance anywhere. For example, inside a class:\\n\\n```typescript\\nclass UppyProvider extends React.Component {\\n\\tprivate uppy: Uppy<Uppy.StrictTypes>;\\n\\tconstructor(props) {\\n\\t\\tsuper(props);\\n\\t\\tthis.uppy = Uppy<Uppy.StrictTypes>({\\n\\t\\t\\t// etc\\n\\t\\t});\\n\\t}\\n}\\n```\\n\\nIf you do not specify the `StrictTypes` parameter, the old fallback for the\\n`uppy.use()` method remains available.\\n\\nThe typings for `@uppy/react` component props are now derived from plugin\\noptions types, so they will no longer get out of sync, as they occasionally did\\nin the past. For example, in version 1.7, the `@uppy/drag-drop` plugin supported\\na `note` option to add some text to the drop area. The React typings didn\'t\\ninclude that option, so you couldn\'t use it from typescript! That is now\\npermanently fixed:\\n\\n```typescript\\nimport components = require(\'@uppy/react\');\\nconst { DragDrop } = components;\\n\\n// assuming some `uppy` variable already exists\\ndeclare var uppy: Uppy<Uppy.StrictTypes>;\\n\\nfunction MyComponent() {\\n\\treturn <DragDrop uppy={uppy} note=\\"This prop is now supported!\\" />;\\n}\\n```\\n\\nFinally, the `locale` options and React props now have full typings. Your editor\\nshould now be able to provide autocompletion for language keys!\\n\\n![Screenshot showing VS Code autocompletion for a language key.](/img/blog/1.9/locale-type.png)\\n\\nWe now also use `tsd`, so our typings are actually tested.\\n\\nSee [PR #1918](https://github.com/transloadit/uppy/pull/1918) for all the\\ndetails.\\n\\n## Downloadable ZIP archives of Uppy releases\\n\\nUppy is now available as a downloadable ZIP archive from the Transloadit CDN!\\nNPM down? Don\u2019t like build tools? Looking for a quick way to play around with\\nUppy? We\u2019ve got you covered:\\n\\n```\\nhttps://releases.transloadit.com/uppy/v1.9.3/uppy-v1.9.3.zip\\n```\\n\\n## Locales\\n\\n- Uppy now speaks Korean and Vietnamese.\\n- The French, German and Chinese (zh_TW) translations have been improved.\\n\\n## Misc\\n\\n- @uppy/core: core: setState(modifiedFiles) in onBeforeUpload (#2028 / @arturi)\\n- @uppy/core: always log errors (#2029 / @arturi)\\n- @uppy/core: fix mime type checking bug (#2004 / @shahimclt)\\n- @uppy/core: add .tsv and .tab: text/tab-separated-values (#2056 / @arturi)\\n- @uppy/onedrive: make encryption shorter + enable onedrive on website (#2034 /\\n  @ifedapoolarewaju)\\n- @uppy/react: use `componentDidUpdate` instead of `componentWillReceiveProps`\\n  (@cryptic022, #1999)\\n- @uppy/xhr-upload: free item from rate limit queue when upload times out\\n  (@rtaieb, #2018)\\n- @uppy/aws-s3-multipart: add optional headers for signed url (@ardeois, #1985)\\n- @uppy/aws-s3: fix crash when S3 response does not have a Content-Type header\\n  (@roenschg, #2012)\\n\\nAs always, you can find the full list of changes and package versions, as well\\nas future plans, in our\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md)."},{"id":"2019/12/1.7","metadata":{"permalink":"/blog/2019/12/1.7","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-12-1.7.md","source":"@site/blog/2019-12-1.7.md","title":"Uppy 1.7: A Small One","description":"Uppy 1.7 was released last December! This release added Hebrew translations, a","date":"2020-01-10T00:00:00.000Z","tags":[],"readingTime":2.655,"hasTruncateMarker":true,"authors":[{"name":"renee"}],"frontMatter":{"title":"Uppy 1.7: A Small One","date":"2020-01-10T00:00:00.000Z","author":"renee","published":true,"image":"https://uppy.io/img/blog/1.7/cat-video-screen.jpg","slug":"2019/12/1.7"},"unlisted":false,"prevItem":{"title":"Uppy 1.8 and 1.9: security, error handling and better types","permalink":"/blog/2020/03/1.9"},"nextItem":{"title":"Uppy 1.6: setOptions(), Icelandic and Thai","permalink":"/blog/2019/11/1.6"}},"content":"Uppy 1.7 was released last December! This release added Hebrew translations, a\\nrecording length timer for the `@uppy/webcam` plugin, and a collection of\\nimprovements to Companion.\\n\\n\x3c!--truncate--\x3e\\n\\n## showRecordingLength: true\\n\\nWhen recording audio or video using the `@uppy/webcam` plugin, this new option\\ncontributed by [@dominiceden](https://github.com/dominiceden) shows a timer in\\nthe bottom right, so your users can see how long they\u2019ve been recording for.\\n\\n<video alt=\\"Demo video showing Uppy Webcam video recording timer\\" muted autoplay loop>\\n  <source src=\\"/img/blog/1.7/cat-video-timer.webm\\" type=\\"video/webm\\" />\\n  <source src=\\"/img/blog/1.7/cat-video-timer.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## Companion\\n\\nThe past months we\u2019ve made some incremental improvements to Companion. We\\npatched an issue where Companion could sometimes output remote provider\\nauthentication tokens into logs.\\n\\nWe now run Companion tests on Node.js 6 on each commit, in addition to Node.js\\n10, to make sure that we don\u2019t break compatibility in a minor release. Node.js 6\\nsupport will be dropped in a future major release, and we recommend you upgrade\\nsoon if you are still using it.\\n\\nUploading files from remote providers with the `@uppy/aws-s3-multipart` plugin\\nnow uses the correct file name in your S3 bucket by default, instead of the\\ntemporary filename that Companion uses internally.\\n\\nThe `getKey()` option for S3 now has a\\n[`metadata`](https://uppy.io/docs/companion/#s3-getKey-req-filename-metadata)\\nparameter, so you can use file metadata from the client to determine the name of\\nfiles in S3.\\n\\n## Locales\\n\\nThe new Hebrew locale is available as:\\n\\n```js\\nrequire(\'@uppy/locales/lib/he_IL\');\\n```\\n\\nThanks to [@YehudaKremer](https://github.com/YehudaKremer) for the contribution!\\n\\nIn 1.7, we also fixed the naming of the Galician locale. The locale names follow\\na `country_LANGUAGE` format. Previously, we used `es_GL` for Galician, which was\\nintended to mean \u201cGalician in Spain\u201d, but which _actually_ means \u201cSpanish in\\nGreenland\u201d! The correct way to refer to Galician is as `gl_ES`:\\n\\n```js\\nrequire(\'@uppy/locales/lib/gl_ES\');\\n```\\n\\nThe old `es_GL` name is now an alias for `gl_ES`. It will be removed in a future\\nmajor release, so we recommend updating your code if you were using the old\\nname. If you do it now, the migration will be easier once 2.0 comes around\\n:smile:\\n\\n## Misc\\n\\n- @uppy/aws-s3: add some tests (@bambii7, #1934)\\n- @uppy/companion: add onedrive domain validation for the demo deployment\\n  (@ifedapoolarewaju, #1959)\\n- @uppy/companion: change demo deployment type to stable API (@kiloreux, #1938)\\n- @uppy/companion: rename uppy occurrences to companion (@ifedapoolarewaju,\\n  #1926)\\n- @uppy/companion: upgrade `helmet` (@goto-bus-stop,\\n  [6b006ac](https://github.com/transloadit/uppy/commit/6b006ac42c20062c37bdcaf6a77e07b304da7957))\\n- @uppy/core: make `uppy.on()` work better with IntelliSense (@bambii7, #1923)\\n- @uppy/dashboard: hide top bar cancel button when `hideCancelButton: true`\\n  (@goto-bus-stop, #1955)\\n- @uppy/thumbnail-generator: add webp to the list of supported types (@arturi,\\n  #1961)\\n- @uppy/thumbnail-generator: vendor exif-js source in Uppy (@mskelton, #1940)\\n- docs: FB and OneDrive are not yet in the CDN bundle (@goto-bus-stop,\\n  [61b54b9](https://github.com/transloadit/uppy/commit/61b54b914dd437d2e60362c4ece1429943b32555))\\n- docs: add `companionHeaders` to s3-multipart docs (@goto-bus-stop,\\n  [a6e44a9](https://github.com/transloadit/uppy/commit/a6e44a953114e385466dcce884d37e433f030549))\\n- docs: add reset-progress event to docs (@bambii7, #1922)\\n- docs: make Robodog naming more consistent (@goto-bus-stop, #1935)\\n- docs: make react sample code more standalone (@uxitten, #1864)\\n- examples: remove `UPPYSERVER_` references (@goto-bus-stop,\\n  [e74690e](https://github.com/transloadit/uppy/commit/e74690e20cc0a1afd9156ce03b1ca6a5358cc7d9))\\n- website: add facebook to dashboard example (@ifedapoolarewaju, #1930)\\n- website: add plugin versions (@arturi, #1952)\\n- website: enable onedrive on the website example (@ifedapoolarewaju, #1975)\\n\\nAs always, you can find the full list of changes and package versions, as well\\nas future plans, in our\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md)."},{"id":"2019/11/1.6","metadata":{"permalink":"/blog/2019/11/1.6","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-11-1.6.md","source":"@site/blog/2019-11-1.6.md","title":"Uppy 1.6: setOptions(), Icelandic and Thai","description":"This release adds a long-awaited uppy.setOptions() API, allowing you to update","date":"2019-11-13T00:00:00.000Z","tags":[],"readingTime":1.71,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 1.6: setOptions(), Icelandic and Thai","date":"2019-11-13T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2019/11/1.6"},"unlisted":false,"prevItem":{"title":"Uppy 1.7: A Small One","permalink":"/blog/2019/12/1.7"},"nextItem":{"title":"Uppy 1.5: Facebook and OneDrive (beta) support, upload cancellation","permalink":"/blog/2019/10/1.5"}},"content":"This release adds a long-awaited `uppy.setOptions()` API, allowing you to update\\noptions of Uppy and its plugins on the fly. It also includes locales for the\\nIcelandic and Thai languages!\\n\\n\x3c!--truncate--\x3e\\n\\n## uppy.setOptions()\\n\\n`.setOptions()` for Uppy and its plugins supports most options that can be\\neasily changed on the fly: `restrictions`, `locale`, Dashboard\u2019s `note` and\\n`metaFields`, `disableThumbnailGenerator`, `showProgressDetails`, etc.\\n\\n\u26a0\ufe0f Note that some options like `target`, `limit` and `id` cannot be changed on\\nthe fly, as internal statefull things depend on them.\\n\\nHere\u2019s how the magic works:\\n\\n```js\\nconst uppy = Uppy({\\n\\trestrictions: {\\n\\t\\tmaxNumberOfFiles: 3,\\n\\t},\\n});\\nuppy.use(Dashboard, {\\n\\tnote: \'You can upload up to 3 files\',\\n});\\n```\\n\\nNow, based on some condition in our app, we want to allow more files:\\n\\n```js\\n// Updating Uppy options\\nuppy.setOptions({\\n\\trestrictions: {\\n\\t\\tmaxNumberOfFiles: 5,\\n\\t},\\n});\\n// Updating Dashboard options\\nuppy\\n\\t.getPlugin(\'Dashboard\')\\n\\t.setOptions({ note: \'You can upload up to 5 files\' });\\n```\\n\\nSay, later on, the user changed their locale and we would like to reflect that\\nin Uppy:\\n\\n```js\\nconst fi_FI = require(\'@uppy/locales/lib/fi_FI\');\\n\\nuppy.setOptions({\\n\\tlocale: fi_FI,\\n});\\n```\\n\\nNow, Uppy will bark in Finnish! Hau, hau, hau!\\n\\nPlease see\\n[`uppy.setOptions()` docs](https://uppy.io/docs/uppy/#uppy-setOptions-opts) for\\ndetails.\\n\\n## Misc\\n\\n- @uppy/facebook: In the new Facebook plugin (beta), we now use grid view with\\n  big image previews for albums (@ifedapoolarewaju, #1886)\\n- @uppy/companion: The thumbnail size has been increased for Dropbox\\n  (@ifedapoolarewaju, #1917)\\n- @uppy/dashboard: The retry icons have been fixed on individual files\\n  (@goto-bus-stop, #1888)\\n- @uppy/companion: Support `COMPANION_AWS_ENDPOINT` in aws-companion example so\\n  it can be used with other S3-compatible services (@goto-bus-stop,\\n  [1ab63aa](https://github.com/transloadit/uppy/commit/1ab63aa395859815871c4e1e62dda6e9ca66595f))\\n- @uppy/companion: Add S3 useAccelerateEndpoint option (@steverob, #1884)\\n- @uppy/companion: only set `Access-Control-Allow-Credentials` header when\\n  origin is whitelisted (@ifedapoolarewaju, #1901)\\n- @uppy/transloadit: We now send `Transloadit-Client` header with HTTP API\\n  requests (@goto-bus-stop, #1919)\\n- @uppy/tus: Uploads are now being terminated when cancelling, instead of just\\n  pausing and letting them expire (@ifedapoolarewaju, #1909)\\n- build: Updated Lerna, ESlint, and Jest (@goto-bus-stop)\\n\\nAs always, you can find the full list of changes and package versions, as well\\nas future plans, in our\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md)."},{"id":"2019/10/1.5","metadata":{"permalink":"/blog/2019/10/1.5","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-10-1.5.md","source":"@site/blog/2019-10-1.5.md","title":"Uppy 1.5: Facebook and OneDrive (beta) support, upload cancellation","description":"In the past two months, we have halved our open issue count and worked on a much","date":"2019-10-11T00:00:00.000Z","tags":[],"readingTime":8.435,"hasTruncateMarker":true,"authors":[{"name":"renee"}],"frontMatter":{"title":"Uppy 1.5: Facebook and OneDrive (beta) support, upload cancellation","date":"2019-10-11T00:00:00.000Z","author":"renee","published":true,"slug":"2019/10/1.5"},"unlisted":false,"prevItem":{"title":"Uppy 1.6: setOptions(), Icelandic and Thai","permalink":"/blog/2019/11/1.6"},"nextItem":{"title":"Uppy 1.3: Accessibility and performance, new languages","permalink":"/blog/2019/08/1.3"}},"content":"In the past two months, we have halved our open issue count and worked on a much\\nmore robust approach to upload cancellation. Members of the community also\\ncontributed a bunch of new localizations: Czech, Danish, Greek, Indonesian, and\\nSwedish!\\n\\nWe are also releasing beta versions of new remote providers for Facebook and\\nOneDrive. Please try them out!\\n\\n\x3c!--truncate--\x3e\\n\\n## Issue busting\\n\\nOur issue tracker was getting pretty full over the past year, topping out at\\nabout 120 open issues. Some had been open for months without any reply! Issues\\nwere being opened at such a rate that it was almost too much for our small team\\nto handle. So, we sat down to go through everything together and started setting\\nup a process to make sure our issue list doesn\'t get out of hand again in the\\nfuture.\\n\\nWhen opening a new issue, we now ask you to mark it as a bug or a feature\\nrequest. The issue will also get a \u201cTriage\u201d label, indicating that an Uppy team\\nmember needs to sort it. If there are many \u201cTriage\u201d issues open at any point, we\\nwill discuss them in our weekly team call. New issues will also be assigned to a\\nspecific team member as soon as possible, so each of us has a much smaller and\\nmore manageable list of issues to keep track of.\\n\\nTo keep the issue tracker focused on Uppy features and bugs, detailed support\\nquestions should go to Transloadit\'s\\n[community forum](https://community.transloadit.com/).\\n\\n## Duplicate files\\n\\nUp until now, if you added a file that had been already added to Uppy some time\\nbefore \u2014 i.e., a file with the same `name`/`type`/`modifiedDate` etc. \u2014 the old\\nfile would be silently replaced with a new one. This changes with v1.5:\\n\\n1. Uppy now throws a warning if a file with the same `file.id` already exist.\\n   The new file will not be added and the old file will not be replaced.\\n2. We are adding the `file.meta.relativePath` to `file.id`. `relativePath`\\n   exists on files that have been dropped together with a folder. This means\\n   that if you drop a folder with `folder/a.jpg` and `folder/subfolder/a.jpg`,\\n   both `a.jpg`s will be added, since they come from different folders and this\\n   kind of duplication might be intended.\\n\\nSee PR [#1767](https://github.com/transloadit/uppy/pull/1767) for details.\\n\\n## Dashboard\\n\\nFiles in the Dashboard no longer have an icon indicating where they came from\\n(local device, GDrive, etc.). We think it\'s nice for developers to see, but not\\nthat useful for most end users. If you want to re-enable it, you can add the\\nfollowing CSS to your app:\\n\\n```css\\n.uppy-DashboardItem-sourceIcon {\\n\\tdisplay: inline-block;\\n}\\n```\\n\\nThe difference is very small. The icons used to be next to the file size, as\\nseen here in Uppy v1.3:\\n![Uppy Dashboard v1.3, with file source icon](/img/blog/1.5/with-source-icon.png)\\n\\nNow, in v1.5, they\u2019re gone:\\n![Uppy Dashboard v1.5, without file source icon](/img/blog/1.5/without-source-icon.png)\\n\\nAdditionally:\\n\\n- Editing a file now fires `dashboard:file-edit-start` and\\n  `dashboard:file-edit-complete` events\\n  ([#1776](https://github.com/transloadit/uppy/pull/1776))\\n- Excessive debug logging is reduced\\n  ([#1747](https://github.com/transloadit/uppy/pull/1747))\\n- Fixes to the TypeScript typings were submitted by @mrbatista and\\n  @MatthiasKunnen\\n\\n## Cancellation\\n\\nOur old approach to limiting the amount of simultaneous uploads had some\\nproblems. Uploads were queued by chaining Promises, but they did not respect\\ncancellation. So, if you cancelled an upload while some files were still waiting\\nto start, those files would actually start uploading even though they had\\nalready been removed. Obviously, that\'s pretty bad!\\n\\nPR [#1736](https://github.com/transloadit/uppy/pull/1736) addresses this by\\nripping out the old limiting code and replacing it with a new,\\ncancellation-aware upload queue. We\u2019ve also added a browser test to make sure\\nthat this thing stays resilient:\\n\\n<video alt=\\"Demo video showing an automated Chaos Monkey session with Uppy\\" muted autoplay loop>\\n  <source src=\\"/img/blog/1.5/chaos-monkey.webm\\" type=\\"video/webm\\" />\\n  <source src=\\"/img/blog/1.5/chaos-monkey.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\n## Lerna lerna lerna\\n\\nIn August, we bit the bullet and used Lerna\u2019s `lerna link convert` feature. Now,\\nall the packages in our monorepo depend on each other, using\\n`file:../packagename/` paths instead of version numbers. The entire repository\\nis one big dependency tree in npm\'s view. Npm can install the entire thing on\\nits own, without `lerna bootstrap`\u2019s help! Since npm manages the entire tree,\\nthe `package-lock.json` file in the repository root contains everything we need.\\nWe can now use the faster `npm ci` install command on CI, saving more than sixty\\nseconds on every run :tada:\\n\\nAs part of this effort, we also added all our examples to the lerna-managed\\ntree, so you no longer have to do `npm install` in example folders to use them.\\n\\nThis change makes working on the repository much easier, since dependencies are\\nhandled in the same way as in any other repository, simply by doing:\\n\\n```bash\\nnpm install\\n```\\n\\n## Localization\\n\\nThanks to multiple contributors, Uppy now knows Czech, Danish, Greek,\\nIndonesian, and Swedish, on top of the nineteen languages that were already\\nsupported! The Serbian locale is now available in both the Cyrillic and Latin\\nscripts. Big thanks to @achmiral, @arggh, @czj, @jukakoski, @marcusforberg,\\n@nndevstudio, @Pzoco, @Tashows, and @tvaliasek for their efforts \u2728\\n\\nNew translations are rolling in every month, but there are plenty more languages\\nout there that Uppy would love to learn. Please consider\\n[contributing your language](/docs/locales/#Contributing-a-new-language) as\\nwell!\\n\\n## Facebook and OneDrive\\n\\nThis release adds two experimental new remote providers: Facebook and OneDrive.\\nFor now, they are not available through the `uppy` package. To use them, install\\n`@uppy/facebook` or `@uppy/onedrive`:\\n\\n```bash\\nnpm install @uppy/facebook\\nnpm install @uppy/onedrive\\n```\\n\\nConfigure Companion to access the Facebook and OneDrive APIs, using environment\\nvariables or the JS API:\\n\\n```bash\\nexport COMPANION_FACEBOOK_KEY=\\"***\\"\\nexport COMPANION_FACEBOOK_SECRET=\\"***\\"\\nexport COMPANION_ONEDRIVE_KEY=\\"***\\"\\nexport COMPANION_ONEDRIVE_SECRET=\\"***\\"\\n```\\n\\n```js\\nproviderOptions: {\\n  facebook: {\\n    key: \'\',\\n    secret: \'\'\\n  },\\n  // For OneDrive\u2019s key & secret pair, please use `microsoft` option key\\n  microsoft: {\\n    key: \'\',\\n    secret: \'\'\\n  }\\n}\\n```\\n\\nThen use them like the existing providers:\\n\\n```js\\nconst Facebook = require(\'@uppy/facebook\');\\nconst OneDrive = require(\'@uppy/onedrive\');\\n\\nuppy.use(Facebook, { companionUrl: YOUR_COMPANION_URL });\\nuppy.use(OneDrive, { companionUrl: YOUR_COMPANION_URL });\\n```\\n\\nWe\u2019re still waiting for our developer keys to be approved, so we don\'t have\\nworking examples on the website yet! We\u2019ll let you know on\\n[Twitter](https://twitter.com/uppy_io) when they\u2019re live.\\n\\nOnce these new providers have been tested for a while, we will release them as\\n1.0 and include them in the main Uppy and Robodog bundles.\\n\\n## Revoke Companion\u2019s Provider access on logout\\n\\nUp until now, when users clicked \u201clogout\u201d after using a remote Provider, such as\\nGoogle Drive or Dropbox, Uppy would destroy the access token. But on the\\nProvider\u2019s side, Uppy was still allowed access. Should the user click \u201cConnect\\nto Google Drive\u201d again, no extra confirmation was required.\\n\\nAfter a discussion in [#1563](https://github.com/transloadit/uppy/issues/1563),\\nwe are expanding the logout process. Now, when users log out of remote Providers\\nthrough Uppy, Companion will destroy the token as before, but also attempt to\\nrevoke the access from the corresponding Provider. In the event that the\\nProvider doesn\u2019t support access revoke via it\u2019s API, Uppy will display a helpful\\nmessage informing users how they can revoke the permissions manually.\\n\\nSee [#1843](https://github.com/transloadit/uppy/pull/1843) for details.\\n\\n## Misc\\n\\n- @uppy/aws-s3-multipart: fix queueing behaviors, especially interaction with\\n  cancellation (@goto-bus-stop, #1855)\\n- @uppy/aws-s3: replace browser-only resolve-url by isomorphic url-parse\\n  (@goto-bus-stop, #1854)\\n- @uppy/companion-client: rename serverHeaders to companionHeaders\\n  (@goto-bus-stop, #1861)\\n- @uppy/companion: Fix S3 uploads for URL plugins (#1784 / @@ifedapoolarewaju)\\n- @uppy/companion: bump lodash.merge to 4.6.2 to fix audit warning (#1796 /\\n  @rettgerst)\\n- @uppy/companion: set allowed HTTP methods internally (#1754 /\\n  @ifedapoolarewaju)\\n- @uppy/companion: whenever an error is returned from Companion: the auth screen\\n  will be displayed if the user was never authenticated; if the user is\\n  authenticated, the last screen on display before the error will be displayed\\n  (#1743 / @ifedapoolarewaju)\\n- @uppy/core: Made sure we can upload new files if we cancel last file\\n  (allowMultipleUploads: false) (#1764 / @lakesare)\\n- @uppy/core: fix \\"Cannot read property \'log\' of undefined\\" (#1785 / @theJoeBiz)\\n- @uppy/core: use setFileState inside retryUpload (#1759 / @goto-bus-stop)\\n- @uppy/dashboard, @uppy/drag-drop: getDroppedFiles.js: handle exceptions better\\n  (#1797 / @lakesare)\\n- @uppy/form: try/catch parsing, set updatedResult to an empty array when not an\\n  array (#1800 / @arturi)\\n- @uppy/locales: Finnish semantics improved and fixed some typos (#1744 /\\n  @jukakoski)\\n- @uppy/locales: Update sr_RS_Latin.js (#1749 / @nndevstudio)\\n- @uppy/locales: correct some fr_FR localization strings (#1807 / @czj)\\n- @uppy/locales: fix typo in Persian locale (@uxitten, #1865)\\n- @uppy/locales: improve Swedish translation (@marcusforberg, #1859)\\n- @uppy/thumbnail-generator: add waitForThumbnailsBeforeUpload option, false by\\n  default (@arturi, #1803)\\n- @uppy/transloadit: add limit option, warn about using limit when it\u2019s set\\n  to 0. In Uppy 2.0 we\u2019ll set the limit to something sensible (like 10 files) by\\n  default. (#1789 / @arturi)\\n- @uppy/transloadit: pin socket.io version to ES5 compatible one\\n  (@goto-bus-stop,\\n  <https://github.com/transloadit/uppy/commit/5839b655f093edaa778d49b719f7dda063ef79cb>)\\n- @uppy/xhr-upload: Throw an error when trying to upload a remote file with\\n  `bundle: true` (#1769 / @arturi)\\n- build: Fix statefulset update: statefulsets image only should be updated.\\n  (#1821 / @kiloreux)\\n- build: Update eslint to v6 (#1777 / @goto-bus-stop)\\n- build: ci: tweak job run order (#1740 / @goto-bus-stop)\\n- core: Made addFile return the file id (#1739 / @eliOcs)\\n- docs: Link to Transloadit plugin from Robodog Form page (#1810 / @janko)\\n- docs: Talk about using a custom-file input, instead of the file-input plugin\\n  (#1765 / @arturi)\\n- docs: add \u201cforce metafield\u201d to docs and changelog\\n  (ab053e7ab266d3a4838069ed23675bb9211e4d1a / @arturi)\\n- docs: explicitly document supported tus-js-client options (#1755 /\\n  @goto-bus-stop)\\n- docs: fix typo (@leftdevel, #1852)\\n- docs: redux - mentioned that we can\'t persist Uppy state (#1793 / @lakesare)\\n- docs: remove pre-1.0 notice from changelog (@mskelton, #1858)\\n- docs: talk about marking some files as \u201calready uploaded\u201d\\n  (c345cbd58992f7bea9525629c28d38420c6b36a3 / @arturi)\\n- test: add end-to-end test with retries (@ifedapoolarewaju, #1766)\\n- tests: e2e: reintroduce e2e test for providers locally (#1706 /\\n  @ifedapoolarewaju)\\n- website: /examples/dragdrop - added more obvious \'file was uploaded\' indicator\\n  (#1750 / @lakesare)\\n- website: /examples/xhrupload - more obvious UI, added a list of uploaded files\\n  (#1768 / @lakesare)\\n- website: add new version of hexo-filter-github-emojis (#1783 / @lakesare)\\n- website: fix docs/locales code escaping and css overflow\\n  (5a0055c15d04d97e8a0feb784daa7abe8da1d72d / @arturi)\\n\\nAs always, you can find the full list of changes and package versions, as well\\nas future plans, in our\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md)."},{"id":"2019/08/1.3","metadata":{"permalink":"/blog/2019/08/1.3","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-08-1.3.md","source":"@site/blog/2019-08-1.3.md","title":"Uppy 1.3: Accessibility and performance, new languages","description":"Hi there! We are back after a period of silence following the","date":"2019-08-05T00:00:00.000Z","tags":[],"readingTime":7.19,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 1.3: Accessibility and performance, new languages","date":"2019-08-05T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2019/08/1.3"},"unlisted":false,"prevItem":{"title":"Uppy 1.5: Facebook and OneDrive (beta) support, upload cancellation","permalink":"/blog/2019/10/1.5"},"nextItem":{"title":"Uppy 1.0: Your best friend in file uploading","permalink":"/blog/2019/04/1.0"}},"content":"Hi there! We are back after a period of silence following the\\n[Uppy 1.0 release](https://uppy.io/blog/2019/04/1.0/) in the end of April. It\\nwas pretty well received by the commnunity and press: we hit the front pages of\\nHacker News, [Product Hunt](https://www.producthunt.com/posts/uppy-1-0/) and\\n[Reddit](https://www.reddit.com/r/javascript/comments/bhkx5k/uppy_10_your_best_friend_in_file_uploading/).\\nWe then started trending and gained over 20,000 stargazers on GitHub, got\\nmentioned by\\n[Smashing Magazine](https://mobile.twitter.com/smashingmag/status/1097870169043546112),\\n[JavaScript Daily](https://twitter.com/JavaScriptDaily/status/1122935583603556352)\\nand [JavaScript Weekly](https://javascriptweekly.com/issues/434). It\u2019s been a\\ncrazy ride! We\u2019d like to thank all our contributors and users for their\\ncontinued support.\\n\\nIt was not all self reflection and celebrations, though, in Uppy Remote\\nHeadquaters\u2122 following the `1.0` launch. After some vacation time, we quickly\\ngot back to work, releasing Uppy `1.1`, `1.2` and `1.3`. These updates address a\\nlot of issues raised by the community and the team.\\n\\nThis post highlights the most important and exciting changes from those\\nreleases: accessibility and performance, thumbnails rotatation, new logger,\\nprogress and uploader improvements, Robodog and Companion updates, new languages\\nand more.\\n\\n\x3c!--truncate--\x3e\\n\\n## Accessibility\\n\\nOur new team member, Evgenia, has been on a roll and together with Artur and\\nAlex, she has been working hard on improving accessiblity in Uppy. Evgenia has\\ncome up with something called \u201csuperfocus\u201d, which makes sure focus stays on the\\nmost relevant button or field in the current view. The `@uppy/provider-views`\\nlayouts have been refactored so that checkboxes and labels are accessible. Focus\\nstyles have also been improved.\\n\\n<video alt=\\"Demo video showing Uppy focus management in action\\" muted autoplay loop>\\n  <source src=\\"/img/blog/1.3/uppy-focus-demo.webm\\" type=\\"video/webm\\" />\\n  <source src=\\"/img/blog/1.3/uppy-focus-demo.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\nOther notable accessiblity fixes and improvements:\\n\\n- An \u201cAdd more\u201d caption near the + button has been added to the desktop version\\n  of Uppy\\n- \u201cCopy link\u201d & \u201cEdit\u201d links have been replaced with icons\\n- All SVGs are now not focusable in IE11\\n- Pasting works while we\u2019re focused on buttons\\n- Focus is not lost when state is updated in filter in provider-views or when\\n  editing file meta\\n- Selected checkboxes now persist when moving between folders\\n\\n\u26a0\ufe0f `@uppy/provider-views` translation strings have been moved from Dashboard to\\nCore. This eliminates a dependency of provider-views upon Dashboard\\n[#1712](https://github.com/transloadit/uppy/pull/1712).\\n\\nSee [#1507](https://github.com/transloadit/uppy/pull/1507),\\n[#1574](https://github.com/transloadit/uppy/pull/1574) and\\n[#1656](https://github.com/transloadit/uppy/pull/1656) for more details.\\n\\n## Dashboard performance improvements\\n\\nRen\xe9e attacked performance problems in the Dashboard when adding many hundreds\\nof files. Previously, we naively rerendered the entire file list when _any_ file\\nhad a change. Now, only the changed file rerenders:\\n\\nBefore:\\n\\n![slow](https://user-images.githubusercontent.com/1006268/59605307-ce67f580-910e-11e9-992a-6e0c3c2a7570.gif)\\n\\nAfter:\\n\\n![fast](https://user-images.githubusercontent.com/1006268/59605354-e3dd1f80-910e-11e9-9cb3-1b7339650959.gif)\\n\\nSee [#1671](https://github.com/transloadit/uppy/pull/1671) for more details. As\\nyou can see, there are still some laggy interactions \u2014 expect more improvements\\nin future releases!\\n\\n## Logger\\n\\nWe\u2019ve added an option to supply a `logger` object with `debug`, `warn` and\\n`error` methods, so you can use a custom logging solution with Uppy. Check out\\n[the docs](https://uppy.io/docs/uppy/#logger) for more information.\\n\\nIn the future, past 2.0, the `logger: Uppy.debugLogger` option is going to\\nreplace `debug: true`. The latter will be kept for backwards compatibility for\\nnow.\\n\\n\u26a0\ufe0f Since `@uppy/core@1.2`, the default logger has switched to `console.debug`\\nfrom `console.log` by default. You might need to change settings in your\\nbrowser\u2019s devtools to see Uppy logs!\\n\\nVersions of each Uppy plugin and Core are now also logged for easier debugging.\\n\\nSee [#1661](https://github.com/transloadit/uppy/pull/1661) and\\n[#1640](https://github.com/transloadit/uppy/pull/1640) for more details.\\n\\n## Thumbnails rotated correctly\\n\\nBefore this change, when you added a file to Uppy from a mobile device, you\\nwould sometimes see the preview image sideways. This was because we didn\u2019t\\naccount for EXIF rotation metadata when generating thumbnails with\\n`@uppy/thumbnail-generator`. But now, thanks to\\n[@Botz](https://github.com/Botz), we do! See\\n[#1532](https://github.com/transloadit/uppy/pull/1661).\\n\\n## Progress improvements\\n\\n- The Status Bar now shows the correct total size of the upload when some files\\n  have already finished, instead of jumping down\\n  [#1685](https://github.com/transloadit/uppy/pull/1685).\\n- Fixed an issue where progress could jump to bizarrely high values (like 1038%)\\n  while uploading files that don\u2019t have a known size (e.g., pictures from\\n  Instagram) [#1610](https://github.com/transloadit/uppy/pull/1610).\\n- We\u2019ve moved from the `prettier-bytes` package into `@uppy/utils`, and divide\\n  by `1024` instead of `1000` to justify `KB` vs `kB`\\n  [#1732](https://github.com/transloadit/uppy/pull/1732).\\n\\n## Drag and drop\\n\\n- Drag and drop has been refactored internally in both the Dashboard and\\n  DragDrop plugins. This means a more robust and cross-browser implementation,\\n  with a fancy \u201cdrop files here\u201d screen when you drag over the Dashboard.\\n- The `@uppy/drag-drop` plugin now renders an entirely clickable DnD area.\\n\\n![](/img/blog/1.3/drag-drop-focus.png)\\n\\nSee [#1440](https://github.com/transloadit/uppy/pull/1440),\\n[#1565](https://github.com/transloadit/uppy/pull/1565) and\\n[#1633](https://github.com/transloadit/uppy/pull/1633) for more details.\\n\\n## Uploaders\\n\\n- xhr-upload: we now send along global metadata when `bundle: true` option is\\n  set [#1677](https://github.com/transloadit/uppy/pull/1677).\\n- xhr-upload: type and name are set from file.meta\\n  [#1616](https://github.com/transloadit/uppy/pull/1616).\\n- aws-s3-multipart: added metadata support for S3 MultiPart\\n  [#1698](https://github.com/transloadit/uppy/pull/1698).\\n- aws-s3: allows overriding of getResponseData()\\n  [#1647](https://github.com/transloadit/uppy/pull/1647).\\n- aws-s3: prevents unnecessary delete multiparts request for completed files\\n  [#1650](https://github.com/transloadit/uppy/pull/1650).\\n- aws-s3: do not extract keys from empty `fields`\\n  [#1569](https://github.com/transloadit/uppy/pull/1569).\\n- tus: `metaFields` option has been added to the tus plugin\\n  [#1644](https://github.com/transloadit/uppy/pull/1644).\\n\\n## Localization\\n\\nThanks to our amazing contributors, Uppy now speaks: Arabic, Chinese, Dutch,\\nEnglish, Finnish, French, German, Hungarian, Italian, Japanese, Persian,\\nPortuguese, Russian, Serbian, Spanish an Turkish!\\n\\nNew translations are rolling in every month, but there are plenty more languages\\nout there that Uppy would love to learn. Please consider\\n[contributing your language](http://uppy.io/docs/locales/#Contributing-a-new-language)\\nas well!\\n\\nWe\u2019ve also added docs for locales \u2014 how to use from NPM and CDN, auto-generated\\nlist of languages that are supported already and an invitation to add more\\n[#1553](https://github.com/transloadit/uppy/pull/1553).\\n\\nFinally, we\u2019ve fixed an issue that could occur when adding files with names in\\nnon-Latin alphabets. When adding a file to Uppy, it gets an ID based on several\\ncharacteristics, such as its size and file name. Previously, our ID generation\\nwould ignore any non-alphanumeric characters in the file name, which could cause\\nthe IDs for different files to clash. Now, those characters are worked into the\\nID, so that multiple similar files with different non-alphanumeric names can be\\nadded. See [#1722](https://github.com/transloadit/uppy/pull/1722).\\n\\n## Robodog\\n\\nRobodog is an Uppy-based library that helps you talk to the Transloadit API.\\nSince 1.0, most of the updates have been bugfixes:\\n\\n- `Robodog.dashboard()` and `Robodog.form()` now pass their options to the\\n  `@uppy/dashboard` plugin as advertised.\\n- `Robodog.form()` now supports the `triggerUploadOnSubmit` option from\\n  `@uppy/form`.\\n- `Robodog.form()` now supports localization of the \u201cChoose files\u201d button it\\n  adds in the default configuration.\\n\\n## Build\\n\\n- Ren\xe9e split our test runs into multiple jobs on Travis CI, so unit tests,\\n  end-to-end tests and other jobs all run in parallel. This lets us identify\\n  issues with failing builds quicker and also slashes total build times by half!\\n  \ud83d\ude80 [#1709](https://github.com/transloadit/uppy/pull/1709).\\n- Webdriverio, which we use for end-to-end testing, has been updated to v5. This\\n  improves a bunch of things and adds a lot of `await`s to our tests\\n  [#1675](https://github.com/transloadit/uppy/pull/1675).\\n- Build dependencies have been upgraded: Babel to v7, Eslint to v5, Jest to v24,\\n  Typescript to v3, Postcss to v7\\n  [#1549](https://github.com/transloadit/uppy/pull/1686).\\n- Fixed tags for docker build\\n  [#1579](https://github.com/transloadit/uppy/pull/1579).\\n- New `uploadcdn` and sync version scripts\\n  [#1586](https://github.com/transloadit/uppy/pull/1586)\\n  [#1600](https://github.com/transloadit/uppy/pull/1600).\\n\\n## Website and docs\\n\\n- Added Community projects \u2014 a page with Uppy plugins and integrations developed\\n  by the community [#1620](https://github.com/transloadit/uppy/pull/1620).\\n  [Add yours](https://github.com/transloadit/uppy/blob/master/website/src/docs/community-projects.md)!\\n- Custom plugin\\n  [example](http://uppy.io/docs/writing-plugins/#Example-of-a-custom-plugin) \u2014\\n  now you have a reference to look at when writing your own plugin for Uppy\\n  [#1623](https://github.com/transloadit/uppy/pull/1623).\\n- Added signature authentication to Transloadit example\\n  [#1705](https://github.com/transloadit/uppy/pull/1705).\\n- Documented Companion\u2019s Auth and Token mechanism\\n  [#1540](https://github.com/transloadit/uppy/pull/1540).\\n- Updated AWS S3 Multipart documentation wrt CORS settings\\n  [#1539](https://github.com/transloadit/uppy/pull/1539).\\n\\n## Companion\\n\\nOf course, we didn\u2019t forget `@uppy/companion`. It\u2019s getting more robust with\\nevery release:\\n\\n- \u26a0\ufe0f We are now sending an `uppy-versions` header to Companion. Please see\\n  [how to avoid errors if you are using Companion but NOT as standalone](https://github.com/transloadit/uppy/pull/1612#issuecomment-515117137)\\n  [#1612](https://github.com/transloadit/uppy/pull/1686).\\n- Companion now returns mimetypes for Dropbox files\\n  [#1599](https://github.com/transloadit/uppy/pull/1599).\\n- Added colors to logs [#1648](https://github.com/transloadit/uppy/pull/1648).\\n- Changed oauth access token transport method\\n  [#1668](https://github.com/transloadit/uppy/pull/1668).\\n- Companion now displays truer error during oauth failure\\n  [#1702](https://github.com/transloadit/uppy/pull/1702).\\n- Not logging uppyAuthToken and not sending the error stack to client\\n  [#1663](https://github.com/transloadit/uppy/pull/1663).\\n- Properly loading Instagram user name, removed deprecated dropbox field\\n  [#1651](https://github.com/transloadit/uppy/pull/1663)\\n  [#1692](https://github.com/transloadit/uppy/pull/1692).\\n- Return nextPagePath for Drive/Dropbox\\n  [#1652](https://github.com/transloadit/uppy/pull/1652).\\n- Added ability to load secret keys from files\\n  [#1632](https://github.com/transloadit/uppy/pull/1632).\\n- Set upload filename from metadata during uploads\\n  [#1587](https://github.com/transloadit/uppy/pull/1587).\\n\\n## Misc\\n\\n- \u26a0\ufe0f form: now excludes own metadata when creating a new upload. There\u2019s also a\\n  new option to append results to the input instead of overwriting\\n  [#1686](https://github.com/transloadit/uppy/pull/1686).\\n- core: `relativePath` is added to local files when a directory has been\\n  dropped/selected. It is `null` for non-foldered files\\n  [#1602](https://github.com/transloadit/uppy/pull/1602).\\n- core: using `uploadStarted: null` instead of false\\n  [#1628](https://github.com/transloadit/uppy/pull/1628).\\n- status-bar: hide seconds if ETA is more than 1 hour\\n  [#1501](https://github.com/transloadit/uppy/pull/1501).\\n- react: dashboard react component prop typings updated\\n  [#1598](https://github.com/transloadit/uppy/pull/1598).\\n- webcam: Allow definition of MediaRecorder `mimeType`\\n  [#1708](https://github.com/transloadit/uppy/pull/1708).\\n\\nAs always, you can find the full list of changes and package versions, as well\\nas future plans, in our\\n[changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md)."},{"id":"2019/04/1.0","metadata":{"permalink":"/blog/2019/04/1.0","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-1.0.md","source":"@site/blog/2019-04-1.0.md","title":"Uppy 1.0: Your best friend in file uploading","description":"Today, after three years of development, we are launching version 1.0 of Uppy,","date":"2019-04-25T00:00:00.000Z","tags":[],"readingTime":9.525,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 1.0: Your best friend in file uploading","date":"2019-04-25T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/1.0/uppy-dashboard-1.png","published":true,"slug":"2019/04/1.0"},"unlisted":false,"prevItem":{"title":"Uppy 1.3: Accessibility and performance, new languages","permalink":"/blog/2019/08/1.3"},"nextItem":{"title":"Day 30","permalink":"/blog/2019/04/liftoff-30"}},"content":"Today, after three years of development, we are launching version 1.0 of Uppy,\\nour file uploader for web browsers.\\n\\n<img src=\\"/img/blog/1.0/uppy-dashboard-1.png\\" />\\n\\n## A little history\\n\\nThree years ago, Transloadit was ready to replace their jQuery-based file\\nuploading & processing plugin for browsers with something more modern. They\\nposted a [job ad](https://transloadit.com/jobs/2015-10-front-end-developer/) in\\nsearch for people to build it:\\n\\n> In general, we\u2019re looking for polished, well tested, carefully crafted\\n> products that are delightful to work with and use. So for this job it\u2019s not\\n> only important that you know JavaScript, but also how to make things look\\n> stunning and work well for end users.\\n>\\n> At your disposal are time, focus, and the core team ready to provide feedback,\\n> guidance, and anything else you need.\\n\\nShortly after, I saw a retweet of this vacancy come across my time line and I\\ndecided to apply. That, in a nutshell, is how I got involved with Uppy in the\\nearliest stages of the project.\\n\\nInitially, the idea was to build a proprietary uploader that would work\\nexclusively with Transloadit\u2019s commercial service, but we quickly turned around\\non it. We felt our version of a file uploader could have a real impact if we\\nmade it more widely available. So, just like Transloadit had done before with\\n[Tus](https://tus.io/), we decided to make Uppy an open source solution \u2014 free\\nfor anyone to use and hack on. Transloadit support became an optional plugin.\\n\\nThree years,\\n[16.000 stargazers](https://github.com/transloadit/uppy/stargazers), getting\\nfeatured on\\n[Smashing Magazine](https://www.smashingmagazine.com/the-smashing-newsletter/smashing-newsletter-issue-197/),\\n[JavaScript Daily](https://twitter.com/JavaScriptDaily/status/950348390268919809),\\n[Product Hunt](https://www.producthunt.com/posts/uppy-io), and\\n[SurviveJS](https://survivejs.com/blog/uppy-interview/), and a thriving\\ncommunity later\xa0\u2014 and we could not be happier to finally launch Uppy 1.0!\\n\\n\x3c!--truncate--\x3e\\n\\n## Why build Uppy in the first place?\\n\\nWe occasionally get asked why we would even need anything beyond\\n`<input type=\\"file\\">`. Why bring JS into this at all? The truth is, for many\\ncases, `<input type=\\"file\\">` is fine.\\n\\nSometimes, however, you might like to add a drag-and-drop surface with file\\npreviews or upload progress reporting that works well across browsers. Webcam\\nsupport could be useful. Other than that, picking files directly from your\\nInstagram and Dropbox \u2014 without first passing through your mobile phone \u2014 can\\nsave a lot of bandwidth and battery life (uploads with Uppy and Companion happen\\nserver-to-server). In all those cases, you\u2019ll need something more than a simple\\n`<input type=\\"file\\">` tag.\\n\\n<center><iframe style={{border: \\"none\\"}} src=\\"https://cards.producthunt.com/cards/posts/152565?v=1\\" width=\\"598\\" height=\\"405\\" frameborder=\\"0\\" scrolling=\\"no\\" allowfullscreen></iframe></center>\\n\\nThen there\u2019s also the issue of large files, where resumability is essential.\\nIt\u2019s basically unacceptable in this day and age to still have to restart your\\nupload from scratch, just because your WiFi had a hiccup. That\u2019s why Uppy uses\\nTus, the open protocol for resumable file uploading.\\n\\nAll these things significantly improve the user experience to the point where\\nmore files actually make it to your platform, and less users rage-quit and close\\nthe tab. These things become important when uploading is a central aspect of\\nyour website or app. Uppy can also be deployed with nothing but a JS tag, using\\nan existing `<form>` for fallback (to support IE6! :smile:), and your\\nApache/Nginx server.\\n\\n## Building a team to create Uppy\\n\\nThe Uppy team first consisted of [myself](https://github.com/arturi) and\\n[Harry](https://github.com/hedgerh). Since I moved to New York for a while, with\\nmost of the team based in Europe, we got used to having some very early (or\\nlate) calls with significant time differences.\\n\\nI was mostly working on the frontend and building what is known today as the\\n[Dashboard](/examples/dashboard/) \u2014 the fully-featured and most commonly used\\nUppy plugin. Harry took on the first version of what was then called Uppy Server\\n(now Companion) \u2014 responsible for picking files from Google Drive, Instagram,\\nremote Urls, etc.\\n\\nIn 2016, the Transloadit team had a meetup in Amsterdam, where I ended up being\\n[present](https://mobile.twitter.com/arturi/status/701394760796229632) in a most\\nunusual way (in the center):\\n\\n<img src=\\"/img/blog/1.0/amsterdam-team-meetup.jpg\\" />\\n\\nLater that year, [Ife](https://github.com/ifedapoolarewaju) joined the Uppy team\\nas well and took over all Companion work.\\n\\nBuilding all of the intended Uppy features properly took a lot of time. So, two\\nyears after landing the project at Transloadit, I was\\n[writing a job ad post myself](https://transloadit.com/jobs/2017-02-open-source-frontend-dev/)\\nas Uppy was starting to take on serious proportions. That\u2019s where\\n[Ren\xe9e](https://github.com/goto-bus-stop) joined the team (funny story \u2014 we met\\nthrough collaborating on GitHub on Choo and Yo-Yo libraries) to help us with\\nUppy React components, Redux integration, the Golden Retriever plugin and many\\nmore cool features.\\n\\nAround that time, [Alex](https://zaytsev.io/) also joined in to advise us on the\\nUI design, completing the Uppy team as it still stands today.\\n\\nIn the summer of 2017, the Transloadit team had another meeting. This time in\\nBerlin, where we worked on the [Golden Retriever](/docs/golden-retriever/)\\nplugin that helps recover files after browser crashes. We also played Mario Kart\\n(I lost, despite all the practice!) and dressed up as characters from the game:\\n\\n<img src=\\"/img/blog/1.0/uppy-team-kong.jpg\\" />\\n\\nRead more\\n[about Golden Retriever and that team meetup](https://uppy.io/blog/2017/07/golden-retriever/).\\nGolden Retriever got good press on Reddit and Hacker News because it goes above\\nand beyond to make things absurdly reliable. In the demo video, you see us\\n`kill -9` our browser, restart, and the upload just picks right up where it left\\noff. A first!\\n\\n## Challenge accepted: only 30 days to liftoff\\n\\nWe had been postponing the 1.0 release for quite some time. There\u2019s always just\\none more feature you\u2019d like to add or another bug you want to fix, before\\ncalling something ready for a 1.0 release. Truth be told, Uppy has been\\n[used in production](https://github.com/transloadit/uppy#used-by) for a while\\nalready, and even though we iterate and change things frequently, the API had\\nmostly stabilized.\\n\\nSo, about a month ago, we decided to pull the trigger and\\n[announced an Uppy Month](https://uppy.io/blog/2019/03/liftoff-01/) within\\nTransloadit. This meant that all team members, including those not working\\nprimarily on Uppy \u2014 the Tus core team, our SDK teams, as well as our infra and\\nAPI engineers, designers, content writers, and the founders themselves \u2014 all\\nchipped in and did their part to ensure liftoff in thirty days. We also asked\\n[Evgenia](http://github.com/lakesare) to join us for the month to lend a hand\\nwith frontend work. Every week, we had a call where we looked at the Uppy 1.0\\nproject board and talked about our progress:\\n\\n<img src=\\"/img/blog/30daystoliftoff/15-dashboard.png\\" />\\n\\nHere are some highlights of what we\u2019ve managed to deliver during one month of\\nEverything Uppy:\\n\\n- A new Uppy website design.\\n- [Localization support and language packs](https://github.com/transloadit/uppy/pull/1443)\\n  for Russian, German, Dutch and French (with more coming from the community).\\n  [Kevin](https://github.com/kvz) and I wrote a script that loops through all\\n  Uppy plugins in the repo and generates one canonical `en_US` that can be used\\n  as a basis for other translations. The script even checks for missing strings\\n  accross all translations, so you know which ones to update.\\n- [Drag and Drop in the Dashboard](https://github.com/transloadit/uppy/pull/1440),\\n  being an important part of Uppy, has been significantly improved with support\\n  for pasting files and links from both the browser and the device. So you can\\n  now, say, drag a link or an image from a different tab to Uppy!\\n- [Basic React Native support (Beta)](https://github.com/transloadit/uppy/pull/988):\\n  Uppy runs in a React Native environment, we have an example with resumable\\n  uploads via tus, and `@uppy/react-native` Expo-component support for picking\\n  images, videos, documents, and files from remote URLs with the help of\\n  Companion.\\n- [Design facelift](https://github.com/transloadit/uppy/pull/1442): the\\n  Dashboard UI has been significantly improved in the past days: new icons have\\n  been added, as well as typography polishing, better color organization,\\n  enlarged clickable areas, and more.\\n- Many accessibility issues uncovered.\\n- [Robodog gained support for an inline Dashboard](https://github.com/transloadit/uppy/pull/1450).\\n- [The documentation structure has been reworked](https://github.com/transloadit/uppy/pull/1405).\\n- [Transloadit Assemblies can now be properly canceled](https://github.com/transloadit/uppy/pull/1431).\\n- [Upload progress is reported more accurately with XHR-upload and Companion](https://github.com/transloadit/uppy/pull/1454).\\n- [Upload progress is improved in general](https://github.com/transloadit/uppy/pull/1376).\\n- [npm scripts have been refactored](https://github.com/transloadit/uppy/pull/1392)\\n  \u2014 yes, that\u2019s important!\\n- And craziest of all: our content team has been on a roll and\\n  [released a post _every day_](https://uppy.io/blog/2019/03/liftoff-01/) for\\n  the past thirty days to keep you updated on our day-to-day progress.\\n\\n## Which features made it into 1.0? And which didn\u2019t (yet)?\\n\\nUppy 1.0 feature list:\\n\\n- Sleek user interface\\n- Lightweight and easy on dependencies\\n- A small core with modular architecture: everything is a plugin\\n- Uses modern JavaScript with transpiled ES5 versions available in `lib`, and\\n  minified versions for direct use by browsers in `dist`\\n- Usable as a bundle straight from a CDN, as well as a module to import\\n- Resumable file uploads via the open Tus standard\\n- Direct uploads to S3\\n- Webcam support\\n- Picking files from Dropbox, Google Drive and Instagram, while letting servers\\n  do the heavy lifting via Companion\\n- Robust: retries for all-the-things\\n- Built with accessibility in mind (not perfect yet, but we constantly improve)\\n- File recovery (after a browser crash or accidental navigation) via Golden\\n  Retriever\\n- Locale support: easily switch languages or supply your own copy\\n- Compatible with React (React Native in beta)\\n- Works great on mobile\\n- Works great with Transloadit, works great without\\n\\nWe also left two features \u201cbehind\u201d:\\n\\n> Offering sugared shortcuts for novice users (presets)\\n\\nWe felt that Uppy is straightforward enough to use, and presets could end up\\nmaking this less clear. Robodog does offer less \u201cboilerplatey\u201d integrations, but\\nthis was done as a wrapper instead of a preset.\\n\\n> Themable UI with a beautiful default\\n\\nInstead of going for `{ theme: \'dark\' }`, we only offer theming via CSS. For\\ninstance, it\u2019s feasible to utilize the `prefers-color-scheme` media query for\\nthat.\\n\\nLastly, our \u201cpicking files from remote sources\u201d feature isn\u2019t quite as full\\nfledged as we maybe would have liked, since support for Google Photos, Box or\\nFacebook is currently not included. We hope these are things that the community\\ncan help with.\\n\\n## What\u2019s next for Uppy?\\n\\nDoes this mean Uppy is perfect? Nope!\\n\\nThere are still quite a lot of\\n[issues](https://github.com/transloadit/uppy/issues) and items in our backlog,\\nand we are already\\n[planning Uppy 1.1](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#11).\\nWe also want to maybe release a WordPress plugin, add image cropping, and much\\nmore, but we are releasing 1.0 today because it contains virtually all of the\\nfeatures that we set out to implement. These features have all been documented\\nand we don\u2019t expect their APIs to change. If, at some point, they do need to\\nchange, we will have to handle that with care. For instance, by shipping a 2.0\\nversion and making all the noise that comes with it.\\n\\nUppy has already seen serious usage by a seriously large community and by\\nvarious serious enterprises. So, with 1.0, we\u2019re now also signaling to you: Hey,\\nwe take this seriously and we won\u2019t be swapping things out from under your app,\\njust like that. Also, if you don\u2019t yet have Uppy powering your file uploads, now\\nis the best time to give it a shot!\\n\\nWe hope your users will be as delighted by Uppy 1.0 as we have been designing\\nand building it. Seeing your support and contributions while doing so, made all\\nthe difference. Thank you so much! And if you could leave a comment on\\n[ProductHunt](https://www.producthunt.com/posts/uppy-1-0),\\n[Hacker News](https://news.ycombinator.com/item?id=19756159) or\\n[Reddit](https://www.reddit.com/r/javascript/comments/bhkx5k/uppy_10_your_best_friend_in_file_uploading/)\\nand give us your brutal opinion, that would mean the world to us!\\n\\n\x3c!-- <center>\\n<a href=\\"https://www.producthunt.com/posts/uppy-1-0?utm_source=badge-featured&utm_medium=badge&utm_souce=badge-uppy-1-0\\" target=\\"_blank\\"><img src=\\"https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=152565&theme=dark\\" alt=\\"Uppy 1.0 - Your best friend in file uploading | Product Hunt Embed\\" style=\\"width: 250px; height: 54px;\\" width=\\"250px\\" height=\\"54px\\" /></a>\\n</center> --\x3e"},{"id":"2019/04/liftoff-30","metadata":{"permalink":"/blog/2019/04/liftoff-30","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-30.md","source":"@site/blog/2019-04-liftoff-30.md","title":"Day 30","description":"And then there were none! Zero days left in our thirty-day blog post challenge.","date":"2019-04-24T00:00:00.000Z","tags":[],"readingTime":2.36,"hasTruncateMarker":true,"authors":[{"name":"kvz"}],"frontMatter":{"title":"Day 30","date":"2019-04-24T00:00:00.000Z","author":"kvz","image":"https://uppy.io/img/blog/30daystoliftoff/day30.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-30"},"unlisted":false,"prevItem":{"title":"Uppy 1.0: Your best friend in file uploading","permalink":"/blog/2019/04/1.0"},"nextItem":{"title":"Day 29","permalink":"/blog/2019/04/liftoff-29"}},"content":"And then there were none! Zero days left in our thirty-day blog post challenge.\\nI can\'t believe this is already the final day of our push to get Uppy to 1.0.\\nThere\'s still a bunch of things that we\'d like to finish before shipping, so\\nlet\'s dive right in.\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day30.jpg\\" /><br /><br /></center>\\n\\n\x3c!--truncate--\x3e\\n\\n- [Tim](https://github.com/tim-kos) added additional information to the\\n  migration guide, so Transloadit customers looking to move from the jQuery SDK\\n  to Uppy Robodog will have an easier time doing so. He also implemented support\\n  for a jQuery SDK parameter that didn\'t work in Robodog.form yet, and smashed\\n  out the [German Locale Pack](https://github.com/transloadit/uppy/pull/1475)!\\n\\n- [Abdel](https://github.com/kiloreux)\\n  [translated](https://github.com/transloadit/uppy/pull/1481) Uppy to French.\\n  <img src=\\"https://avatars1.githubusercontent.com/u/20061212?s=460&v=4\\" width=\\"16\\" align=\\"absmiddle\\"/>\\n\\n- [Artur](https://github.com/arturi)\\n  [documented](https://github.com/transloadit/uppy/pull/1468) the Thumbnail\\n  Generator plugin and made a few more hardcoded English strings translatable\\n  via Locale Packs. For instance, we can even translate\\n  \\"[Powered By](https://github.com/transloadit/uppy/commit/6d36309b72b62e215caa172a6300a0f0c7083ce8)\\"\\n  now\\n\\nWe also had a team call where we discussed which _To Do\'s_ we can leave behind\\nfor the launch, and which ones we\'d really like to get in. To save time for\\nactually working on these tasks, instead of typing, let me share a screenshot of\\nwhat we agreed upon:\\n\\n<center><a rel=\\"noreferrer noopener\\" target=\\"_blank\\" href=\\"https://uppy.io/img/blog/30daystoliftoff/2019-04-day30-board.png\\"><img src=\\"/img/blog/30daystoliftoff/2019-04-day30-board.png\\" /></a><br /><br /></center>\\n\\nIt\'s gonna be a close call. [Ife](https://github.com/ifedapoolarewaju),\\nespecially, has a lot on his plate with that\\n\\"[600MB issue](https://github.com/tus/tus-js-client/issues/146)\\" still\\nuntackled, but we did get [Marius](https://github.com/Acconut) on board with the\\nway we want to solve it, so now it\'s full steam ahead.\\n\\nBefore I\'m going back to the team and help out where I can, I\'d like to thank\\nyou for reading along with us for these past thirty days. To be honest, at\\ntimes, we regretted making this commitment.\\n\\n<center><br /><img src=\\"/img/blog/30daystoliftoff/2019-04-day30-posts.png\\" /><br /><br /></center>\\n\\nA post a day can steal focus, but we learned a lot. It quickly became clear that\\nin order to set ourselves up for success, we needed to plan ahead and establish\\nsome basic rules. Strict deadlines, for instance, helped out a lot: the first\\niteration needed to be in before lunch, with a second one done shortly after\\nlunch. Otherwise, folks would end up working overtime or even on the next day,\\nwhen it was already time for the next post.\\n\\nLuckily, we had our content team to take ownership of the whole process and keep\\nthese distractions away from the Uppy core team as much as possible. In the end,\\nwe really enjoyed sharing our development process with the world and giving\\ninterested developers a better understanding of what we\'re trying to accomplish,\\nand how.\\n\\nWe hope to see you tomorrow again for our 1.0 launch, which will be accompanied\\nby a meaty release post! Make sure to follow us on\\n[Twitter](https://twitter.com/uppy_io) or via our\\n[RSS feed](https://uppy.io/blog/atom.xml) if you don\'t want to miss it!\\n\\n\x3c!-- <center><img width=\\"400\\" src=\\"https://media.giphy.com/media/11syU6ZZ6PsGRO/giphy.gif\\" /><br/><br/></center> --\x3e"},{"id":"2019/04/liftoff-29","metadata":{"permalink":"/blog/2019/04/liftoff-29","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-29.md","source":"@site/blog/2019-04-liftoff-29.md","title":"Day 29","description":"With Easter behind us, only two days remain before the Uppy 1.0 release!. We","date":"2019-04-23T00:00:00.000Z","tags":[],"readingTime":2.06,"hasTruncateMarker":true,"authors":[{"name":"tyler"}],"frontMatter":{"title":"Day 29","date":"2019-04-23T00:00:00.000Z","author":"tyler","published":true,"image":"https://uppy.io/img/blog/30daystoliftoff/day-29.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-29"},"unlisted":false,"prevItem":{"title":"Day 30","permalink":"/blog/2019/04/liftoff-30"},"nextItem":{"title":"Day 28","permalink":"/blog/2019/04/liftoff-28"}},"content":"With Easter behind us, only two days remain before the **Uppy 1.0 release!**. We\\nhope you\'re anticipating the launch as much as we are looking forward to being\\nout from under the pressure of geting everything done in time!\\n\\nIn terms of progress and completed features, things are looking good. We don\'t\\nhave the entire team present today due to personal holidays and other\\ncommitments, but there\'s no slowing down as we approach our deadline! This\\nafternoon, we\'re having our final Uppy 1.0 call where we\'ll make final decisions\\non what we will \u2014 and won\'t \u2014 get done before Thursday.\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day-29.jpg\\" /><br /><br /></center>\\n\\n\x3c!--truncate--\x3e\\n\\n- The [Russian language pack](https://github.com/transloadit/uppy/pull/1467) for\\n  Uppy was added by [Artur](https://github.com/arturi).\\n  [Alex](https://github.com/nqst) and Evgenia have been weighing in with some\\n  feedback of their own to help get it completed. Feel free to contibute if you\\n  know Russian!\\n\\n- The [Dutch languge pack](https://github.com/transloadit/uppy/pull/1462) for\\n  Uppy was also added, this time not by one of us, but by an enterprising member\\n  of the Uppy community! Duizend maal dank,\\n  [Geert](https://github.com/geertclerx)!\\n\\n- [Ife](https://github.com/ifedapoolarewaju) fixed an issue involving the\\n  Transloadit API responding successfully before the upload is complete. This\\n  occurred when using XHR for uploading. Now, when using Companion, there will\\n  be a check for any mismatch in bytes from an uploaded file to ensure this does\\n  not happen any more.\\n\\n- Ife\'s [fix](https://github.com/transloadit/uppy/pull/1454) for issues with\\n  illusive progress for multipart uploads, was also tested and approved by\\n  Artur.\\n\\n- [Artur\'s](https://github.com/arturi) contributions didn\'t end there! He also\\n  updated our\\n  [React Native example](https://github.com/transloadit/uppy/pull/1469) to use\\n  Uppy 0.30.5.\\n\\n- We had a bit of an issue after releasing Uppy 0.30.5, which involved\\n  [404 errors being thrown](https://github.com/transloadit/uppy/issues/1466) for\\n  certain 0.30.5-specific CSS and JS files. This was an issue regarding one of\\n  our CDN scripts, which was aptly fixed by [Kevin](https://github.com/kvz).\\n\\n- [Abdel](https://github.com/kiloreux) is creating the French language pack for\\n  Uppy, and is considering working on an Arabic one for post-1.0 updates as\\n  well.\\n\\n- [Evgenia](https://github.com/lakesare) has continued her work on\\n  [accessibility issues with Uppy\'s provider views](https://github.com/transloadit/uppy/issues/created_by/nqst)\\n  and is planning on adding her improvements in the coming days.\\n\\nDon\'t forget that today is Day 29 of our \'30 Days to Liftoff\' challenge. With\\n**Uppy 1.0** on its way and our blog post challenge coming to an end, we hope\\nyou won\'t miss these quick updates too much! If you can\'t stand to miss our\\ngrand finale [tomorrow](/blog/2019/04/liftoff-30/), make sure to follow us on\\n[Twitter](https://twitter.com/uppy_io) and have a look at our\\n[RSS feed](https://uppy.io/blog/atom.xml)."},{"id":"2019/04/liftoff-28","metadata":{"permalink":"/blog/2019/04/liftoff-28","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-28.md","source":"@site/blog/2019-04-liftoff-28.md","title":"Day 28","description":"Happy second day of Easter! Just three days left before we launch Uppy 1.0 on","date":"2019-04-22T00:00:00.000Z","tags":[],"readingTime":0.65,"hasTruncateMarker":true,"authors":[{"name":"aj"}],"frontMatter":{"title":"Day 28","date":"2019-04-22T00:00:00.000Z","author":"aj","image":"https://uppy.io/img/blog/30daystoliftoff/easterdog2.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-28"},"unlisted":false,"prevItem":{"title":"Day 29","permalink":"/blog/2019/04/liftoff-29"},"nextItem":{"title":"Day 27","permalink":"/blog/2019/04/liftoff-27"}},"content":"Happy second day of Easter! Just three days left before we launch Uppy 1.0 on\\nthe 25th! :scream: It\'s gonna be a few busy days for us, so we want to spend\\ntoday getting rested up and ready to go.\\n\\nHere\'s an 80\'s-style montage of GIFs to give you an idea of what we\'re doing to\\nget all pumped up and ready for the final sprint!\\n\\n\x3c!--truncate--\x3e\\n\\n<center><img width=\\"400\\"  src=\\"https://media.giphy.com/media/12TOAdbCuQe2wE/giphy.gif\\" /><br/><br/></center>\\n<center><img width=\\"400\\"  src=\\"https://media.giphy.com/media/yBjUwriEYpFyE/giphy.gif\\" /><br/><br/></center>\\n<center><img width=\\"400\\"  src=\\"https://media.giphy.com/media/KXKSxnXsjw9Ne/giphy.gif\\" /><br/><br/></center>\\n<center><img width=\\"400\\"  src=\\"https://media.giphy.com/media/cLcxtL1z8t8oo/giphy.gif\\" /><br/><br/></center>\\n<center><img width=\\"400\\"  src=\\"https://media.giphy.com/media/ngzhAbaGP1ovS/giphy.gif\\" /><br/><br/></center>\\n\\nSee you back tomorrow on [Day 29](/blog/2019/04/liftoff-29/) of our 30 Days to\\nLiftoff! We\'ll have a lot more to share as we prepare for Uppy\'s Big Day. Give\\nus a follow on [Twitter](https://twitter.com/uppy_io) or on\\n[RSS](https://uppy.io/blog/atom.xml) to stay up to date with everything."},{"id":"2019/04/liftoff-27","metadata":{"permalink":"/blog/2019/04/liftoff-27","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-27.md","source":"@site/blog/2019-04-liftoff-27.md","title":"Day 27","description":"Happy Easter everyone! It\'s like a regular Sunday, but with a","date":"2019-04-21T00:00:00.000Z","tags":[],"readingTime":0.415,"hasTruncateMarker":true,"authors":[{"name":"aj"}],"frontMatter":{"title":"Day 27","date":"2019-04-21T00:00:00.000Z","author":"aj","image":"https://uppy.io/img/blog/30daystoliftoff/easterdog1.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-27"},"unlisted":false,"prevItem":{"title":"Day 28","permalink":"/blog/2019/04/liftoff-28"},"nextItem":{"title":"Day 26","permalink":"/blog/2019/04/liftoff-26"}},"content":"Happy Easter everyone! :egg::rabbit: It\'s like a regular Sunday, but with a\\ncherry on top! Spring is also in the air, so we wish you all some nice weather\\nto enjoy with friends and family. Since we are also spending today egg hunting\\nrather than bug chasing, we\'ll keep it short. So, once more, from us \u2014 and this\\nlovely Roomba-riding pup:\\n\\n<center><img width=\\"400\\"  src=\\"https://media.giphy.com/media/OdL7yHj11i3Xa/giphy.gif\\" /><br/><br/></center>\\n\\n\x3c!--truncate--\x3e\\n\\nWe\'ll be back tomorrow on [Day 28](/blog/2019/04/liftoff-28/) with another small\\neaster egg from the Uppy team!"},{"id":"2019/04/liftoff-26","metadata":{"permalink":"/blog/2019/04/liftoff-26","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-26.md","source":"@site/blog/2019-04-liftoff-26.md","title":"Day 26","description":"\'Twas the night before Easter, when all through the house. Not a creature was","date":"2019-04-20T00:00:00.000Z","tags":[],"readingTime":0.635,"hasTruncateMarker":true,"authors":[{"name":"aj"}],"frontMatter":{"title":"Day 26","date":"2019-04-20T00:00:00.000Z","author":"aj","image":"https://uppy.io/img/blog/30daystoliftoff/sleepingdog.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-26"},"unlisted":false,"prevItem":{"title":"Day 27","permalink":"/blog/2019/04/liftoff-27"},"nextItem":{"title":"Day 25","permalink":"/blog/2019/04/liftoff-25"}},"content":"\'Twas the night before Easter, when all through the house. Not a creature was\\nstirring, not even a... pup?\\n\\n<center><img width=\\"400\\" src=\\"https://media.giphy.com/media/hKBwl3S9hQaas/giphy.gif\\" /><br/><br/></center>\\n\\n\x3c!--truncate--\x3e\\n\\nThat\'s right! It\'s another day of leisurly fun and relaxation for the Uppy team.\\nWe\'re kind of in the calm before the storm right now, though. First, we\'ll have\\na few days of Easter ahead \u2014 filled to the brim with chocholate, eggs and\\nbunnies \u2014 and then it\'s off to the races for real.\\n\\nWhen we return on Tuesday, we\'ll only have two working days left before the\\n**Uppy 1.0 launch on April 25** and a few big tasks still remain uncompleted.\\nSo, while we wait for crunch time to begin, enjoy some nice holiday updates from\\nus over the coming days!"},{"id":"2019/04/liftoff-25","metadata":{"permalink":"/blog/2019/04/liftoff-25","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-25.md","source":"@site/blog/2019-04-liftoff-25.md","title":"Day 25","description":"Why have a Good Friday when you can have a Great Friday instead!? Today is the","date":"2019-04-19T00:00:00.000Z","tags":[],"readingTime":0.545,"hasTruncateMarker":true,"authors":[{"name":"aj"}],"frontMatter":{"title":"Day 25","date":"2019-04-19T00:00:00.000Z","author":"aj","image":"https://uppy.io/img/blog/30daystoliftoff/gooddog.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-25"},"unlisted":false,"prevItem":{"title":"Day 26","permalink":"/blog/2019/04/liftoff-26"},"nextItem":{"title":"Day 24","permalink":"/blog/2019/04/liftoff-24"}},"content":"Why have a Good Friday when you can have a Great Friday instead!? Today is the\\nbeginning of an extra-long weekend, which most of the Uppy crew will spend by\\nstaying away from computers and catching up on some naptime:\\n\\n<center><img width=\\"400\\"  src=\\"https://media.giphy.com/media/aeu60CPZd8zw4/giphy.gif\\" /><br/><br/></center>\\n\\n\x3c!--truncate--\x3e\\n\\nEven though there\'s still quite a bit to do before the **Uppy 1.0 launch next\\nweek**, we\'re taking these few days for ourselves to fully recharge the\\nbatteries before breaking into our final sprint on\\n[Tuesday](/blog/2019/04/liftoff-29/). :running: Be sure to check in with us\\nduring the weekend, though, for some fun little updates in our 30 Days to\\nLiftoff!\\n\\nHave a Great Friday everyone!"},{"id":"2019/04/liftoff-24","metadata":{"permalink":"/blog/2019/04/liftoff-24","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-24.md","source":"@site/blog/2019-04-liftoff-24.md","title":"Day 24","description":"Only six days remain in our \'30 Days to Liftoff\' blog post challenge toward","date":"2019-04-18T00:00:00.000Z","tags":[],"readingTime":2.22,"hasTruncateMarker":true,"authors":[{"name":"tyler"}],"frontMatter":{"title":"Day 24","date":"2019-04-18T00:00:00.000Z","author":"tyler","published":true,"image":"https://uppy.io/img/blog/30daystoliftoff/day24-1.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-24"},"unlisted":false,"prevItem":{"title":"Day 25","permalink":"/blog/2019/04/liftoff-25"},"nextItem":{"title":"Day 23","permalink":"/blog/2019/04/liftoff-23"}},"content":"Only six days remain in our \'30 Days to Liftoff\' blog post challenge toward\\n**releasing Uppy 1.0 on April 25**. Technically, it\'s even less than that,\\nseeing as Easter is coming up and we won\'t be doing much work during the\\nholidays. So, with just three working days left, we are starting to feel the\\nheat. :fire:\\n\\nLuckily, we\'re also very close to reaching all of our release goals. Let\'s take\\na look at where we are now!\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day24.gif\\" /><br /><br /></center>\\n\\n\x3c!--truncate--\x3e\\n\\n- [Evgenia](https://github.com/lakesare) has made some great progress on\\n  improving the\\n  [drag to upload state](https://github.com/transloadit/uppy/pull/1440) for the\\n  Uppy Dashboard in a variety of browsers. We are also considering adding more\\n  MIME types later, to report types correctly even when browser fail at it and\\n  give file previews their own unique icons.\\n\\n- [Alex\'s](https://github.com/nqst)\\n  [design facelift](https://github.com/transloadit/uppy/pull/1452) was completed\\n  after some testing by [Artur](https://github.com/arturi). Take a look at some\\n  of the improvements below:\\n\\n<center><br /><img src=\\"/img/blog/30daystoliftoff/2019-04-18-design.png\\" /><br /></center>\\n\\n- [Tim](https://github.com/tim-kos) will be spending today thoroughly testing\\n  Uppy in preparation for the upcoming release. We think just about everything\\n  is working, so now it\'s time for someone to try and break it all! :hammer:\\n  Slight warning: we\'re in the process of making some big behind-the-scenes\\n  changes, so there may be some issues that crop up on our webpage.\\n\\n- Uppy 0.30.5 will be released by [Artur](https://github.com/arturi) today. One\\n  of the main changes here is our name change from the `serverUrl` property to\\n  `companionUrl`. A simple check is being added and we will notify users that it\\n  has been depreceated, so they have ample time to apply the change to their own\\n  code.\\n\\n- An alpha version of\\n  [React Native support](https://github.com/transloadit/uppy/pull/988) was\\n  merged into our Uppy master branch on Github. We\'re confident that our initial\\n  release will be useful for those who need a basic implementation. Of course,\\n  our React Native development will continue as we go forth, so stay tuned for\\n  that.\\n\\n- [Ife](https://github.com/ifedapoolarewaju) and\\n  [Marius](https://github.com/Acconut) continue their work on large-file issues\\n  related to React Native and tus-js-client. They are considering to add a tus\\n  option to allow React Native developers to pass their own custom file picker\\n  module. This would add some flexibility for developers and prevent us from\\n  bloating tus-js-client.\\n\\n- Error reporting for the Transloadit plugin will be worked on by\\n  [Ren\xe9e](https://github.com/goto-bus-stop). This will ensure users are notified\\n  of various issues while utilizing the API, such as connection issues.\\n\\nThus ends Day 24. We\'re all taking an early break for Good Friday tomorrow and\\nwe hope you\'ll have a Good one as well! Check us out on\\n[Twitter](https://twitter.com/uppy_io) and on\\n[RSS](https://uppy.io/blog/atom.xml) as we edge closer to **Uppy 1.0** :dog:"},{"id":"2019/04/liftoff-23","metadata":{"permalink":"/blog/2019/04/liftoff-23","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-23.md","source":"@site/blog/2019-04-liftoff-23.md","title":"Day 23","description":"Hello and welcome to Day 23 of our \'30 Days to Liftoff\' blog post challenge. The","date":"2019-04-17T00:00:00.000Z","tags":[],"readingTime":1.525,"hasTruncateMarker":true,"authors":[{"name":"samuel"}],"frontMatter":{"title":"Day 23","date":"2019-04-17T00:00:00.000Z","author":"samuel","image":"https://uppy.io/img/blog/30daystoliftoff/day23.png","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-23"},"unlisted":false,"prevItem":{"title":"Day 24","permalink":"/blog/2019/04/liftoff-24"},"nextItem":{"title":"Day 22","permalink":"/blog/2019/04/liftoff-22"}},"content":"Hello and welcome to Day 23 of our \'30 Days to Liftoff\' blog post challenge. The\\nlaunch date for **Uppy 1.0** is still set for **April the 25th** and a lot of\\nwork is ongoing to make it happen. Let\'s take a look at the updates for today!\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day23.png\\" /><br /><br /></center>\\n\\n\x3c!--truncate--\x3e\\n\\n- [Artur](https://github.com/arturi) and [Kevin](https://github.com/kvz)\\n  **finished** the implementation of\\n  [language packs](https://github.com/transloadit/uppy/pull/1443) so that you\\n  can now display Uppy in your (user\'s) local Language. Here is a quick example\\n  on how it is intended for use:\\n\\n```js\\n// npm install @uppy/locales --save\\nconst russianLocale = require(\'@uppy/locales/lib/ru_RU\');\\n\\nconst uppy = Uppy({\\n\\tlocale: russianLocale,\\n});\\n```\\n\\nand if you\'d use the CDN version of Uppy (instead of bundling and hosting\\nyourself:\\n\\n```html\\n<script src=\\"https://releases.transloadit.com/uppy/v0.30.5/uppy.min.js\\"><\/script>\\n<script src=\\"https://releases.transloadit.com/uppy/v0.30.5/locales/ru_RU.min.js\\"><\/script>\\n<script>\\nvar uppy = Uppy.Core({\\n  locale: Uppy.locales.ru_RU\\n})\\n<script>\\n```\\n\\nWhile the new locale packs weren\'t finished, we had to reject updates to the old\\nlocales, and quickly became outdated for which we are very sorry. To all\\nlanguage contributors, we hope you can forgive us, and that you\'re willing to\\ntranslate the\\n[updated en_US locale](https://github.com/transloadit/uppy/blob/master/packages/%40uppy/locales/src/en_US.js)\\nto your own language! This time we promise your contributions will make it to\\n1.0!\\n\\n- [Alex](https://github.com/nqst) continues to work on a\\n  [new design for the uppy.io website](https://github.com/transloadit/uppy/pull/1452).\\n\\n- [Ife](https://github.com/ifedapoolarewaju) finished updating Companion to\\n  report [better progress](https://github.com/transloadit/uppy/pull/1454) when\\n  it\'s downloading something that it needs to upload to an XHR target.\\n\\n- [Ren\xe9e](https://github.com/goto-bus-stop) is working on error reporting for\\n  the Transloadit plugin as mentioned yesterday, which notifies us of\\n  connectivity problems when they occur.\\n\\n- [Evgenia](https://github.com/lakesare) continues her work on browser\\n  compatibility for dropping or pasting URLs.\\n\\nOn that note, Day 23 of our thirty-day challenge comes to an end. Tomorrow looks\\nlike it will be another exciting day, so don\'t hesitate to keep checking up on\\nus via [Twitter](https://twitter.com/uppy_io) or\\n[RSS](https://uppy.io/blog/atom.xml)!"},{"id":"2019/04/liftoff-22","metadata":{"permalink":"/blog/2019/04/liftoff-22","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-22.md","source":"@site/blog/2019-04-liftoff-22.md","title":"Day 22","description":"We will launch Uppy 1.0 on April 25 and this is our \'30 Days to Liftoff\'","date":"2019-04-16T00:00:00.000Z","tags":[],"readingTime":1.72,"hasTruncateMarker":true,"authors":[{"name":"kvz"}],"frontMatter":{"title":"Day 22","date":"2019-04-16T00:00:00.000Z","author":"kvz","image":"https://uppy.io/img/blog/30daystoliftoff/day22.png","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-22"},"unlisted":false,"prevItem":{"title":"Day 23","permalink":"/blog/2019/04/liftoff-23"},"nextItem":{"title":"Day 21","permalink":"/blog/2019/04/liftoff-21"}},"content":"We will launch **Uppy 1.0 on April 25** and this is our \'30 Days to Liftoff\'\\nblog post challenge where we share updates on our progress each day! Let\'s see\\nwhat happened on Day 22.\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day22.png\\" /><br /><br /></center>\\n\\n\x3c!--truncate--\x3e\\n\\n- [Artur](https://github.com/arturi) and [Kevin](https://github.com/kvz) have\\n  been pairing on\\n  [language packs](https://github.com/transloadit/uppy/pull/1443) and are nearly\\n  done with it. Tr\xe8s bien, magnifique!\\n\\n<center><img src=\\"/img/blog/30daystoliftoff/localetodos.png\\" /><br/><br/></center>\\n\\nAfter this, it will be just as easy to maintain language/locale packs as it will\\nbe to switch Uppy to your favorite language. Fun fact: we experimented a bit\\nwith Google Sheets and Google Translate to automatically create a first swing\\nfor a few of the languages we want to launch with.\\n\\n<center><a rel=\\"noreferrer noopener\\" target=\\"_blank\\" href=\\"https://uppy.io/img/blog/30daystoliftoff/sheetstranslate.png\\"><img src=\\"/img/blog/30daystoliftoff/sheetstranslate.png\\" /></a></center>\\n\\nIt kinda worked! Google automatically translates to target languages in each\\ncolumn we add, for each change we make in the original! In the end, though, we\\ndecided this was not the way to go, as it really didn\'t save us any time. As it\\nturns out, starting from a good English version of the text is _way_ easier than\\nmaking sense of a broken Google translation. It was a fun experiment nonetheless\\nand it\'s cool to see where this is all heading!\\n\\nArtur will also be reviewing the many PRs that have been submitted by both\\nTransloadians and outside contributors.\\n\\n- [Alex](https://github.com/nqst) finished his redesign for the new website:\\n\\n<center><a rel=\\"noreferrer noopener\\" target=\\"_blank\\" href=\\"https://uppy.io/img/blog/30daystoliftoff/webdesign2.png\\"><img src=\\"/img/blog/30daystoliftoff/webdesign2.png\\" /></a></center>\\n\\n..and will start implementing it today! He also worked on more\\n[design improvements for Uppy itself](https://github.com/transloadit/uppy/pull/1452).\\n\\n- [Ife](https://github.com/ifedapoolarewaju) is investigating incorrect progress\\n  reporting / uploads with XHR and Companion.\\n\\n- [Ren\xe9e](https://github.com/goto-bus-stop) finished work on making Robodog work\\n  with an [inline dashboard](https://github.com/transloadit/uppy/pull/1450), as\\n  well as fix a bug in how we log to the console. Up next, Ren\xe9e will work on\\n  error reporting for the Transloadit Plugin.\\n\\n- [Evgenia](https://github.com/lakesare) finished her work on\\n  [drag and drop improvements](https://github.com/transloadit/uppy/pull/1440)\\n  and will continue working on accessibility improvements.\\n\\nStay current by following us on [Twitter](https://twitter.com/uppy_io) or\\nsubscribing to regular updates on [RSS](https://uppy.io/blog/atom.xml). See you\\ntomorrow for [Day 23](/blog/2019/04/liftoff-23/)!"},{"id":"2019/04/liftoff-21","metadata":{"permalink":"/blog/2019/04/liftoff-21","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-21.md","source":"@site/blog/2019-04-liftoff-21.md","title":"Day 21","description":"We\'re reaching the final stretch of our \'30 Days to Liftoff\' blog post","date":"2019-04-15T00:00:00.000Z","tags":[],"readingTime":1.66,"hasTruncateMarker":true,"authors":[{"name":"tyler"}],"frontMatter":{"title":"Day 21","date":"2019-04-15T00:00:00.000Z","author":"tyler","image":"https://uppy.io/img/blog/30daystoliftoff/day21.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-21"},"unlisted":false,"prevItem":{"title":"Day 22","permalink":"/blog/2019/04/liftoff-22"},"nextItem":{"title":"Day 20","permalink":"/blog/2019/04/liftoff-20"}},"content":"We\'re reaching the final stretch of our \'30 Days to Liftoff\' blog post\\nchallenge. After a refreshing weekend, the entire team is ready to give it their\\nall over the next ten days to ensure that **Uppy 1.0 reaches its April 25**\\nrelease date.\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day21.jpg\\" /><br /><br /></center>\\n\\nSince we\'re starting the week strong and prepared, let\'s take a quick glance at\\nhow our Uppy dashboard is looking.\\n\\n\x3c!--truncate--\x3e\\n\\n<center><img width=\\"\\" src=\\"/img/blog/30daystoliftoff/15-dashboard.png\\" /><br/><br/></center>\\n\\nThere are still a few unique, and possibly daunting, tasks left for the\\nremainder of the development cycle, but the team is taking each issue in stride\\nand adding features with ease.\\n\\n- [Ife](https://github.com/ifedapoolarewaju)\\n  [fixed a bug](https://github.com/transloadit/uppy/commit/9f02d749b9aa4095e5871713ea2f25a716a21539)\\n  on the React Native side of things to get rid of an error that was present on\\n  one of our Android examples. Additionally, he made some name changes in a\\n  number of files \u2014 changing `serverUrl` to `companionUrl` and `serverPattern`\\n  to `companionAllowedHosts`.\\n\\n- [Artur](https://github.com/arturi) and [Kevin](https://github.com/kvz) will\\n  continue pairing on\\n  [language packs](https://github.com/transloadit/uppy/pull/1443) throughout\\n  today.\\n\\n- Ife is also still tackling the\\n  [large file size upload issue](https://github.com/tus/tus-js-client/issues/146)\\n  we\'re having with React Native. He managed to find the source of the issue,\\n  but Both Ife and [Marius](https://github.com/Acconut) will be investigating\\n  how best to move on from here.\\n\\n- [Ren\xe9e](https://github.com/goto-bus-stop) continues working on making Robodog\\n  work with an inline dashboard. They plan to have a demo and documentation up\\n  and running sometime today.\\n\\n- The\\n  [drag and drop improvements](https://github.com/transloadit/uppy/pull/1440)\\n  being made by [Evgenia](https://github.com/lakesare) will also continue today,\\n  with some of her current improvements being the removal of the flickering\\n  issue and a nicer background design while using the feature.\\n\\n- [Alex](https://github.com/nqst)\\n  [discovered an issue](https://github.com/transloadit/uppy/issues/1447) with\\n  the filter field when using Google Drive on the Dashboard.\\n\\nOur goal is in sight, so we\'re starting to get pretty excited! Keep us in your\\nthoughts by giving us a follow on [Twitter](https://twitter.com/uppy_io) or\\nsubscribing to regular updates on [RSS](https://uppy.io/blog/atom.xml).\\n[Day 22](/blog/2019/04/liftoff-22/) is up next, so you can look forward to\\nanother lovely post from Kevin!"},{"id":"2019/04/liftoff-20","metadata":{"permalink":"/blog/2019/04/liftoff-20","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-20.md","source":"@site/blog/2019-04-liftoff-20.md","title":"Day 20","description":"And on the seventh day, Uppy rested We, too, will be spending this day","date":"2019-04-14T00:00:00.000Z","tags":[],"readingTime":0.505,"hasTruncateMarker":true,"authors":[{"name":"aj"}],"frontMatter":{"title":"Day 20","date":"2019-04-14T00:00:00.000Z","author":"aj","image":"https://uppy.io/img/blog/30daystoliftoff/coffeedog.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-20"},"unlisted":false,"prevItem":{"title":"Day 21","permalink":"/blog/2019/04/liftoff-21"},"nextItem":{"title":"Day 19","permalink":"/blog/2019/04/liftoff-19"}},"content":"And on the seventh day, Uppy rested :angel: We, too, will be spending this day\\nin quiet contemplation (and most certainly not by sleeping off yesterday\'s\\nescapades). So if there isn\'t anything else you need us for, we\'ll be grabbing\\nour blankets and heading back to bed:\\n\\n\x3c!--truncate--\x3e\\n\\n<center><img width=\\"400\\"  src=\\"https://media.giphy.com/media/xC5LOq3LMQmqs/giphy.gif\\" /><br/><br/></center>\\n\\nFeel free to hit that snooze button a few more times yourself, before enjoying\\nthe remainder of your weekend. We\'ll see you back tomorrow on\\n[Day 21](/blog/2019/04/liftoff-21/), when we\'ll have some more real news to\\nshare as we head into the final stretch of our 30 Days to Liftoff!"},{"id":"2019/04/liftoff-19","metadata":{"permalink":"/blog/2019/04/liftoff-19","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-19.md","source":"@site/blog/2019-04-liftoff-19.md","title":"Day 19","description":"Hey DJ, turn the music Uppy! We\'re taking a few well-deserved days off from","date":"2019-04-13T00:00:00.000Z","tags":[],"readingTime":0.49,"hasTruncateMarker":true,"authors":[{"name":"aj"}],"frontMatter":{"title":"Day 19","date":"2019-04-13T00:00:00.000Z","author":"aj","image":"https://uppy.io/img/blog/30daystoliftoff/dogdj.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-19"},"unlisted":false,"prevItem":{"title":"Day 20","permalink":"/blog/2019/04/liftoff-20"},"nextItem":{"title":"Day 18","permalink":"/blog/2019/04/liftoff-18"}},"content":"Hey DJ, turn the music Uppy! We\'re taking a few well-deserved days off from\\nchasing tasks and issues (and cats, of course) to get our feet up on the dance\\nfloor and enjoy a drink or two. We hope you are doing the same! Here\'s a\\nrecord-breaking Wiener to get you in the mood:\\n\\n\x3c!--truncate--\x3e\\n\\n<center><img width=\\"400\\" src=\\"https://media.giphy.com/media/rdAeOA3mfXomQ/giphy.gif\\" /><br/><br/></center>\\n\\nThat means no news today or tomorrow, but you can expect us to be back at the\\n1.0 grindstone on [Monday](/blog/2019/04/liftoff-21/)! Have an awesome Saturday!\\nAnd see you tomorrow for another little tidbit in our 30 Days to Liftoff!"},{"id":"2019/04/liftoff-18","metadata":{"permalink":"/blog/2019/04/liftoff-18","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-18.md","source":"@site/blog/2019-04-liftoff-18.md","title":"Day 18","description":"Hi! You\'re reading our \'30 Days to Liftoff\' blog post challenge about the","date":"2019-04-12T00:00:00.000Z","tags":[],"readingTime":1.265,"hasTruncateMarker":true,"authors":[{"name":"kvz"}],"frontMatter":{"title":"Day 18","date":"2019-04-12T00:00:00.000Z","author":"kvz","image":"https://uppy.io/img/blog/30daystoliftoff/day18.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-18"},"unlisted":false,"prevItem":{"title":"Day 19","permalink":"/blog/2019/04/liftoff-19"},"nextItem":{"title":"Day 17","permalink":"/blog/2019/04/liftoff-17"}},"content":"Hi! You\'re reading our \'30 Days to Liftoff\' blog post challenge about the\\n**launch of Uppy 1.0 on April 25**. Here\'s what we\'ve been up to since\\nyesterday\'s progress update.\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day18.jpg\\" /><br /><br /></center>\\n\\n\x3c!--truncate--\x3e\\n\\n- [Ife](https://github.com/ifedapoolarewaju) addressed all of\\n  [Marius\'](https://github.com/Acconut) feedback towards\\n  [having React-Native-compatible fingerprinting](https://github.com/tus/tus-js-client/pull/73)\\n  in tus-js-client.\\n\\n- [Artur](https://github.com/arturi) and [Alex](https://github.com/nqst) had a\\n  call where they discussed Alex\u2019s design improvements, and Alex\'s\\n  [Design Facelift PR](https://github.com/transloadit/uppy/pull/1442) is now\\n  ready to be reviewed and merged :tada:\\n\\n- Artur iterated on [Samuel\'s](https://github.com/samuelayo)\\n  [XHR backend examples](https://github.com/transloadit/uppy/pull/1389).\\n\\n- Ife, Artur, Alex and Marius are chasing down an issue where appending form\\n  fields is\\n  [causing 423 responses from tusd](https://github.com/tus/tusd/issues/259).\\n  Marius already pushed out a number of fixes as a result and released a new\\n  version of tus-js-client (1.7.1).\\n\\n- Artur and [Kevin](https://github.com/tim-kos) paired up to create a new\\n  structure for [Locale Packs](https://github.com/transloadit/uppy/pull/1443).\\n  The `en_US` locale is now generated from whatever strings where used in Uppy\'s\\n  plugins, so other languages can use it as a reference. There will also be\\n  reporting on unused strings.\\n\\n- [Evgenia](https://github.com/lakesare) continues to charge at fixing Drag &\\n  Drop issues, and [Ren\xe9e](https://github.com/goto-bus-stop) is working on\\n  making the Robodog Dashboard work inline (as well as a popup).\\n\\nHope you\'ll have a great weekend and see you on\\n[Monday](/blog/2019/04/liftoff-21/) for another real update on the 1.0 launch\\npreparations! We\'ll of course also have a few more light-hearted posts in the\\nmeantime for you, so be sure to check those out as well :slightly_smiling_face:\\nKeep tabs on [@uppy_io](https://twitter.com/uppy_io) or\\n[RSS](https://uppy.io/blog/atom.xml) for more Uppy updates!"},{"id":"2019/04/liftoff-17","metadata":{"permalink":"/blog/2019/04/liftoff-17","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-17.md","source":"@site/blog/2019-04-liftoff-17.md","title":"Day 17","description":"It\'s day 17 already of our \'30 Days to Liftoff\' blog post challenge and the","date":"2019-04-11T00:00:00.000Z","tags":[],"readingTime":1.475,"hasTruncateMarker":true,"authors":[{"name":"samuel"}],"frontMatter":{"title":"Day 17","date":"2019-04-11T00:00:00.000Z","author":"samuel","image":"https://uppy.io/img/blog/30daystoliftoff/day17.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-17"},"unlisted":false,"prevItem":{"title":"Day 18","permalink":"/blog/2019/04/liftoff-18"},"nextItem":{"title":"Day 16","permalink":"/blog/2019/04/liftoff-16"}},"content":"It\'s day 17 already of our \'30 Days to Liftoff\' blog post challenge and the\\n**launch of Uppy 1.0 on April 25** is coming closer by the day. The Uppy team is\\ndealing with the big tasks now, so the updates might seem a little scant!\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day17.jpg\\" /><br /><br /></center>\\n\\n\x3c!--truncate--\x3e\\n\\n## Done\\n\\n- [Artur](https://github.com/arturi) updated the\\n  [React Native](https://github.com/transloadit/uppy/pull/988) UI example. This\\n  is what the new UI looks like:\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-11-react-native-ui-1.png\\" /></center>\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-11-react-native-ui-2.png\\" /></center>\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-11-react-native-ui-3.png\\" /></center>\\n\\n- [Alex](https://github.com/nqst) updated the focus styles on the Uppy\\n  Dashboard, making it look quite a bit sleeker than it did before. Here\'s a\\n  before and after view of the Dashboard focus styles:\\n\\nBefore:<br />\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-11-before-focus.gif\\" /></center>\\nAfter:<br />\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-11-after-focus.gif\\" /></center>\\n\\n## In Progress\\n\\n- Artur is reviewing PRs, reporting errors and testing Uppy in response to the\\n  team\u2019s feedback.\\n\\n- Alex continues improving Uppy\'s UI and has recently been refactoring CSS code,\\n  while [Evgenia](https://github.com/lakesare) keeps charging at the\\n  [many accessibility issues](https://github.com/transloadit/uppy/issues/created_by/nqst)\\n  that are still open.\\n\\n- Evgenia is also working on the new drag/drop implementation, which will\\n  include a new _Drop Here_ placeholder and not experience any flickering. And\\n  as if that weren\'t enough, she is having a go at `drop folder` support for\\n  cross-browser compatibility as well, so that it won\u2019t be relying on DOM\\n  manipulation in our Preact components.\\n\\n- [Ife](https://github.com/ifedapoolarewaju) is updating this\\n  [PR](https://github.com/tus/tus-js-client/pull/73), which deals with\\n  supporting resumability for Node.js environments.\\n\\nThat\'s all from us today. As I mentioned, we are now focusing on the big tasks\\nand as a result, our daily list of updates might sometimes be a little shorter\\nthan usual. Remember to keep tabs on our [Twitter](https://twitter.com/uppy_io)\\nor [RSS](https://uppy.io/blog/atom.xml) for more Uppy updates.\\n[Day 18](/blog/2019/04/liftoff-18/) is coming up next!"},{"id":"2019/04/liftoff-16","metadata":{"permalink":"/blog/2019/04/liftoff-16","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-16.md","source":"@site/blog/2019-04-liftoff-16.md","title":"Day 16","description":"Two weeks left in our \'30 Days to Liftoff\'! We\'re starting to home in on Uppy","date":"2019-04-10T00:00:00.000Z","tags":[],"readingTime":2.165,"hasTruncateMarker":true,"authors":[{"name":"tyler"}],"frontMatter":{"title":"Day 16","date":"2019-04-10T00:00:00.000Z","author":"tyler","image":"https://uppy.io/img/blog/30daystoliftoff/day16.gif","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-16"},"unlisted":false,"prevItem":{"title":"Day 17","permalink":"/blog/2019/04/liftoff-17"},"nextItem":{"title":"Day 15","permalink":"/blog/2019/04/liftoff-15"}},"content":"Two weeks left in our \'30 Days to Liftoff\'! We\'re starting to home in on **Uppy\\n1.0\'s release on April 25**. Being in the middle of the week gives us a great\\nopportunity to see how hard the team is working. Let\'s take a look at the new\\nfeatures, bug fixes and milestones that have been completed! :dog:\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day16.gif\\" /><br /><br /></center>\\n\\nReminder: you can keep up with our\\n[CHANGELOG](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md) to see\\neverything else we intend to complete for the official Uppy 1.0 release.\\n\\n\x3c!--truncate--\x3e\\n\\n## Done\\n\\n- [Evgenia](https://github.com/lakesare) continues working on the\\n  [peculiar flickering issue](https://github.com/transloadit/uppy/pull/1400#issuecomment-481039845)\\n  in our Dashboard example. While it was tricky at first, a (temporary) hotfix\\n  has now been applied. A more in-depth update is coming after 1.0 :smile:\\n\\n- The [first contribution](https://github.com/transloadit/uppy/pull/1436) in our\\n  sprint coming from outside the Uppy team was added by\\n  [Zeqiu](https://github.com/allenfantasy). It concerns events being fired when\\n  an uploaded file fails a restriction check. With this feature, it will be a\\n  lot easier to know which file has been restricted from upload and why.\\n\\n- And the\\n  [second outside contribution](https://github.com/transloadit/uppy/pull/1429)\\n  comes from [Andreas](https://github.com/ap--), who fixed an issue involving\\n  the use of both tus and the limit parameter to set a maximum number of\\n  parallel uploads.\\n\\nBig shout out to both!\\n\\n## In Progress\\n\\n- The React Native team has their pairing session at 14:00 today, during which\\n  they will work on\\n  [React Native support](https://github.com/transloadit/uppy/pull/988) for Uppy,\\n  [tus-js-client](https://github.com/tus/tus-js-client) and\\n  [Companion](https://github.com/transloadit/uppy/tree/master/packages/@uppy/companion).\\n\\n  - [Artur](https://github.com/arturi) will be working on tweaking the React\\n    Native UI and dealing with file preview icons for non-image files. He has\\n    also been working on refactoring some of the code to make things much\\n    tidier.\\n  - [Ife](https://github.com/ifedapoolarewaju) will be integrating\\n    fingerprinting and hash code support\\n    [into tus-js-client](https://github.com/tus/tus-js-client/pull/73).\\n  - If the team has the time, they will also look into large file support,\\n    upload and download reporting for Companion XHR uploads, and an issue\\n    concerning XHR uploads with the\\n    [Transloadit API](https://transloadit.com/docs/api/).\\n\\n- [Alex](https://github.com/nqst) continues improving Uppy\'s UI and has recently\\n  been refactoring CSS code, while Evgenia keeps charging at the\\n  [many accessibility issues](https://github.com/transloadit/uppy/issues/created_by/nqst)\\n  that are still open.\\n\\nIn addition to getting Uppy 1.0 out of the dog house, I mentioned that the team\\nis already talking about features and fixes to tackle after 1.0. If you look at\\nour [CHANGELOG](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md),\\nyou\'ll notice some 1.1 todos in there. There\'s always room for improvement, so\\nnow you have something to look forward to after Uppy 1.0 hits the web! :wink:\\n\\nThat\'s all from me today. Stay in the loop with us on\\n[Twitter](https://twitter.com/uppy_io) or [RSS](https://uppy.io/blog/atom.xml)\\nfor more Uppy updates. [Day 17](/blog/2019/04/liftoff-17/) is coming up next!"},{"id":"2019/04/liftoff-15","metadata":{"permalink":"/blog/2019/04/liftoff-15","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-15.md","source":"@site/blog/2019-04-liftoff-15.md","title":"Day 15","description":"Woah, we\'re halfway there! Take our paw, we\'ll make it we swear!","date":"2019-04-09T00:00:00.000Z","tags":[],"readingTime":1.695,"hasTruncateMarker":true,"authors":[{"name":"samuel"}],"frontMatter":{"title":"Day 15","date":"2019-04-09T00:00:00.000Z","author":"samuel","image":"https://uppy.io/img/blog/30daystoliftoff/rockdog.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-15"},"unlisted":false,"prevItem":{"title":"Day 16","permalink":"/blog/2019/04/liftoff-16"},"nextItem":{"title":"Day 14","permalink":"/blog/2019/04/liftoff-14"}},"content":":musical_note: Woah, we\'re halfway there! Take our paw, we\'ll make it we swear!\\n:notes: That\'s fifteen down and fifteen more to go. Great to have you along for\\nthe ride as we move ever closer towards **launching Uppy 1.0 on April 25**.\\n\\nLet\'s see what is Uppy today!\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/rockdog.jpg\\" /><br /></center>\\n\\n\x3c!--truncate--\x3e\\n\\n## Weekly project board update\\n\\nWe had our weekly call yesterday, during which we re-evaluated the Uppy 1.0\\nproject board. We were able to move a few tasks to the _Done_ lane and got some\\nnew tasks _In Progress_. One of the features we\'re ready to start working on -\\nwhich I am particularly interested in - is language pack support. Uppy 1.0 might\\nbe coming out in your local language! While we only have the capacity within our\\nteam to take care of a select few languages (English, French, Russian,\\nUkrainian, German, and Dutch) we will support as many as possible and hope that\\nthe community will add many more.\\n\\nHere is a view of what our Asana board looks like this week:\\n\\n<center><br /><img src=\\"/img/blog/30daystoliftoff/2019-04-09-asana-board.png\\" /><br /></center>\\n\\n## Done\\n\\n- [Evgenia](https://github.com/lakesare) investigated an\\n  [issue](https://github.com/transloadit/uppy/pull/1400#issuecomment-481039845)\\n  concerning a bug in Webkit browsers that resulted in the window blinking\\n  frequently.\\n\\n- [Samuel](https://github.com/samuelayo) added another\\n  [example](https://github.com/transloadit/uppy/pull/1389) for using Uppy with\\n  XHR uploads to a PHP backend.\\n\\n## In Progress\\n\\n- [Ren\xe9e](https://github.com/goto-bus-stop) is working on the Robodog Dashboard,\\n  so that it can also be depicted right inside the webpage, instead of showing\\n  as a modal popup window.\\n\\n- Evgenia is focused on improving accessibility together with\\n  [Alex](https://github.com/nqst), who found many issues that we still need to\\n  fix in this area.\\n\\n- [Artur](https://github.com/arturi) is currently working on a React Native\\n  example UI. We will update you once it is ready!\\n\\n- Alex is also still actively working on making design improvements for Uppy.\\n  You can follow his progress\\n  [here](https://github.com/nqst/uppy/commits/design-facelift).\\n\\nAnd that\'s Day 15! Tyler will be here again\\n[tomorrow](/blog/2019/04/liftoff-16/) to give you more updates on our launch\\npreparations. Subscribe via [Twitter](https://twitter.com/uppy_io) or\\n[RSS](https://uppy.io/blog/atom.xml), so you\'ll never miss out!"},{"id":"2019/04/liftoff-14","metadata":{"permalink":"/blog/2019/04/liftoff-14","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-14.md","source":"@site/blog/2019-04-liftoff-14.md","title":"Day 14","description":"Today marks the fourteenth day in our \'30 Days to Liftoff\' blog post challenge,","date":"2019-04-08T00:00:00.000Z","tags":[],"readingTime":2.685,"hasTruncateMarker":true,"authors":[{"name":"kvz"}],"frontMatter":{"title":"Day 14","date":"2019-04-08T00:00:00.000Z","author":"kvz","image":"https://uppy.io/img/blog/30daystoliftoff/day14.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-14"},"unlisted":false,"prevItem":{"title":"Day 15","permalink":"/blog/2019/04/liftoff-15"},"nextItem":{"title":"Day 13","permalink":"/blog/2019/04/liftoff-13"}},"content":"Today marks the fourteenth day in our \'30 Days to Liftoff\' blog post challenge,\\nworking our way towards **launching Uppy 1.0 on April 25**. It\'s the beginning\\nof a new week and there is much to be done. The Uppy team is already firing on\\nall cylinders and we also have some developments to share from before the\\nweekend.\\n\\n\x3c!--truncate--\x3e\\n\\nLet\'s jump right in!\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day14.jpg\\" /><br /></center>\\n\\n## Done\\n\\n- [Ren\xe9e](https://github.com/goto-bus-stop) finished work on\\n  [canceling Transloadit Assemblies](https://github.com/transloadit/uppy/pull/1431)\\n  when you abort uploads.\\n\\n- [Artur](https://github.com/arturi) published the\\n  [CHANGELOG for 0.30.4](https://github.com/transloadit/uppy/commit/845369f0e56b49ab51d4d01909dfdac6f60b1748),\\n  which was a bit more work to figure out now that the whole Transloadit team is\\n  piling commits onto `master` :scream: We also completed a few smaller tasks,\\n  such as fixing an issue with our build scripts and updating the Companion\\n  docs.\\n\\n## Done for React Native\\n\\nThis is a pretty big one! [Ife](https://github.com/ifedapoolarewaju) and Artur\\ndelivered on the bare essentials for React Native. In our local tests, this\\nmeans we can now successfully pick different files, have their uploads resume\\nwhere they left off, select a remote file via Companion (for now, only picking\\nfrom URL is supported) and see the progress reported by it.\\n\\nThere is a basic UI, most of which is encapsulated in the example that we\'ll\\npublish on our website. We\'re refraining from building too much UI in our React\\nNative module, as we assume that developers will want to have full control and\\nstyle everything close to their app. We figured they would care most about\\nseeing a good example and having access to core functionality, such as making\\nmobile uploads more reliable and less draining on batteries and data plans.\\n\\nWhile there are still things to be implemented, such as picking files from\\nInstagram, we now know that we have all the Lego bricks required and that they\\nare doing what they\'re supposed to. Now, it\'s just a matter of fleshing out\\nthose integrations, but we\'ll have to see whether we can get to that before 1.0.\\nWe\'re already happy about having a fixed idea about the API and a basic working\\nexample as our deliverables!\\n\\n## In Progress\\n\\n- [Alex](https://github.com/nqst) is working on improving the Uppy design (in\\n  the code) in his `design-facelift` branch\\n\\n- [Evgenia](https://github.com/lakesare) is working on improving accessibility\\n  together with Alex, who found many issues that we still need to fix in this\\n  area.\\n\\n- Now that the bare essentials of React Native work, Ife is making sure our\\n  local work finds a proper place in the tus-js-client (such as\\n  React-Native-compatible fingerprinting) while Artur hopes to find the time to\\n  tick off a few design goals to make for a better experience testdriving our\\n  example. Things like icons for files that are not images and a _Close_ button\\n  for the select file screen.\\n\\n- The whole team will again do a call this afternoon to reassess our roadmap and\\n  see where all we stand. Some new tasks were added on\\n  [Friday](/blog/2019/04/liftoff-11/), so we\'ll also have to see about getting\\n  those into gear.\\n\\nThat\'s it for Day 14. Tomorrow, it will be Samuel\'s turn again to update you on\\nour board and progress. Subscribe via [Twitter](https://twitter.com/uppy_io) or\\n[RSS](https://uppy.io/blog/atom.xml) and don\'t miss out on\\n[Day 15](/blog/2019/04/liftoff-15/)! :dog:"},{"id":"2019/04/liftoff-13","metadata":{"permalink":"/blog/2019/04/liftoff-13","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-13.md","source":"@site/blog/2019-04-liftoff-13.md","title":"Day 13","description":"Shh, it\'s Sunday, Uppy is sleeping in today We\'ll be taking the day","date":"2019-04-07T00:00:00.000Z","tags":[],"readingTime":0.5,"hasTruncateMarker":true,"authors":[{"name":"aj"}],"frontMatter":{"title":"Day 13","date":"2019-04-07T00:00:00.000Z","author":"aj","image":"https://uppy.io/img/blog/30daystoliftoff/discodog.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-13"},"unlisted":false,"prevItem":{"title":"Day 14","permalink":"/blog/2019/04/liftoff-14"},"nextItem":{"title":"Day 12","permalink":"/blog/2019/04/liftoff-12"}},"content":"Shh, it\'s Sunday, Uppy is sleeping in today :sleeping: We\'ll be taking the day\\noff as well, as we gear up to go full throttle again in the morning. There\'s\\nstill a lot to do before the **Uppy 1.0 launch on April 25**. In the meantime,\\nwhy don\'t you join us in letting sleeping dogs lie.\\n\\n\x3c!--truncate--\x3e\\n\\n<center><img width=\\"400\\"  src=\\"https://media.giphy.com/media/26n6UOQke3xCpsbWo/giphy.gif\\" /><br/><br/></center>\\n\\nWe hope this drowsy puppy inspires you to have a great and relaxing remainder of\\nyour weekend. We\'ll have a lot more to share with you tomorrow, so see you on\\n[Day 14](/blog/2019/04/liftoff-14/) of our 30 Days to Liftoff!"},{"id":"2019/04/liftoff-12","metadata":{"permalink":"/blog/2019/04/liftoff-12","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-12.md","source":"@site/blog/2019-04-liftoff-12.md","title":"Day 12","description":"Hey guys! How is your Saturday treating you so far? We are focusing today on","date":"2019-04-06T00:00:00.000Z","tags":[],"readingTime":0.505,"hasTruncateMarker":true,"authors":[{"name":"aj"}],"frontMatter":{"title":"Day 12","date":"2019-04-06T00:00:00.000Z","author":"aj","image":"https://uppy.io/img/blog/30daystoliftoff/discodog.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-12"},"unlisted":false,"prevItem":{"title":"Day 13","permalink":"/blog/2019/04/liftoff-13"},"nextItem":{"title":"Day 11","permalink":"/blog/2019/04/liftoff-11"}},"content":"Hey guys! How is your Saturday treating you so far? We are focusing today on\\nmeeting friends and having fun, and taking our minds off all Uppy-related things\\nfor just a few days. To give you an idea of what we\'re up to tonight, check out\\nthis groovy GIF:\\n\\n\x3c!--truncate--\x3e\\n\\n<center><img width=\\"400\\" src=\\"https://media.giphy.com/media/k2Da0Uzaxo9xe/giphy.gif\\" /><br/><br/></center>\\n\\nWe won\'t have much in terms of real news to share over the weekend, but we\'ll be\\nback in full force on [Monday](/blog/2019/04/liftoff-14/)! In the meantime, we\\nhope you have a great day! And see you tomorrow for another weekend update in\\nour 30 Days to Liftoff!"},{"id":"2019/04/liftoff-11","metadata":{"permalink":"/blog/2019/04/liftoff-11","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-11.md","source":"@site/blog/2019-04-liftoff-11.md","title":"Day 11","description":"And another week bites the dust! With the weekend right around the corner, we\'re","date":"2019-04-05T00:00:00.000Z","tags":[],"readingTime":1.865,"hasTruncateMarker":true,"authors":[{"name":"samuel"}],"frontMatter":{"title":"Day 11","date":"2019-04-05T00:00:00.000Z","author":"samuel","image":"https://uppy.io/img/blog/30daystoliftoff/day11.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-11"},"unlisted":false,"prevItem":{"title":"Day 12","permalink":"/blog/2019/04/liftoff-12"},"nextItem":{"title":"Day 10","permalink":"/blog/2019/04/liftoff-10"}},"content":"And another week bites the dust! With the weekend right around the corner, we\'re\\nbusy getting as much as possible done before heading off for some well-deserved\\nrest & relaxation. Here is what we\'ve been up to!\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day11.jpg\\" /><br /></center>\\n\\n\x3c!--truncate--\x3e\\n\\n## New\\n\\n- [Alex](https://github.com/nqst) is test driving Uppy(\'s accessibility) in many\\n  different browsers and already uncovered\\n  [many issues](https://github.com/transloadit/uppy/issues/created_by/nqst) in\\n  some naughty browsers. Hope we\'ll manage to fix all of them before April 25!\\n\\n## In Progress\\n\\n- [Artur](https://github.com/arturi) is working on preparing the changelog for\\n  Uppy v. 0.30.4 and releasing it as soon as possible. More news about the\\n  0.30.4 release can be found in the _Done_ section.\\n\\n- Our React Native team (that\'s [Artur](https://github.com/arturi),\\n  [Ife](https://github.com/ifedapoolarewaju), and\\n  [Kevin](https://github.com/kvz)) have been pairing again and determined there\\n  are only a few things left to do:\\n\\n  - Add customFingerPrint & hashCode into Ife\'s tus-js-client branch, add tests,\\n    and get it into shape for [Marius](https://github.com/acconut) to review\\n  - UI tweaks (close button for Import, reporting errors)\\n  - File preview icon for non-image files\\n\\n- They also discussed a few non-React Native things:\\n\\n  - Large file support\\n  - Companion XHR Uploads should report download progress towards\\n    client-side-reported upload progress\\n  - When you upload to api2.transloadit.com with XHR, it seems the API does not\\n    block and responds with 200 before the upload is really done (MAYBE :o).\\n    This results in a bad Uppy state without a progress bar.\\n\\n## Done\\n\\n- We released a new version of Uppy. While it isn\u2019t 1.0 just quite yet, this is\\n  another step in the right direction. Uppy `0.30.4` features fixes for\\n  `allowSyntheticImports`, Typescript typings, issues when using Companion\\n  Client for remote AWS-S3 uploads, and using websockets and console.dir in\\n  React Native.\\n\\n- Artur and [Ren\xe9e](https://github.com/goto-bus-stop) reviewed and merged a\\n  [PR](https://github.com/transloadit/uppy/pull/1360) that allows a user to\\n  customize the status of an upload in Uppy. Thanks to Mactavish for\\n  contributing!\\n\\n- [Abdel](https://github.com/kiloreux)\\n  [fixed the Serverless example](https://github.com/transloadit/uppy/pull/1408)\\n  for running Companion on AWS Lambda.\\n\\n- [Kevin](https://github.com/kvz) finished up his work on the\\n  [new documentation menu structure](https://github.com/transloadit/uppy/pull/1405)\\n  that we talked about [yesterday](/blog/2019/04/liftoff-10/).\\n\\nThat\u2019s it. All the updates I have for you today. Have a great\\n[weekend](/blog/2019/04/liftoff-12/) everyone! And if you don\u2019t want to miss a\\npost, keep tabs on our [Twitter](https://twitter.com/uppy_io) or\\n[RSS](https://uppy.io/blog/atom.xml) feed."},{"id":"2019/04/liftoff-10","metadata":{"permalink":"/blog/2019/04/liftoff-10","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-10.md","source":"@site/blog/2019-04-liftoff-10.md","title":"Day 10","description":"Today marks the tenth day in our 30 Days to Liftoff! April 25 is still in","date":"2019-04-04T00:00:00.000Z","tags":[],"readingTime":2.01,"hasTruncateMarker":true,"authors":[{"name":"tyler"}],"frontMatter":{"title":"Day 10","date":"2019-04-04T00:00:00.000Z","author":"tyler","image":"https://uppy.io/img/blog/30daystoliftoff/day10.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-10"},"unlisted":false,"prevItem":{"title":"Day 11","permalink":"/blog/2019/04/liftoff-11"},"nextItem":{"title":"Day 9","permalink":"/blog/2019/04/liftoff-09"}},"content":"Today marks the tenth day in our 30 Days to Liftoff! **April 25** is still in\\nour sights as we work towards the **Uppy 1.0** release. The end of the working\\nweek is almost upon us, but there\'s no sign of slowing down yet.\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day10.jpg\\" /><br /></center>\\n\\nThings are looking up(p 17 |\\n<a rel=\\"noreferrer noopener\\" target=\\"_blank\\" href=\\"https://uppy.io/img/blog/30daystoliftoff/2019-03-liftoff-04b.png\\" />\\n18 |\\n<img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-03-liftoff-04a.png\\" />y) on\\nour project board as the team has been working on tasks at a steady pace. A\\nquick status update will give us a little insight into how things are going\\nconcerning all things Uppy.\\n\\n\x3c!--truncate--\x3e\\n\\n## In Progress\\n\\n- [Alex](https://github.com/nqst), [Evgenia](https://github.com/lakesare) and\\n  [Artur](https://github.com/arturi) are debugging the [flickering on Drag &\\n  Drop](https://github.com/transloadit/uppy/pull/1400) that Chrome and Safari\\n  users suffer from. Fingers crossed for a solution!\\n\\n- Artur, working on the React Native side of things, has impressively added\\n  [file previews and tested hashes with different file\\n  types](https://github.com/transloadit/uppy/pull/988). After some more testing\\n  is complete, he\'ll move on to releasing a new version of Uppy. In addition,\\n  the React Native team has reschedulded their pair programming session to\\n  Friday, so expect some pretty significant updates tomorrow!\\n\\n- [Kevin](https://github.com/kvz) started working on the [new documentation menu\\n  structure](https://github.com/transloadit/uppy/pull/1405) for the site and we\\n  can already show a [live\\n  example](https://5ca5233bfd8bcc00085152a8--uppy.netlify.com/docs/) of it. Take\\n  a look at the main differences below:\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-04-docs.png\\" /><br /><br /></center>\\n\\n## Done\\n\\n- If you\'ve been keeping up with our posts, you might notice the navigator at\\n  the top of the page looks a little different than usual. That is because Alex\\n  has been on a roll and [updated the\\n  navigator](https://github.com/transloadit/uppy/pull/1403) for our blogposts.\\n\\n- [Ife](https://github.com/ifedapoolarewaju)\'s fix for [hanging instagram\\n  uploads](https://github.com/transloadit/uppy/pull/1274) was merged into Uppy\'s\\n  master branch. One more bug squashed!\\n\\n- One small chore was done by [Ren\xe9e](https://github.com/goto-bus-stop),\\n  involving [adding git to the Companion\\n  dockerfile](https://github.com/transloadit/uppy/pull/1404), which was needed\\n  to install tus-js-client and ensure Companion could be deployed successfully\\n  on our continuous integration server.\\n\\nWhile not strictly related to our Uppy 1.0 release, we have managed to reach\\nover 6000 commits to our master branch and 99 contributors in the [Uppy\\nrepo](https://github.com/transloadit/uppy). We would like to give a huge thank\\nyou to everyone offering their support!\\n\\n<center><img src=\\"/img/blog/30daystoliftoff/2019-04-04.png\\" /><br /></center>\\n\\nOn that note, Day 10 of our thirty-day challenge comes to an end. Friday looks\\nlike it will be another exciting day, so don\'t hesitate to keep checking up on\\nus via [Twitter](https://twitter.com/uppy_io) or\\n[RSS](https://uppy.io/blog/atom.xml)!"},{"id":"2019/04/liftoff-09","metadata":{"permalink":"/blog/2019/04/liftoff-09","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-09.md","source":"@site/blog/2019-04-liftoff-09.md","title":"Day 9","description":"The entire team is starting to get into its groove as the Uppy channel in our","date":"2019-04-03T00:00:00.000Z","tags":[],"readingTime":2.74,"hasTruncateMarker":true,"authors":[{"name":"tyler"}],"frontMatter":{"title":"Day 9","date":"2019-04-03T00:00:00.000Z","author":"tyler","image":"https://uppy.io/img/blog/30daystoliftoff/day09.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-09"},"unlisted":false,"prevItem":{"title":"Day 10","permalink":"/blog/2019/04/liftoff-10"},"nextItem":{"title":"Day 8","permalink":"/blog/2019/04/liftoff-08"}},"content":"\x3c!--lint disable no-undefined-references--\x3e\\n\\nThe entire team is starting to get into its groove as the Uppy channel in our\\nSlack workspace is looking livelier than ever. Let\'s dive straight into Day 9 of\\nour 30 Days to Liftoff!\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day09.jpg\\" /><br /><br /></center>\\n\\nEveryone is moving at a comfortable pace, working on the various _In Progress_\\ncards sitting neatly on our Uppy board, so here\'s a quick update on the progress\\ntowards **Uppy 1.0, coming April 25**!\\n\\n\x3c!--truncate--\x3e\\n\\n## Done\\n\\nTasks completed by the team since yesterday\'s update include:\\n\\n- Our React Native team (that\'s [Artur](https://github.com/arturi),\\n  [Ife](https://github.com/ifedapoolarewaju), and\\n  [Kevin](https://github.com/kvz)) has been working together most of the day and\\n  gave an update on the current completed features for implementing Uppy\\n  support. Here\'s a list of completed tasks directly from the team:\\n\\n  - [x] Make the \'Import from URL\' example work in RN\\n  - [x] Give it its own UI, (re)written for RN\\n  - [x] Make websocket progress from Companion work (see:\\n        <https://facebook.github.io/react-native/docs/network#websocket-support>)\\n  - [x] Have an example with buttons for resumability and a progress bar\\n  - [x] Have 20 min resumability support, proof that fingerprinting works for\\n        different local file uploads, fix it if not\\n\\n- A [feature](https://github.com/transloadit/uppy/pull/1367) was submitted by\\n  [Andrew Shini](https://github.com/superandrew213) that involving checking for\\n  existing uploads before uploading anything, which has been necessary for his\\n  custom dashboard. Artur and [Ren\xe9e](https://github.com/goto-bus-stop) will be\\n  reviewing it. A big thank you to the open source community for making\\n  contributions!\\n\\n## In Progress\\n\\nMeanwhile, on the progress side of things:\\n\\n- [Abdel](https://github.com/Kiloreux) has started working on a\\n  [Glitch](https://glitch.com/) demo involving Companion, so users can have an\\n  even easier time utilizing our services. He\'s also working on fixing up the\\n  Serverless example (running Companion on AWS Lambda) which was once\\n  contributed by the community but hasn\'t been workin for a long time :scream:\\n\\n- Ren\xe9e is going to spend the day on getting Transloadit Assemblies to actually\\n  cancel when the Cancel button in the UI is pressed. As it stands, the upload\\n  cancels, but the Assembly keeps running until it eventually times out by\\n  itself.\\n\\n- [Tim](https://github.com/tim-kos) has started working on fixing an API problem\\n  that caused one of our end-to-end tests to intermittently fail and eventually\\n  turn off entirely.\\n\\n- Finally, the React Native team has already completed an impressive amount of\\n  tasks, but they aren\'t slowing down anytime soon. Development marches on as\\n  the team begins tackling the following tasks:\\n  - [ ] Add basic file preview to react native example. Can use `file.uri` for\\n        images, can use icons for `file.type===video/audio/document` (Artur\\n        Paikin)\\n  - [ ] Release Uppy (add inline customFingerPrint & AsyncStorage for now, we\'ll\\n        remove customFingerPrint later, once tus-js-client is in good shape)\\n        (Artur Paikin)\\n  - [ ] Test fingerprinting for Audio, Document (Artur Paikin)\\n  - [ ] Add customFingerPrint & hashCode into Ife\'s tus-js-client branch, add\\n        tests, get it into shape for Marius to review (Ifedapo Olarewaju)\\n\\nCome Thursday, they\'ll be having another call to discuss their completed work so\\nfar and map out the remaining RN tasks from there. I\'m looking forward to\\nsharing more details on that call soon!\\n\\nThe first third of our thirty-day challenge ends tomorrow with\\n[Day 10](/blog/2019/04/liftoff-10/). Look forward to more updates (and pictures\\nof dogs in space) tomorrow and, as usual, don\'t forget about our\\n[RSS feed](https://uppy.io/blog/atom.xml) :dog:"},{"id":"2019/04/liftoff-08","metadata":{"permalink":"/blog/2019/04/liftoff-08","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-08.md","source":"@site/blog/2019-04-liftoff-08.md","title":"Day 8","description":"Welcome to Day 8 of our ongoing thirty-day blog post challenge toward the Uppy","date":"2019-04-02T00:00:00.000Z","tags":[],"readingTime":2.155,"hasTruncateMarker":true,"authors":[{"name":"samuel"}],"frontMatter":{"title":"Day 8","date":"2019-04-02T00:00:00.000Z","author":"samuel","image":"https://uppy.io/img/blog/30daystoliftoff/day08.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-08"},"unlisted":false,"prevItem":{"title":"Day 9","permalink":"/blog/2019/04/liftoff-09"},"nextItem":{"title":"Day 7","permalink":"/blog/2019/04/liftoff-07"}},"content":"Welcome to Day 8 of our ongoing thirty-day blog post challenge toward the **Uppy\\n1.0 release on April 25**! Yesterday was the 1st of April, but we had no time\\nfor fooling around! The entire team was present for our weekly call, which was\\nagain fully dedicated to discussing Uppy progress.\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day08.jpg\\" /><br /><br /></center>\\n\\nDuring the call, a lot of cards were moved from the _To Do_ lane into the _In\\nProgress_ lane \u2014 and some are even already _Done_. We also added a few _New_\\ntasks mostly related to language packs for Uppy, where we\'ll be asking our own\\nteam members to update a locale of their own language. We hope other languages\\nwill be picked up by the community!\\n\\n\x3c!--truncate--\x3e\\n\\nThis is what our board currently looks like:\\n\\n<center><img src=\\"/img/blog/30daystoliftoff/2019-04-board.png\\" /><br /><br /></center>\\n\\nLet\'s take a look at the updates we can share with you today.\\n\\n## Done\\n\\n- [Artur](https://transloadit.com/about/#artur) merged this\\n  [PR](https://github.com/transloadit/uppy/pull/1393) which removed the use of\\n  `window.location` from Companion\'s client, courtesy of\\n  [Ife](https://transloadit.com/about/#ife).\\n- [Alex](https://transloadit.com/about/#alex) improved the design of the\\n  drag-to-upload stage. <br />\\n\\nBefore:<br />\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-02-before.png\\" /></center>\\nAfter:<br />\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-02-after.png\\" /></center>\\n\\n- [Evgenia](https://github.com/lakesare) made sure that\\n  [file previews now form an even spread](https://github.com/transloadit/uppy/pull/1398)\\n  across the width of the dashboard.\\n\\n## In Progress\\n\\n- We are currently investigating an\\n  [issue](https://github.com/tus/tus-js-client/issues/146) with `tus-js-client`,\\n  which affects uploads where the file size is larger than 500MB. Artur is now\\n  trying to execute a 600MB upload and then see if it crashes. After that, he\\n  will set chunkSize, test the upload again, and report back his findings so we\\n  can evaluate our next steps.\\n\\n- We are also doing more research on `tus-js-client` fingerprints. Since these\\n  are identical for each file on React Native, the team is figuring out how to\\n  properly identify files on that platform, because\\n  [the standard file properties that tus-js-client relies on](https://github.com/tus/tus-js-client/blob/master/lib/node/fingerprint.js)\\n  are not available.\\n\\n- We have our first WIP screenshot for the React Native implementation:\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-02-wip-react-native.png\\" /></center>\\n\\n- [Abdel](https://transloadit.com/about/#abdel) is busy fixing the serverless\\n  examples where WebSockets are terminated when Uppy is deployed to Lambda\\n\\n- Evgenia is working on applying for\\n  [Browserstack](https://www.browserstack.com/open-source?ref=pricing)\'s open\\n  source program, so we can hopefully test Uppy even more and make sure that 1.0\\n  is without any issues.\\n\\n- Ife is writing tests for the implementation of the `tus-js-client` URL\\n  storage.\\n\\nThat\'s all the updates I have for you today. See you tomorrow for\\n[Day 9](/blog/2019/04/liftoff-09/) of our 30 Days to Liftoff!\\n\\nP.S. If you don\'t want to miss an update, you might like to subscribe to our\\n[RSS feed](https://uppy.io/blog/atom.xml) :)"},{"id":"2019/04/liftoff-07","metadata":{"permalink":"/blog/2019/04/liftoff-07","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-04-liftoff-07.md","source":"@site/blog/2019-04-liftoff-07.md","title":"Day 7","description":"Welcome to Day 7 of our ongoing thirty-day blog post challenge toward the Uppy","date":"2019-04-01T00:00:00.000Z","tags":[],"readingTime":2.54,"hasTruncateMarker":true,"authors":[{"name":"kvz"}],"frontMatter":{"title":"Day 7","date":"2019-04-01T00:00:00.000Z","author":"kvz","image":"https://uppy.io/img/blog/30daystoliftoff/day07.png","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/04/liftoff-07"},"unlisted":false,"prevItem":{"title":"Day 8","permalink":"/blog/2019/04/liftoff-08"},"nextItem":{"title":"Day 6","permalink":"/blog/2019/03/liftoff-06"}},"content":"Welcome to Day 7 of our ongoing thirty-day blog post challenge toward the **Uppy\\n1.0 release on April 25**! With the weekend behind us and all batteries fully\\nrecharged, we\'re ready to start hacking away again at the forest of To Do\'s that\\nlies in front of us.\\n\\nWe still have some updates from the end of last week to share with you, and our\\nteam is already working hard today on fixing issues and making improvements. So\\nlet\'s jump into it!\\n\\n\x3c!--truncate--\x3e\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day07.png\\" /><br /></center>\\n\\n## Done\\n\\n- [Artur](https://transloadit.com/about/#artur) and\\n  [Kevin](https://transloadit.com/about/#kvz)\\n  [fixed CI builds](https://github.com/transloadit/uppy/commit/130b79076c4cee54f1d6045f7ff359d1f46a9c72)\\n  with\\n  [new](https://github.com/transloadit/uppy/commit/5f4f1cf17e23c195d4a3907d7bb94599ec882ae6)\\n  [npm](https://github.com/transloadit/uppy/commit/f0ca917a1e238e672540fd1a605c2dee8a81b195)\\n  scripts (that now explicitly opt into running Companion via\\n  `npm run dev:with-companion`) and by switching to a newer Chrome version for\\n  Windows 7 on Saucelabs. Kevin also cut down website deploy times by leveraging\\n  cache.\\n- [Ife](https://transloadit.com/about/#ife)\\n  [fixed](https://github.com/transloadit/uppy/commit/c1abfea33d0c3e80809814c1048b156028c8fcf9)\\n  a [bug](https://github.com/transloadit/uppy/issues/1390) in XHR Companion\\n  uploads.\\n- Then Ife, Artur, and Kevin teamed up for the entire afternoon to deal with\\n  resumable uploads in RN, and got it to work inside an upload session. You can\\n  now hit Pause & Resume! :tada: It does not yet recover after a crash, but more\\n  on that under the `In Progress` section. One of the bigger hurdles addressed\\n  during this call was fixing websocket communication between Companion RN, so\\n  remote uploads done through Companion now report progress to the mobile app.\\n- [Ren\xe9e](https://transloadit.com/about/#renee) fixed\\n  [a TypeScript issue](https://github.com/transloadit/uppy/pull/1396) for people\\n  who do `allowSyntheticDefaultImports: false`.\\n- [Evgenia](https://github.com/lakesare) has\\n  [removed the jumpiness](https://github.com/transloadit/uppy/pull/1383) that\\n  occurred when Uppy was loading.\\n- [Alex](https://transloadit.com/about/#alex) improved the design of the\\nstatusbar for cases where the upload fails. <br /> Before:<br />\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-liftoff-07a.png\\" /></center>\\nAfter:<br />\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-liftoff-07b.png\\" /></center>\\n\\n## In Progress\\n\\n- As mentioned, resumability in RN doesn\'t work yet after a crash. To fix this,\\n  Ife is trying to implement [Tus](https://tus.io) fingerprint storing in RN (as\\n  LocalStorage isn\'t available there). He\'ll first finish\\n  [support for Node.js](https://github.com/tus/tus-js-client/pull/73/files) and\\n  then add\\n  [React Native support for tus-js-client](https://github.com/tus/tus-js-client#react-native-support).\\n- Artur is working on making our RN example better to look at, showcasing a real\\n  progress bar, nice buttons for Pause & Resume, as well as a first iteration on\\n  file previews. He\'ll also be pushing out a release with recent fixes, and give\\n  Evgenia\'s early work a smooth landing.\\n- Ren\xe9e is writing tests to accomodate the change for\\n  [better progress reporting](https://github.com/transloadit/uppy/pull/1376) and\\n  has started on Transloadit Assembly Cancellation.\\n- We\'re looking at a potentially\\n  [big problem](https://github.com/tus/tus-js-client/issues/146) when using\\n  tus-js-client inside React Native for large files, stay tuned!\\n- Evgenia is working on the dashboard, improving how file previews are justified\\n  and testing browser compatibility.\\n- [Alex Kolodko](https://github.com/alexkolodko) (yes, that is indeed a\\n  different [Alex](https://github.com/nqst) :smile:) has been drafting up some\\n  sketches for an iteration on our logo:\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-04-liftoff-07c.png\\" /></center>\\n\\nAnd that\'s all the news we have for you today! Catch up with us\\n[tomorrow](/blog/2019/04/liftoff-08/) for more progress on our 30 Days to\\nLiftoff! And of course, if you want to make sure you\'re not missing out on\\nanything, feel free to subscribe to our\\n[RSS feed](https://uppy.io/blog/atom.xml) :rocket:"},{"id":"2019/03/liftoff-06","metadata":{"permalink":"/blog/2019/03/liftoff-06","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-03-liftoff-06.md","source":"@site/blog/2019-03-liftoff-06.md","title":"Day 6","description":"Shh, it\'s Sunday, Uppy is sleeping in today We\'ll be taking the day","date":"2019-03-31T00:00:00.000Z","tags":[],"readingTime":0.5,"hasTruncateMarker":true,"authors":[{"name":"aj"}],"frontMatter":{"title":"Day 6","date":"2019-03-31T00:00:00.000Z","author":"aj","image":"https://uppy.io/img/blog/30daystoliftoff/day3.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/03/liftoff-06"},"unlisted":false,"prevItem":{"title":"Day 7","permalink":"/blog/2019/04/liftoff-07"},"nextItem":{"title":"Day 5","permalink":"/blog/2019/03/liftoff-05"}},"content":"Shh, it\'s Sunday, Uppy is sleeping in today :sleeping: We\'ll be taking the day\\noff as well, as we gear up to go full throttle again in the morning. There\'s\\nstill a lot to do before the **Uppy 1.0 launch on April 25**! In the meantime,\\nwhy don\'t you join us in letting sleeping dogs lie.\\n\\n\x3c!--truncate--\x3e\\n\\n<center><img width=\\"400\\"  src=\\"https://media.giphy.com/media/26n6UOQke3xCpsbWo/giphy.gif\\" /><br/><br/></center>\\n\\nWe hope this drowsy puppy inspires you to have a great and relaxing remainder of\\nyour weekend. We\'ll have a lot more to share with you tomorrow, so see you on\\n[Day 7](/blog/2019/04/liftoff-07/) of our 30 Days to Liftoff!"},{"id":"2019/03/liftoff-05","metadata":{"permalink":"/blog/2019/03/liftoff-05","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-03-liftoff-05.md","source":"@site/blog/2019-03-liftoff-05.md","title":"Day 5","description":"Work hard, play hard! It\'s Saturday, so it\'s time for us to wind down and take","date":"2019-03-30T00:00:00.000Z","tags":[],"readingTime":0.45,"hasTruncateMarker":true,"authors":[{"name":"kvz"}],"frontMatter":{"title":"Day 5","date":"2019-03-30T00:00:00.000Z","author":"kvz","image":"https://uppy.io/img/blog/30daystoliftoff/15.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/03/liftoff-05"},"unlisted":false,"prevItem":{"title":"Day 6","permalink":"/blog/2019/03/liftoff-06"},"nextItem":{"title":"Day 4","permalink":"/blog/2019/03/liftoff-04"}},"content":"Work hard, play hard! It\'s Saturday, so it\'s time for us to wind down and take\\nsome time for ourself. Seeing as we won\'t have much to share over the weekend in\\nterms of progress updates, we thought we\'d try to distract you a bit. Sit back,\\nrelax, and enjoy this nice GIF, handpicked by our crew:\\n\\n\x3c!--truncate--\x3e\\n\\n<center><img width=\\"400\\" src=\\"https://media.giphy.com/media/TL4d81cXH4THa/giphy.gif\\" /><br/><br/></center>\\n\\nJust the thing we need to recharge those :battery::battery: to :100:, so we can\\nstart making a dent on [Monday](/blog/2019/04/liftoff-07/) again. Hope you\'ll\\nhave a good one! :kissing_heart:"},{"id":"2019/03/liftoff-04","metadata":{"permalink":"/blog/2019/03/liftoff-04","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-03-liftoff-04.md","source":"@site/blog/2019-03-liftoff-04.md","title":"Day 4","description":"Today marks the fourth day of our ongoing thirty-day blog post challenge, giving","date":"2019-03-29T00:00:00.000Z","tags":[],"readingTime":1.375,"hasTruncateMarker":true,"authors":[{"name":"tyler"}],"frontMatter":{"title":"Day 4","date":"2019-03-29T00:00:00.000Z","author":"tyler","image":"https://uppy.io/img/blog/30daystoliftoff/day4.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","alias":"/blog/2019/03/27-30daystoliftoff-day4/","slug":"2019/03/liftoff-04"},"unlisted":false,"prevItem":{"title":"Day 5","permalink":"/blog/2019/03/liftoff-05"},"nextItem":{"title":"Day 3","permalink":"/blog/2019/03/liftoff-03"}},"content":"Today marks the fourth day of our ongoing thirty-day blog post challenge, giving\\nyou an overview of all the progress building up to our **Uppy 1.0 release on\\nApril 25!**\\n\\n\x3c!--truncate--\x3e\\n\\n<center><br /><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day4.jpg\\" /><br /></center>\\n\\n## Done\\n\\nWe haven\'t even hit April 1 yet and the \'Done\' section of the project dashboard\\nis already getting plenty of love! Today, [Alex](https://github.com/nqst)\\nfinished designing a specialized header for visitors of Uppy.io and\\n[Tus.io](https://tus.io) to inform them about the discount on\\n[Transloadit](https://transloadit.com/) services they can receive :wink:\\n\\n[Adbel](https://github.com/Kiloreux) started a dialogue with the team regarding\\n[Docker secrets](https://github.com/transloadit/uppy/pull/138), seeing as\\n[an issue](https://github.com/transloadit/uppy/issues/1295) about this was\\nreported. He decided that the best course of action was to follow the Kubernetes\\n[best practices](https://kubernetes.io/docs/concepts/configuration/secret/#best-practices)\\nand add a `Secret` resource to contain the environment variables.\\n\\n## In Progress\\n\\nOne of the more exciting updates of this day was also contributed by Alex, with\\nhis impressive pre-alpha sketch of a new homepage for Uppy. Despite only being a\\nwork in progress, the entire team has been overjoyed with how it\'s turning out!\\nTake a look for yourself (click to see the full page):\\n\\n<center>\\n  <a rel=\\"noreferrer noopener\\" target=\\"_blank\\" href=\\"https://uppy.io/img/blog/30daystoliftoff/2019-03-liftoff-04b.png\\">\\n    <img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/2019-03-liftoff-04a.png\\" />\\n  </a>\\n</center>\\n\\n[Ife](https://github.com/ifedapoolarewaju) has been focused on\\n[fixing hanging Instagram files uploaded through Companion](https://github.com/transloadit/uppy/pull/1274/files)\\nand our content team\'s own [Samuel](https://github.com/samuelayo) added examples\\nfor\\n[handling uploads in Node.js, and in Python (using the Flask microframework)](https://github.com/transloadit/uppy/pull/1389).\\n\\nAnd that\'s Day 4 complete! Catch up with us\\n[tomorrow](/blog/2019/03/liftoff-05/), as we take this thing into our first\\nweekend of the 30 Days to Liftoff! And of course, if you want to keep yourself\\nconstantly updated, feel free to subscribe to our\\n[RSS feed](https://uppy.io/blog/atom.xml) :smile:"},{"id":"2019/03/liftoff-03","metadata":{"permalink":"/blog/2019/03/liftoff-03","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-03-liftoff-03.md","source":"@site/blog/2019-03-liftoff-03.md","title":"Day 3","description":"Two days ago, we announced the upcoming launch of Uppy 1.0 on April 25,","date":"2019-03-28T00:00:00.000Z","tags":[],"readingTime":2.33,"hasTruncateMarker":true,"authors":[{"name":"samuel"}],"frontMatter":{"title":"Day 3","date":"2019-03-28T00:00:00.000Z","author":"samuel","image":"https://uppy.io/img/blog/30daystoliftoff/day3.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","slug":"2019/03/liftoff-03"},"unlisted":false,"prevItem":{"title":"Day 4","permalink":"/blog/2019/03/liftoff-04"},"nextItem":{"title":"Day 2","permalink":"/blog/2019/03/liftoff-02"}},"content":"Two days ago, we announced the **upcoming launch of Uppy 1.0 on April 25**,\\nkicking off our thirty-day blog post challenge to keep you updated on everything\\nthat is going on. Here\'s day three for you!\\n\\n\x3c!--truncate--\x3e\\n\\nWe\'re still mostly busy tying up any remaining loose ends before April 1, when\\nwe\'ll really start our coding speedrun towards 1.0:\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day3.jpg\\" /><br /></center>\\n\\n## Done\\n\\n[Artur](https://github.com/arturi) merged two pull requests from\\n[Ren\xe9e](https://github.com/goto-bus-stop). The\\n[first](https://github.com/transloadit/uppy/pull/1375) one aims to use\\nTransloadit Templates and demo keys for the `transloadit-textarea` example, and\\nthe [second](https://github.com/transloadit/uppy/pull/1374) one makes error\\nreporting across different locales more flexible.\\n\\nArtur also added a [GitHub-comment-inspired demo](/examples/markdown-snippets/).\\nAdd a file attachment to your markdown, and it will be uploaded and converted to\\na thumbnail that\'s displayed inside your post, no matter the media type (audio\\nturns into artwork, images are resized, videos thumbnailed, etc.).\\n\\n[Ife](https://github.com/ifedapoolarewaju) reviewed and merged this\\n[pull request](https://github.com/transloadit/uppy/pull/1366), which updates the\\ncallback URIs to reflect their correct location in Companion. Thanks to\\n[HughbertD](https://github.com/HughbertD) for that one!\\n\\nWe also celebrated Evgenia submitting her first two PRs:\\n[one](https://github.com/transloadit/uppy/pull/1382) to make sure that tooltips\\ncan no longer overflow inside the Uppy container, and\\n[another](https://github.com/transloadit/uppy/pull/1383) that removes the\\njumpiness when Uppy loads.\\n\\n## In Progress\\n\\nRen\xe9e is working hard to fix outdated warnings in our examples. Other than that,\\nthe team has been dealing with a Companion issue that invalid access tokens are\\ngiven out when you select a provider to receive your file from. The aim is to\\nreturn 401 for invalid access tokens, so that the `/authorized` endpoint can be\\ndeprecated. You can track the progress of this issue in its\\n[pull request](https://github.com/transloadit/uppy/pull/1298).\\n\\n<center><img src=\\"/img/blog/30daystoliftoff/2019-03-27-board02.png\\" /></center>\\n\\n## To Do\\n\\nThe biggest update that will be part of Uppy 1.0 is support for React Native.\\nYesterday, Ren\xe9e, Artur, Ife, [Evgenia](https://github.com/lakesare) and\\n[Kevin](https://github.com/kvz) had a call and talked extensively about what\\nwould be needed to have a minimum viable product. They settled on the following\\nsix subtasks, which I\'m copying directly from their notes: :)\\n\\n```markdown\\nMVP for React Native support should:\\n\\n- [ ] get a link provider example to work, including showing Companion progress\\n      and resumability\\n- [ ] get its own UI, (re)written for RN\\n- [ ] make websocket progress from Companion work (see:\\n      https://facebook.github.io/react-native/docs/network#websocket-support)\\n- [ ] have an example with buttons for resumability & a progress bar\\n- [ ] have resumability support within 20 min (easily tested by disabling WiFi\\n      on your workstation while uploading to master.tus.io)\\n- [ ] have an example with basic file previews (Uppy RN itself likely does not\\n      offer previews)\\n```\\n\\nThat\'s all the updates I have for you today. See you tomorrow for\\n[Day 4](/blog/2019/03/liftoff-04/) of our 30 Days to Liftoff!\\n\\nP.S. If you don\'t want to miss an update, consider\\n[good ol\' RSS](https://uppy.io/blog/atom.xml) :)"},{"id":"2019/03/liftoff-02","metadata":{"permalink":"/blog/2019/03/liftoff-02","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-03-liftoff-02.md","source":"@site/blog/2019-03-liftoff-02.md","title":"Day 2","description":"Yesterday, marked the beginning of our thirty-day blog post challenge to keep","date":"2019-03-27T00:00:00.000Z","tags":[],"readingTime":1.62,"hasTruncateMarker":true,"authors":[{"name":"samuel"}],"frontMatter":{"title":"Day 2","date":"2019-03-27T00:00:00.000Z","author":"samuel","image":"https://uppy.io/img/blog/30daystoliftoff/day2.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","alias":"/blog/2019/03/27-30daystoliftoff-day2/","slug":"2019/03/liftoff-02"},"unlisted":false,"prevItem":{"title":"Day 3","permalink":"/blog/2019/03/liftoff-03"},"nextItem":{"title":"Day 1","permalink":"/blog/2019/03/liftoff-01"}},"content":"Yesterday, marked the beginning of our thirty-day blog post challenge to keep\\nyou updated on our preparations for **releasing Uppy 1.0 on April 25**. So here\\nwe are again already!\\n\\n\x3c!--truncate--\x3e\\n\\nOur big coding speedrun towards for 1.0 starts April 1, so we are mostly busy\\nwith tying up loose ends, busting issues, and planning our work ahead.\\n\\n<center><img width=\\"400\\" src=\\"/img/blog/30daystoliftoff/day2.jpg\\" /><br /></center>\\n\\n## Our roadmap for 1.0\\n\\nWith so much still to do before Uppy 1.0 is ready go, it\'s important that we\\nkeep track of all the various tasks. We are doing this with help of an Uppy 1.0\\nproject dashboard that we created in [Asana](https://asana.com). This lets us\\nsee in an instant what everyone is working on and what the current status is on\\nspecific tasks.\\n\\nWe currently have our tasks divided into five sections, which are: _Nice To\\nHave_, _To Do_, _In Progress_ and _Done_. The tasks in the _To Do_ and _In\\nProgress_ lanes (and of course those that are _Done_) are planned to make the\\n1.0 release. And if we have time on our side before the launch date, we\'ll also\\ntry to get as many of the _Nice To Have_ tasks checked off as well.\\n\\nWe\'ve discussed our\\n[Changelog](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#10-goals)\'s\\n1.0 goals and tried to re-prioritize and assign work.\\n\\nWe didn\'t manage to fit all of those *To Do*s in the picture, but here is a\\nscreenshot of what our board looks like at the moment:\\n\\n<center><img src=\\"/img/blog/30daystoliftoff/2019-03-27-board02.png\\" /></center>\\n\\nAside from planning, we\'ve also been busy onboarding\\n[Evgenia](https://github.com/lakesare) so she can hit the ground running April\\n1st.\\n\\nAnd tomorrow, we\'ll look at the *To Do*s in more detail, so we can get a clearer\\nidea of subtasks and who will do what, exactly.\\n\\nThat\'s all the updates I have for you today. See you tomorrow for\\n[Day 3](/blog/2019/03/liftoff-03/) of our 30 Days to Liftoff!\\n\\nPS If you don\'t want to miss an update, consider\\n[good ol\' RSS](https://uppy.io/blog/atom.xml) :)"},{"id":"2019/03/liftoff-01","metadata":{"permalink":"/blog/2019/03/liftoff-01","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-03-liftoff-01.md","source":"@site/blog/2019-03-liftoff-01.md","title":"Day 1","description":"When we started working on Uppy back in early","date":"2019-03-26T00:00:00.000Z","tags":[],"readingTime":3.08,"hasTruncateMarker":true,"authors":[{"email":"kevin@transloadit.com","name":"Kevin van Zonneveld","id":"kvz","tagline":"Transloadit co-founder","imageURL":"https://github.com/kvz.png","key":"kvz"},{"email":"aj@transloadit.com","name":"A.J. van Loon","id":"aj","tagline":"Writer & Editor","imageURL":"https://github.com/AJvanLoon.png","key":"aj"}],"frontMatter":{"title":"Day 1","authors":["kvz","aj"],"date":"2019-03-26T00:00:00.000Z","image":"https://uppy.io/img/blog/30daystoliftoff/day1.jpg","series":"30 Days to Liftoff","seriesSuffix":"of 30","alias":"/blog/2019/03/26-30daystoliftoff-day1/","slug":"2019/03/liftoff-01"},"unlisted":false,"prevItem":{"title":"Day 2","permalink":"/blog/2019/03/liftoff-02"},"nextItem":{"title":"Uppy 0.30: Introducing Robodog","permalink":"/blog/2019/03/0.30"}},"content":"When we [started working on Uppy](/blog/2016/07/uppy-begins/) back in early\\n2016, all we had was an idea and the shared desire to launch file uploading into\\na new age. We had already been laying the groundwork with the development of\\n[tus.io](https://tus.io/) and felt that its robust back-end deserved a front-end\\njust as robust, modern and user-friendly.\\n\\n\x3c!--truncate--\x3e\\n\\nBut what about open? We initially thought about building a proprietary uploader\\nthat would work exclusively with Transloadit\'s commercial service, but we\\nquickly turned around on it. We knew this could have a real impact. So, just\\nlike we did with Tus, we decided to make our new project open source. Three\\nyears, [16.000 stargazers](https://github.com/transloadit/uppy/stargazers) and a\\nthriving community later \u2014 and we could not be happier. Well, apart from one\\nthing: **getting Uppy 1.0 out the door** has proven harder than expected. Issues\\nkeep piling up, which led us down countless sidetracks and hurt our capacity to\\nhammer out those final design goals.\\n\\nBut now it\'s time for all that to change. That\'s why, starting today, we are\\nallocating all of Transloadit\'s resources into making a big final push and\\ngetting Uppy ready for liftoff. Our goal is to launch on **April 25**, exactly\\nthirty days from now.\\n\\n<center><img width=\\"400\\" src=\\"https://media.giphy.com/media/kvw01ozJ06TxS/giphy.gif\\" /><br /><br /></center>\\n\\nWe\'ll need all the help we can get, so for the next thirty days, everyone here\\nat Transloadit is going to be working exclusively on tasks related to Uppy 1.0.\\nThat means the Uppy core team (obviously) and tus core team, our SDK teams, as\\nwell as our infra & API engineers, designers, content writers, and the founders\\nthemselves \u2014 we\'ll all be chipping in and doing our part to ensure liftoff in\\nthirty days. We\'re even adding someone new to the Uppy team in April. A warm\\nwelcome to [Evgenia Karunus](https://github.com/lakesare) :)\\n\\n## A new post every day\\n\\nWe have added all tasks to a project board and thought it might be a fun idea to\\nkeep you updated on our day-to-day progress. So, we set ourselves an additional\\nchallenge: apart from getting Uppy ready for 1.0, we\'re also going to **write a\\nblog post about it every day**, for thirty days. Starting with this one.\\n\\nA post each day may prove hard to do, but we think it\'s worth a try. It really\\nfits with the open way in which we have been developing Uppy for the past few\\nyears, and gives you a look behind the scenes as we\'re getting ready for the\\nhome stretch. And hopefully, we also succeed in spreading the word even further,\\nreaching people that don\'t yet know about Uppy, but would be happy to!\\n\\n## What\'s Uppy with you?\\n\\nWe\'d love to hear what you think. Whether it is about Uppy in general, or\\nspecific issues you feel cannot be forgotten before 1.0, or maybe even about\\nthis blog post challenge itself \u2014 leave a comment here, use our\\n[forum](https://community.transloadit.com/c/uppy) directly (it also hosts the\\ncomments), or let us know on Twitter via [@uppy_io](http://twitter.com/uppy_io/)\\nor [@transloadit](http://twitter.com/transloadit/).\\n\\n\x3c!-- <center><img width=\\"400\\"  class=\\"dropshadow\\" src=\\"https://media.giphy.com/media/RnX4q6yYDoYCI/giphy.gif\\" /></center> --\x3e\\n<center><img width=\\"400\\"  class=\\"dropshadow\\" src=\\"https://media.giphy.com/media/SjInxhAJTzU7S/giphy.gif\\" /><br /><br /></center>\\n\\nWe can use your help! As we\'ve said, we\'re looking to spread the word so any\\nretweet, blog post, star, you name it, is gonna be double extra appreciated.\\nAlso, [issue busting](https://github.com/transloadit/uppy/issues) is going to\\nslow down as we\'re about to head deep into the remaining design goals (e.g.\\nReact Native). So, if you want to lend a hand with that, we\'d owe you big time!\\n\\nSee you tomorrow for the first progress update on\\n[Day 2](/blog/2019/03/liftoff-02/) of our 30 Days to Liftoff!\\n\\nPS If you don\'t want to miss an update, consider\\n[good ol\' RSS](https://uppy.io/blog/atom.xml) :)"},{"id":"2019/03/0.30","metadata":{"permalink":"/blog/2019/03/0.30","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2019-03-0.30.md","source":"@site/blog/2019-03-0.30.md","title":"Uppy 0.30: Introducing Robodog","description":"In 0.30, we are introducing a new friend for Uppy \u2014 the Robodog.","date":"2019-03-06T00:00:00.000Z","tags":[],"readingTime":3.325,"hasTruncateMarker":true,"authors":[{"name":"renee"}],"frontMatter":{"title":"Uppy 0.30: Introducing Robodog","date":"2019-03-06T00:00:00.000Z","author":"renee","image":"https://uppy.io/img/blog/0.30/robodog-assemble.jpg","published":true,"slug":"2019/03/0.30"},"unlisted":false,"prevItem":{"title":"Day 1","permalink":"/blog/2019/03/liftoff-01"},"nextItem":{"title":"Uppy 0.29: separate Core and Plugin styles, React Native in tus-js-client","permalink":"/blog/2018/12/0.29"}},"content":"In `0.30`, we are introducing a new friend for Uppy \u2014 the Robodog.\\n\\n<img src=\\"/img/blog/0.30/robodog-assemble.jpg\\" />\\n<small>Robodog: easy to assemble</small>\\n\\n\x3c!--truncate--\x3e\\n\\n## Robodog\\n\\nUppy is developed by [Transloadit](https://transloadit.com). Transloadit is the\\nSwiss Army Knife for your files: importing, resizing, cropping and watermarking\\nimages, making GIFs, transcoding videos, extracting thumbnails, generating audio\\nwaveforms, and so much more \u2014 all in a single service. Uppy has a similarly\\nlarge feature set in dozens of plugins, but because of that it can be\\ncomplicated to wire everything up for the best experience.\\n\\n[Robodog](https://uppy.io/docs/robodog/) is a new Uppy-based library that has\\nbeen trained to work with Transloadit. It includes three components:\\n\\n1. **File picker,** using the Dashboard plugin you know and love for the modal\\n   UI, with support for imports from third-party services.\\n2. **Form:** integration with your existing HTML forms. Files will be uploaded\\n   to Transloadit, and the form will submit JSON information about the files and\\n   encoding results.\\n3. **Upload:** one-line programmatic uploads \u2014 call\\n   `transloadit.upload(files, opts)` and get an array of results back.\\n\\n<center><img src=\\"https://media.giphy.com/media/Eq7T3GwDAlggE/giphy.gif\\" /></center>\\n\\nHere\u2019s a demo:\\n\\n<figure class=\\"wide\\">\\n  <p class=\\"codepen\\" data-height=\\"600\\" data-theme-id=\\"light\\"  data-border-color=\\"#EB2177\\" data-default-tab=\\"js,result\\" data-user=\\"uppy\\" data-slug-hash=\\"gEgPav\\" style={{height: \\"600px\\", boxSizing: \\"border-box\\", display: \\"flex\\", alignItems: \\"center\\", justifyContent: \\"center\\", border: \\"2px solid black\\", margin: \\"1em 0\\", padding: \\"1em\\"}} data-pen-title=\\"Robodog: resizing and optimizing your avatar\\">\\n    <span>See the Pen <a href=\\"https://codepen.io/uppy/pen/gEgPav/\\">\\n    Robodog: resizing and optimizing your avatar</a> by Uppy File Uploader (<a href=\\"https://codepen.io/uppy\\">@uppy</a>)\\n    on <a href=\\"https://codepen.io\\">CodePen</a>.</span>\\n  </p>\\n  <script async src=\\"https://static.codepen.io/assets/embed/ei.js\\"><\/script>\\n</figure>\\n\\nYou can install Robodog from NPM:\\n\\n```sh\\nnpm install @uppy/robodog --save\\n```\\n\\nOr import it by using an HTML script tag:\\n\\n```html\\n<link\\n\\trel=\\"stylesheet\\"\\n\\thref=\\"https://releases.transloadit.com/uppy/v0.30.3/robodog.min.css\\"\\n/>\\n<script src=\\"https://releases.transloadit.com/uppy/v0.30.3/robodog.min.js\\"><\/script>\\n```\\n\\n<center><img src=\\"https://media.giphy.com/media/MqGA1Za9ar6lG/giphy.gif\\" /></center>\\n\\n## Dashboard Improvements\\n\\nAs usual, we are making constant iterations and improvements to the Dashboard\\nplugin. Accessibility has been improved, we\u2019ve updated and fixed some icons,\\nbreadcrumbs in remote providers, and the issue with `browserBackButton` and\\nmultiple modals.\\n\\n## Progress or no progress\\n\\nWe\u2019ve improved how the StatusBar behaves when no progress reporting is available\\n(which is\\n[the case for MS Edge](https://github.com/transloadit/uppy/pull/1184)):\\n\\n<img src=\\"/img/blog/0.30/unknown-progress.gif\\" />\\n\\n## Upload Success\\n\\n\u26a0\ufe0f Breaking\\n\\nWe\u2019ve changed [`upload-success`](https://uppy.io/docs/uppy/#upload-success) and\\n[`upload-error`](https://uppy.io/docs/uppy/#upload-error) signatures.\\n\\n```js\\nuppy.on(\'upload-success\', (file, responseObject) => {\\n\\t// (depending on the uploader plugin used, it might contain\\n\\t// less info, the example is for @uppy/xhr-upload)\\n\\t// responseObject = {\\n\\t//   status, // HTTP status code (0, 200, 300)\\n\\t//   body, // response body\\n\\t//   uploadURL // the file url, if it was returned\\n\\t// }\\n});\\n```\\n\\n```js\\nuppy.on(\'upload-error\', (file, responseObject) => {\\n\\t// responseObject = {\\n\\t//   status, // HTTP status code (0, 200, 300)\\n\\t//   body // response body\\n\\t// }\\n});\\n```\\n\\n[See the docs](https://uppy.io/docs/uppy/) and\\n[PR #1138](https://github.com/transloadit/uppy/pull/1138) for more details.\\n\\n## Changelog\\n\\n- @uppy/robodog: \ud83d\udce3\u26a0\ufe0f Add Robodog \u2014 Transloadit browser SDK (#1135 /\\n  @goto-bus-stop)\\n- @uppy/dashboard: fixed issue with `browserBackButton` history and multiple\\n  modals (#1258 / @goto-bus-stop, @arturi)\\n- @uppy/core: Set response in Core rather than in upload plugins (#1138 /\\n  @arturi)\\n- @uppy/core: Don\u2019t emit a complete event if an upload has been canceled (#1271\\n  / @arturi)\\n- @uppy/companion: Support Redis option (auth_pass, etc...) (#1215 /\\n  @tranvansang)\\n- @uppy/companion: Sanitize text before adding to html (f77a102 /\\n  @ifedapoolarewaju)\\n- @uppy/dashboard: Update pause-resume-cancel icons (#1241 / @arturi, @nqst)\\n- @uppy/dashboard: Fix issues with multiple modals (#1258 / @goto-bus-stop,\\n  @arturi)\\n- @uppy/dashboard: Dashboard ui fixes: fix icon animation jiggling, inherit\\n  font, allow overriding outline, fix breadcrumbs, bug with x button being\\n  stuck, fix an issue with long note margin on mobile (#1279 / @arturi)\\n- @uppy/provider-views: update instagram nextPagePath after every fetch (25e31e5\\n  / @ifedapoolarewaju)\\n- @uppy/react: Allow changing instance in `uppy` prop (#1247 / @goto-bus-stop)\\n- @uppy/react: Typescript: Make DashboardModal.target prop optional (#1254 /\\n  @mattes3)\\n- @uppy/aws-s3: Use user-provided filename / type for uploaded object, fixes\\n  #1238 (#1257 / @goto-bus-stop)\\n- @uppy/tus: Update to `tus-js-client@1.6.0` with React Native support (#1250 /\\n  @arturi)\\n- build: Improve dev npm script: use Parcel for bundled example, re-build lib\\n  automatically, don\u2019t open browser and no ghosts mode, start companion when\\n  developing (but there\u2019s optional npm run dev:no-companion) (#1280 / @arturi)"},{"id":"2018/12/0.29","metadata":{"permalink":"/blog/2018/12/0.29","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2018-12-0.29.md","source":"@site/blog/2018-12-0.29.md","title":"Uppy 0.29: separate Core and Plugin styles, React Native in tus-js-client","description":"0.29 brings bug fixes and improvements, while we are busy working on Uppy","date":"2018-12-11T00:00:00.000Z","tags":[],"readingTime":3.73,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.29: separate Core and Plugin styles, React Native in tus-js-client","date":"2018-12-11T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/0.29/uppy-core-plugins-separate-styles.jpg","published":true,"slug":"2018/12/0.29"},"unlisted":false,"prevItem":{"title":"Uppy 0.30: Introducing Robodog","permalink":"/blog/2019/03/0.30"},"nextItem":{"title":"Uppy 0.28: A look behind the scenes","permalink":"/blog/2018/10/0.28"}},"content":"<img src=\\"/img/blog/0.29/uppy-core-plugins-separate-styles.jpg\\" />\\n\\n`0.29` brings bug fixes and improvements, while we are busy working on Uppy\\nReact Native support (which first had to\\n[land in the js client for our resumable file upload protocol: tus.io](https://github.com/tus/tus-js-client#react-native-support))\\nand a Preset (still debating the name) which will make it easier to leverage\\nTransloadit\'s encoding platform, and offer a smooth migration path for users not\\nyet on Uppy. The highlights of this release are: separating Core and Plugin\\nstyles, more accurate progress reporting by factoring in sizes across files,\\nadding a `responseType` option for XHR Upload, and fixing visual Webcam bugs.\\n\\n\x3c!--truncate--\x3e\\n\\n## Separate Core and Plugin styles\\n\\n**\u26a0\ufe0f breaking**\\n\\nWhen installing `uppy` and Plugins from npm, you had to include their styles.\\nPrior to this release, you only had to include the Plugin\u2019s CSS, say, for\\n`@uppy/webcam`:\\n\\n```js\\nimport Uppy from \'@uppy/core\';\\nimport Webcam from \'@uppy/webcam\';\\nimport \'@uppy/webcam/dist/style.css\';\\n```\\n\\nEach plugin\'s file contained the Core styles. If you added multiple plugins, the\\ncore styles ended up being duplicated. This bloated file sizes and could even\\nbreak styles entirely because of CSS\'s precedence rules.\\n\\nNow, you have to include \u201cgeneral\u201d styles from `@uppy/core` as well:\\n\\n```js\\nimport Uppy from \'@uppy/core\';\\nimport Webcam from \'@uppy/webcam\';\\nimport \'@uppy/core/dist/style.css\'; // <-- add this separately and one time only\\nimport \'@uppy/webcam/dist/style.css\';\\n```\\n\\nThus, the Core styles are only included once. `@uppy/core` styles must be\\nincluded before Plugin styles.\\n\\nPlease see the [documentation](https://uppy.io/docs/) for the Plugin you are\\nusing to find out whether it requires a CSS file to work. Generally speaking, UI\\nplugins, such as the Dashboard, Webcam and Status Bar, need a CSS file, while\\nutility plugins, such as Tus or XHR Upload, don\u2019t.\\n\\n\u26a0\ufe0f Important things to remember:\\n\\n1. Dashboard is a universal UI that comes with the Status Bar and Informer\\n   Plugins built in, and as such, Dashboard styles already come with the\\n   Informer and Status Bar styles.\\n2. Dashboard also ships with \u201cRemote Provider\u201d styles \u2014 you don\u2019t need to\\n   include anything besides `@uppy/dashboard/dist/style.css` for Google Drive,\\n   Instagram and Dropbox to work. However, the Url and Webcam plugins still have\\n   to be included manually. Here\u2019s an example:\\n\\n```js\\nimport Uppy from \'@uppy/core\';\\nimport Dashboard from \'@uppy/webcam\';\\nimport GoogleDrive from \'@uppy/google-drive\';\\nimport Webcam from \'@uppy/webcam\';\\nimport Url from \'@uppy/url\';\\n\\n// Core and Dashboard styles, then Webcam and Url, but not for GoogleDrive \u2014\\n// those come with Dashboard\\nimport \'@uppy/core/dist/style.css\';\\nimport \'@uppy/dashboard/dist/style.css\';\\nimport \'@uppy/webcam/dist/style.css\';\\nimport \'@uppy/url/dist/style.css\';\\n```\\n\\n## Using File Sizes For Progress Calculation\\n\\nWhen possible, file sizes are now used for calculating the total progress.\\nBefore, we\u2019ve used uploaded percentage for each file. Meaning that if you were\\nuploading four files \u2014 and three small were already uploaded, while one very\\nlarge file was still in progress \u2014 Uppy might still display progress as being\\n90%. Long story short, Uppy now has a more accurate progress bar \ud83d\ude80\\n\\nSome internal details, if you are interested:\\n\\n1. If there are files without sizes, the average size of all other files is\\n   assumed for the unsized files.\\n2. If there are no files with sizes, the percentage is just based on the\\n   percentages of the unsized files.\\n\\n<img src=\\"/img/blog/0.29/progress-size-calculation.jpg\\" />\\n\\n## `responseType` For XHR Upload\\n\\nWhen using XHR Upload, you can now configure the XMLHttpRequest `.responseType`\\nvalue. This allows the S3 Plugin to tell Firefox not to log XML errors when\\ngetting empty responses, so it finally fixes the spurious warnings that were\\ncaused by this, see [#518](https://github.com/transloadit/uppy/issues/518).\\n\\nBecause AwsS3 now sets `responseType`: `\'text\'`, we can no longer use the\\n`responseXML` property. We already did text based parsing for successful\\nresponses, and will now do the same for error responses.\\n\\n## Misc Changes\\n\\n- @uppy/core: Don\'t pass removed file IDs to next upload step, fixes (#1148 /\\n  @goto-bus-stop)\\n- @uppy/core: Fixed getFileType() when passed a file with an uppercase extension\\n  (#1169 / @jderrough)\\n- @uppy/companion: Use `createCipheriv` instead of deprecated `createCipher`\\n  (#1149 / @goto-bus-stop)\\n- @uppy/companion: Store Provider instances on `this.provider` instead of\\n  `this[this.id]` (@goto-bus-stop / #1174)\\n- @uppy/companion: Pin grant to known stable version (@ifedapoolarewaju / #1165)\\n- @uppy/companion: Fix \u2014 socket does not handle server.path option (#1142 /\\n  @tranvansang)\\n- @uppy/webcam: Fix a bug with Webcam video overflowing its container\\n  (68730f8a1bf731898d46883e00fed937d3ab54ab / @arturi)\\n- docs: Add `triggerUploadOnSubmit` to Form docs, add docs about options of\\n  hiding upload/pause/resume/cancel buttons; talk about bundler-less polyfill\\n  use (@goto-bus-stop, @arturi)\\n- @uppy/react: Allow Dashboard props width and height to accept a string for\\n  100% (#1129 / craigcbrunner)\\n\\nSee the\\n[full changelog (0.29)](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#0290)\\nfor more details."},{"id":"2018/10/0.28","metadata":{"permalink":"/blog/2018/10/0.28","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2018-10-0.28.md","source":"@site/blog/2018-10-0.28.md","title":"Uppy 0.28: A look behind the scenes","description":"In 0.28, we are introducing a new \u201cSingle Upload\u201d mode, improving on the","date":"2018-11-05T00:00:00.000Z","tags":[],"readingTime":4.71,"hasTruncateMarker":true,"authors":[{"name":"renee"}],"frontMatter":{"title":"Uppy 0.28: A look behind the scenes","date":"2018-11-05T00:00:00.000Z","author":"renee","image":"https://uppy.io/img/blog/0.28/dashboard-uploading.jpg","published":true,"slug":"2018/10/0.28"},"unlisted":false,"prevItem":{"title":"Uppy 0.29: separate Core and Plugin styles, React Native in tus-js-client","permalink":"/blog/2018/12/0.29"},"nextItem":{"title":"Uppy 0.27: First Swing at React Native Support","permalink":"/blog/2018/08/0.27"}},"content":"<img className=\\"border\\" src=\\"/img/blog/0.28/dashboard-uploading.jpg\\" />\\n\\nIn `0.28`, we are introducing a new \u201cSingle Upload\u201d mode, improving on the\\nStatus Bar plugin with a spinner and different pause/resume/cancel buttons.\\nWe\'ll also share some progress on bringing back unified locale packs and a\\nTransloadit Preset \ud83c\udf41\\n\\n\x3c!--truncate--\x3e\\n\\n## Single Uploads\\n\\nUppy has been flexible about uploading lots of things from the start. You can\\nadd files at any time, even after uploads have already started. This is neat,\\nbut not always the desired behaviour: sometimes, you just want to upload a few\\nfiles together with a form. In that case, it\'s useful to allow users to only\\nupload a set of files _once_. 0.28.0 adds some options to help with that!\\n\\nAn upload in Uppy terminology can be more than one file. Users can add a bunch\\nof files and when they press \\"Upload\\", all those files are bunched up into an\\nupload. They can then add more files and press the \\"Upload\\" button again: the\\n_new_ files are bunched into a second upload.\\n\\nThe new\\n[`allowMultipleUploads`](https://uppy.io/docs/uppy/#allowMultipleUploads-true)\\noption in Uppy Core can be set to `false` to only allow a single one of those\\nuploads. Once an upload is started, the Dashboard and Status Bar no longer show\\n\\"add files\\" and \\"upload\\" buttons. You can listen for a \'complete\' event and then\\nsafely continue your app\'s form flow.\\n\\nThe Dashboard also has a new option:\\n[`closeAfterFinish`](https://uppy.io/docs/dashboard/#closeAfterFinish-false).\\nWhen `true`, the modal Dashboard will automatically hide once an upload has\\ncompleted. You should only use this option in conjunction with\\n`allowMultipleUploads`, otherwise it might close the Dashboard when the user\\nisn\'t done yet! It can only be used with the modal Dashboard, when\\n[`inline`](https://uppy.io/docs/dashboard/#inline-false) is set to `false`.\\n\\"Closing\\" an inline Dashboard makes no sense :smile: You will see a warning in\\nthe console in both cases, so you don\'t have to remember all that.\\n\\nSpeaking of the Dashboard, it now also shows more statuses in the title bar:\\n\u201cUpload complete\u201d, \u201cUpload paused\u201d, \u201cProcessing 5 files\u201d and \u201cUploading 5\\nfiles\u201d.\\n\\n## Status Bar improvements\\n\\n- \u26a0\ufe0f **breaking** We\u2019ve added separate options for hiding pause/resume and\\n  cancel buttons. So now there are several options for buttons:\\n  `hideUploadButton`, `hideRetryButton`, `hidePauseResumeButton` and\\n  `hideCancelButton`. These options can be passed from the Dashboard, if you are\\n  not using Status Bar separately (most common case). See the docs for more\\n  info: <https://uppy.io/docs/status-bar/>.\\n- The Status Bar now features a spinner animation when upload is in progress.\\n- Encoding (with the Transloadit plugin, for example) and uploading progress now\\n  get different colors, so it\u2019s easier to tell what\u2019s happening, visually.\\n\\n<img className=\\"border\\" style={{borderTop: 0}}\\nsrc=\\"/img/blog/0.28/status-bar-uploading.png\\" />\\n\\n<img className=\\"border\\" style={{borderTop: 0}}\\nsrc=\\"/img/blog/0.28/status-bar-paused.png\\" />\\n\\n<img className=\\"border\\" style={{borderTop: 0}}\\nsrc=\\"/img/blog/0.28/status-bar-encoding.png\\" />\\n\\n<img className=\\"border\\" style={{borderTop: 0}}\\nsrc=\\"/img/blog/0.28/status-bar-complete.png\\" />\\n\\n## Locale packs\\n\\nIn the beginning, we used to have unified locale packs for text strings in Uppy\\n\u2014 English, Russian, German, Polish, etc. Then we made a switch to per-plugin\\nlocales, and the ability to load one file with locale strings in any language\\n(locale pack) was lost for a while. This release is the first step in bringing\\nthis functionality back.\\n\\nWith this change, you can load a locale pack like so:\\n`const uppy = Uppy({locale: german})`, then still override specific strings in a\\ncertain plugin, if needed:\\n\\n```js\\nconst uppy = Uppy({ locale: german });\\nuppy.use(Dashboard, {\\n\\ttrigger: \'#pick-files\',\\n\\tlocale: {\\n\\t\\tstrings: {\\n\\t\\t\\tdropPasteImport: \'Something else here, %{browse} or this\',\\n\\t\\t},\\n\\t},\\n});\\n```\\n\\nThe benefit to this is that there will be a central point of configuration for\\nlanguages, so there could be language packs with strings for, e.g., Czech at\\n@uppy/lang-cz (or @uppy/langs/cz) that would be very easy to contribute to (or\\nuse).\\n\\nAfter Uppy 0.28.0, this functionality is technically possible, but we still need\\nto update and publish locale packs for multiple languages.\\n\\n## Hosted Companion with Transloadit\\n\\nWhen using remote providers such as Google Drive and Dropbox, so that your users\\ncan pick files from these sources, you can host\\n[Companion](https://uppy.io/docs/companion/) yourself, or use the one provided\\nby Transloadit. And to simplify the latter, you can now use\\n`Transloadit.COMPANION` and `Transloadit.COMPANION_PATTERN` constants in remote\\nprovider options:\\n\\n```js\\nconst Dropbox = require(\'@uppy/dropbox\');\\nconst Transloadit = require(\'@uppy/transloadit\');\\n\\nuppy.use(Dropbox, {\\n\\tserverUrl: Transloadit.COMPANION,\\n\\tserverPattern: Transloadit.COMPANION_PATTERN,\\n});\\n```\\n\\nPlease see [Transloadit plugin documentation](https://uppy.io/docs/transloadit/)\\nfor more details.\\n\\n## Transloadit Preset\\n\\nLately, we\'ve been working on a wrapper package around Uppy and the\\n[Transloadit plugin](https://uppy.io/docs/transloadit/) that will make common\\nTransloadit-based workflows much simpler to implement. It\'s not ready just yet,\\nbut it should land in the next month!\\n\\nThis \\"preset\\" will provide three or so simple methods:\\n\\n- `transloadit.form()`, to enhance a form with existing file `<input>`s with\\n  Transloadit encoding capabilities, powered by Uppy\'s resilient uploading\\n  plugins\\n- `transloadit.modal()`, to show a one-off modal Dashboard that uploads to\\n  Transloadit\'s encoding backend\\n- `transloadit.upload()`, to instruct Uppy to upload files, using your own UI\\n  instead\\n\\nStay tuned!\\n\\n## Other Cool Changes\\n\\n- @uppy/core: \u26a0\ufe0f **breaking** remove `upload-cancel` event, `file-removed`\\n  should be enough, see [#1069](https://github.com/transloadit/uppy/pull/1069)\\n  for details\\n- @uppy/companion: \u26a0\ufe0f **breaking** Migrated provider adapter to Companion: saves\\n  5KB on the frontend, all heavy lifting moved to the server side\\n- @uppy/companion: Removed an erroneous TypeScript dependency that added 40MB to\\n  the install size\\n- @uppy/thumbnail-generator: You can now constrain thumbnail height, thanks to\\n  @richartkeil, see [#1096](https://github.com/transloadit/uppy/pull/1096) for\\n  documentation (we are planning to add real Thumbnail Generator documentation\\n  soon, too!)\\n- @uppy/webcam: Fix getting data from Webcam recording if mime type includes\\n  codec metadata ([#1094](https://github.com/transloadit/uppy/pull/1094) /\\n  @goto-bus-stop)\\n- meta: Added integration tests (in real browsers, thanks to Sauce Labs) for\\n  @uppy/url, @uppy/transloadit and @uppy/thumbnail-generator \ud83d\ude80\\n\\nSee\\n[full changelog (0.28 and 0.27.x patches) for more](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#0280)\\n\\nSee you in the next release!\\n\\nThe Uppy Team"},{"id":"2018/08/0.27","metadata":{"permalink":"/blog/2018/08/0.27","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2018-08-0.27.md","source":"@site/blog/2018-08-0.27.md","title":"Uppy 0.27: First Swing at React Native Support","description":"In 0.27, we have some more iterations on the Dashboard UI for you in store","date":"2018-08-23T00:00:00.000Z","tags":[],"readingTime":4.62,"hasTruncateMarker":true,"authors":[{"name":"ife"}],"frontMatter":{"title":"Uppy 0.27: First Swing at React Native Support","date":"2018-08-23T00:00:00.000Z","author":"ife","image":"https://uppy.io/img/blog/0.27/uppy-add-initial.jpg","slug":"2018/08/0.27"},"unlisted":false,"prevItem":{"title":"Uppy 0.28: A look behind the scenes","permalink":"/blog/2018/10/0.28"},"nextItem":{"title":"Uppy 0.26: Lerna","permalink":"/blog/2018/07/0.26"}},"content":"<img src=\\"/img/blog/0.27/uppy-add-initial.jpg\\" />\\n\\nIn `0.27`, we have some more iterations on the Dashboard UI for you in store\\nagain. We are getting rid of the permanent tab bar and made tons of other\\nimprovements!\\n\\n\x3c!--truncate--\x3e\\n\\n## Dashboard UI without tabs\\n\\nUppy used to always display the tab bar (the one you use to select between\\nimporting files from Instagram, Webcam, local disk, etc.). This ended up not\\nworking well with the growing list of supported sources, especially on mobile.\\n\\n<img src=\\"/img/blog/0.27/uppy-with-tabs.jpg\\" />\\n\\nSo in `0.27`, we are iterating on the UI again:\\n\\n<img src=\\"/img/blog/0.27/uppy-add-initial.jpg\\" />\\n\\nThe providers are now visible as a list of icons on the initial screen (plus,\\nwe\u2019ve added colors!), but when you complete the inital selection, it is hidden\\nbehind the \u201cplus\u201d button:\\n\\n<img src=\\"/img/blog/0.27/uppy-files-selected.jpg\\" />\\n\\nYou can always add more:\\n\\n<img src=\\"/img/blog/0.27/uppy-add-more.jpg\\" />\\n\\nThe StatusBar that shows progress has been \u201clightened\u201d:\\n\\n<img src=\\"/img/blog/0.27/uppy-upload-in-progress.jpg\\" />\\n\\n<img src=\\"/img/blog/0.27/uppy-upload-complete.jpg\\" />\\n\\nWe have decided to drop multiple-color support, so Informer messages will now\\nalways appear in a gray, round bubble. Apart from that, we have made tons of\\nsmall fixes, such as better animations, colors, font sizes, and more.\\n[Check out the PR #942](https://github.com/transloadit/uppy/pull/942) for\\ndetails.\\n\\nWe are aiming to make the UI less heavy, so that Uppy can easier fit within your\\nexisting site or app design.\\n\\nThe mobile version is now much more refined as well:\\n\\n<img src=\\"/img/blog/0.27/uppy-mobile.jpg\\" />\\n\\nAs always, feel free to\\n[try Uppy live on the Dashboard example](https://uppy.io/examples/dashboard/).\\n\\n## `autoProceed: false` by default\\n\\n\u26a0\ufe0f **breaking**\\n\\nBy default, Uppy used to begin uploading right after you selected a file. If you\\nwanted to let users edit some file metadata or pick and choose from multiple\\nsources first, you had to set `autoProceed: false`:\\n\\n```js\\n// this line could be seen in many of the Uppy examples\\nconst uppy = Uppy({ autoProceed: false });\\n```\\n\\nSince in most cases we actually wanted `autoProceed: false`, this is now the new\\ndefault. While it makes Uppy\'s UI less magical and harder to make irreversible\\nmistakes with, right out of the box, we feel this is the way to go. Make sure\\nyou change this in your project if needed. If you weren\'t setting an\\n`autoProceed` option at all, you will now have to add `autoProceed: true`.\\n\\n## Progress on React Native\\n\\nWe\u2019ve begun working on supporting React Native in Uppy. Since `0.27`, it should\\nrun in a React Native environment \u2014 meaning you can use Uppy API\\n(`uppy.addFile()`, `uppy.upload()`) for adding files and uploading, without the\\nUI. `@uppy/xhr-upload` uploader is already supported, and we are working on\\nmaking `@uppy/tus` (and `tus-js-client` itself) run in React Native as well.\\n\\nWe plan to make sure all non-UI Uppy plugins work in RN, and then provide a few\\nuseful components for adding Uppy to your RN apps.\\n\\nPlease head to the\\n[React Native PR #988](https://github.com/transloadit/uppy/pull/988) for\\ndetails. We\'d love to hear what you think and your suggestions for improving the\\nUppy React Native experience.\\n\\nBuilt-in React Native support has been a 1.0 goal from the start. We have had\\nmany requests about Angular.js and Vue support. There are already\\ncommunity-built solutions for these platforms that seem to work well, but\\nunfortunately we won\'t be officially supporting them before our 1.0 milestone.\\nDepending on community input, we might add that later.\\n\\n## Package sizes\\n\\nWe now have a cool table showing mingzipped bundle sizes for each individual\\nUppy package:\\n\\n<img width=\\"400\\" src=\\"/img/blog/0.27/uppy-sizes.png\\" />\\n\\n## \\"Uppy Server\\" is now \\"Companion\\"\\n\\n```bash\\nnpm install @uppy/companion\\n```\\n\\nUppy Server is an optional service that Uppy can use to import files from\\nsources like Instagram or Dropbox. However, simply naming it \\"Server\\" was quite\\nunclear and has caused some confusion. Many people thought you could upload\\nfiles to Uppy Server as well, but that is not the case. We recommend uploading\\nto a [tus.io](https://tus.io) server, or \u2014 if that\'s too much for your simple\\nusecase \u2014 using your existing webserver to handle the upload.\\n\\nSo, to hopefully end this confusion once and for all, we are renaming Uppy\\nServer to Companion: an optional tool in the datacenter, which you can use to\\nadd more functionality to your Uppy.js client. If nothing else, maybe it will\\nnet us some points for having yet another dog-themed name!\\n\\nSimultaneously, we moved Companion into the main\\n[transloadit/uppy](https://github.com/transloadit/uppy)\\n[monorepo](https://github.com/babel/babel/blob/master/doc/design/monorepo.md).\\nThis centralizes Uppy issue reporting and makes it easier to do updates and\\nsimultaneous releases of the client and Companion parts.\\n\\nThe first release of `@uppy/companion` is 0.14, and the last `uppy-server`\\nrelease is 0.13.4. `uppy-server` will be deprecated on npm soon.\\n\\nNote that despite the rename, configuration for standalone Companion still uses\\n`UPPYSERVER_` environment variables. This should ease the transition, since you\\nwill only have to update the package name for now. Once we add `COMPANION_`\\nvariable support, we will continue to support `UPPYSERVER_` environment\\nvariables to smoothen the transition. And of course, we will notify you here\\nwhen that time comes!\\n\\n## Other Cool Changes\\n\\n- @uppy/core: allow editing plugin titles (names) so that, for instance,\\n  \u201cCamera\u201d can be translated into different languages, fixes #920 (#942 /\\n  @arturi)\\n- @uppy/dashboard: fix animation \u2014 wait for closing animation to finish before\\n  opening modal (#942 / @arturi)\\n- @uppy/url: fix Url plugin reacting to wrong drop/paste events, add ignoreEvent\\n  (#942 / @arturi)\\n- build: build: Split integration tests and add one using create-react-app (#952\\n  / @goto-bus-stop)\\n- @uppy/companion: google Drive \u2014 move to v3 API (#977 / @pauln)\\n\\nSee\\n[full changelog (0.27 and 0.26.x patches) for more](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#0270)\\n\\nSee you in the next release!\\n\\nThe Uppy Team"},{"id":"2018/07/0.26","metadata":{"permalink":"/blog/2018/07/0.26","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2018-07-0.26.md","source":"@site/blog/2018-07-0.26.md","title":"Uppy 0.26: Lerna","description":"Uppy 0.26 replaces the monolithic Uppy package with a separate npm package for","date":"2018-07-12T00:00:00.000Z","tags":[],"readingTime":2.56,"hasTruncateMarker":true,"authors":[{"name":"renee"}],"frontMatter":{"title":"Uppy 0.26: Lerna","date":"2018-07-12T00:00:00.000Z","author":"renee","image":"https://uppy.io/img/blog/0.26/uppy-multiple-packages.png","published":true,"slug":"2018/07/0.26"},"unlisted":false,"prevItem":{"title":"Uppy 0.27: First Swing at React Native Support","permalink":"/blog/2018/08/0.27"},"nextItem":{"title":"Uppy 0.25: Drag & Drop Links Urls & Images, Improved File Selecting in Providers, Interactive Components In i18n","permalink":"/blog/2018/06/0.25"}},"content":"Uppy 0.26 replaces the monolithic Uppy package with a separate npm package for\\nevery plugin.\\n\\n<img width=\\"448\\" src=\\"/img/blog/0.26/uppy-multiple-packages.png\\" />\\n\\n\x3c!--truncate--\x3e\\n\\n## Lerna\\n\\n\u26a0\ufe0f **breaking**\\n\\nAll Uppy plugins have moved into their own npm packages. This means you need to\\ninstall the plugins you use separately in the future, and you have to update all\\nyour Uppy `require()` calls or `import` paths.\\n\\nThe packages are published under the `@uppy` scope on npm:\\n\\n```bash\\nnpm install @uppy/core @uppy/dashboard @uppy/tus\\n```\\n\\nThis has some benefits, like:\\n\\n- No need to know the file path of a plugin\u2014use `@uppy/dashboard` instead of\\n  `uppy/lib/plugins/Dashboard`. This also allows us to move our file structure\\n  around internally without breaking everyone.\\n- Only have the code you actually use in `node_modules`\u2014large plugin\\n  dependencies are not installed if you don\'t use the plugin.\\n- Separate versioning allows making breaking changes in plugins, without\\n  requiring users of other unrelated plugins to upgrade.\\n\\nYou can still use the `uppy` package for now to simplify upgrading, although it\\nmay be deprecated in the future. It installs all the `@uppy/` packages and\\nre-exports them:\\n\\n```js\\nconst { Core, Dashboard, Tus } = require(\'uppy\');\\n```\\n\\nIt\'s very important to set up tree shaking when using Uppy in this way;\\notherwise you may include dozens of KBs of unused plugins. Using the `@uppy/`\\npackages instead is strongly recommended, as those do not include unused code in\\nthe first place.\\n\\n```js\\nconst Uppy = require(\'@uppy/core\');\\nconst Dashboard = require(\'@uppy/dashboard\');\\nconst Tus = require(\'@uppy/tus\');\\n```\\n\\nThe CSS required for plugins is included in each package at `dist/style.css`.\\nEach plugin contains _all_ the CSS it needs, eg. the Dashboard includes Status\\nBar CSS. If you use both plugins, only include the Dashboard CSS file. Even\\nbetter is to use a CSS minifier so any duplicate styles are removed for you :)\\nCaveats like this are documented on the plugin pages, and hopefully we can\\nsmooth it out over time!\\n\\n## Typings\\n\\n[@taoqf](https://github.com/taoqf) contributed TypeScript typings to 0.25\u20140.26\\nmoves those into each package and adds a few missing ones.\\n\\nWe\'re not TypeScript experts ourselves, so feedback, bug reports & PRs are very\\nmuch appreciated :sparkles:\\n\\n## Documentation Updates\\n\\nThe documentation sidebar now lists plugins in several sections. This should\\nmake it easier to navigate. Of course, each plugin page now lists the\\n`npm install` instruction needed to install it, too!\\n\\n## Renaming the `host` Option in Remote Providers\\n\\n\u26a0\ufe0f **breaking**\\n\\nThe `host` name in remote provider plugins was not great\u2014for one, it could be a\\nURL to an Uppy Server running in a subdirectory, not a hostname. As of 0.26,\\n`serverUrl` should be used instead.\\n\\n## Other Cool Changes\\n\\n- providers: Add `serverPattern` option for third party authentication\\n  validation on dynamic Uppy Server hostnames (@ifedapoolarewaju)\\n- thumbnailgenerator: Polyfill Math.log2 since IE11 doesn\'t support this method\\n  (#892 / @DJWassink)\\n- dashboard: added browser back button listening (#575 / @zcallan)\\n- providers: Better provider errors (#895 / @arturi)\\n- xhr-upload: Add withCredentials option (#874 / @tuoxiansp)\\n\\nSee\\n[full changelog (0.26 and 0.25.x patches) for more](https://github.com/transloadit/uppy/blob/master/CHANGELOG.md#0260)\\n\\nSee you in the next release!\\n\\nThe Uppy Team"},{"id":"2018/06/0.25","metadata":{"permalink":"/blog/2018/06/0.25","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2018-06-0.25.md","source":"@site/blog/2018-06-0.25.md","title":"Uppy 0.25: Drag & Drop Links Urls & Images, Improved File Selecting in Providers, Interactive Components In i18n","description":"Uppy 0.25 comes with a couple of new features, like drag-and-dropping URLs and","date":"2018-06-07T00:00:00.000Z","tags":[],"readingTime":4.4,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.25: Drag & Drop Links Urls & Images, Improved File Selecting in Providers, Interactive Components In i18n","date":"2018-06-07T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/0.25/new-select-provider.jpg","published":true,"slug":"2018/06/0.25"},"unlisted":false,"prevItem":{"title":"Uppy 0.26: Lerna","permalink":"/blog/2018/07/0.26"},"nextItem":{"title":"Uppy 0.24: Refreshed Dashboard, StatusBar and Provider UI, revamped XHR Response Handling","permalink":"/blog/2018/04/0.24"}},"content":"Uppy 0.25 comes with a couple of new features, like drag-and-dropping URLs and\\nimages with the Url plugin, Dashboard modal animation and interactive components\\nin i18n strings, as well as a ton of under the hood fixes and improvements.\\n\\n\x3c!--truncate--\x3e\\n\\n## Select In Providers\\n\\n<img src=\\"/img/blog/0.25/new-select-provider.jpg\\" />\\n\\nSelecting files doesn\u2019t add files to Uppy immediately anymore. Instead a\\n\u201cSelect\u201d button appears (with a counter), and pressing that adds all the files\\nwith checked checkboxes and closes the Instagram or Google Drive overlay. Cancel\\ndiscards the selection and also closes the overlay.\\n\\nThis addresses an undesirable case where `autoProceed: true` would begin\\nuploading files the moment you ticked a checkbox, and you couldn\u2019t see what was\\ngoing on because the provider overlay was still open.\\n\\n## Drag & Drop or Paste Links And Images with the Url Plugin\\n\\nIf you use the [Url plugin](/docs/url/) with the [Dashboard](/docs/dashboard),\\nyou can now drop or paste URLs into the main Dashboard area. They will\\nautomatically be imported by the Url plugin:\\n\\n<figure class=\\"wide\\"><video alt=\\"Demo video showing Uppy with Url plugin that accepts drag and dropped urls\\" autoplay loop muted playsinline><source src=\\"/img/blog/0.25/link-drop-demo.mp4\\" type=\\"video/mp4\\" />Your browser does not support the video tag, you can <a href=\\"https://uppy.io/img/blog/0.25/link-drop-demo.mp4\\">download the video</a> to watch it.</video></figure>\\n\\n## i18n Strings with Interactive Components\\n\\n\u26a0\ufe0f **breaking**\\n\\nWe\u2019ve changed how i18n strings work with interactive components. We now use a\\nplaceholder for e.g. buttons, so it works nicely in languages that have\\ndifferent word order than English. Example:\\n\\n```js\\ndropPasteImport: \'Drop files here, paste, import from one of the locations above or %{browse}\';\\nbrowse: \'browse\';\\n```\\n\\n`%{browse}` will be replaced with a button/link. Previously, these two strings\\nwere concatenated in the view layer, so the `browse` text would always be last.\\n\\nHere\u2019s a list of strings that were changed in this release, please update those\\nin your locales:\\n\\n- core: `failedToUpload` needs to contain `%{file}`, substituted by the name of\\n  the file that failed\\n- dashboard: `dropPaste` and `dropPasteImport` need to contain `%{browse}`,\\n  substituted by the \\"browse\\" text button\\n- dashboard: `editing` needs to contain `%{file}`, substituted by the name of\\n  the file being edited\\n- dashboard: `fileSource` and `importFrom` need to contain `%{name}`,\\n  substituted by the name of the provider\\n- dragdrop: `dropHereOr` needs to contain `%{browse}`, substituted by the\\n  \\"browse\\" text button\\n\\nThe full list of available locale strings for each plugin is now documented in\\nthe [Uppy Docs](/docs/).\\n\\n## React Documentation\\n\\nReact docs have been improved: we now have a [separate page](/docs/react/) for\\neach Uppy React wrapper component that we offer.\\n\\nOther improvements in docs:\\n\\n- The `id` option is now listed on each plugin\'s documentation page.\\n- The `replaceTargetContent` option is listed on UI plugin documentation pages.\\n- The `locale` option is described on each plugin documentation page, and\\n  includes a short description for each string.\\n\\n## Typescript Definitions\\n\\n[@taoqf](https://github.com/taoqf) went ahead and added a lot of type\\ndefinitions to Uppy in [#834](https://github.com/transloadit/uppy/pull/834). So\\nif you are using TypeScript (and even if not, your code editor / linting tool\\nlikely supports type definitions), you are in for a treat!\\n\\n## No need to `.run()`\\n\\n\u26a0\ufe0f**breaking**\\n\\nWe removed the need to type `uppy.run()` in\\n[#793](https://github.com/transloadit/uppy/pull/793). You now only have to call\\n`.use()` for the plugins that you need (as usual), and everything is then run\\nautomatically. It comes with a few tradeoffs but we were getting a big amount of\\nsupport tickets where people forgot to conclude with `.run()`, and we saw a\\nchance to reduce boilerplate, so we decided to go ahead and pave the cowpath.\\n\\n## Authorisation tokens in Local Storage\\n\\n\u26a0\ufe0f**breaking**\\n\\nAuthorisation tokens from Uppy Server are now stored in local storage as opposed\\nto cookies. Two primary reasons for this decision are:\\n\\n1. It avoids CSRF issues which are present when using cookies.\\n2. It allows for less stringent\\n   [CORS policies enforced by browsers](https://github.com/transloadit/uppy/issues/803#issuecomment-386257515),\\n   since we are no longer sending cookie credentials via Ajax requests.\\n\\nThis is a breaking change because it requires that the Uppy Server version\\nshould also be updated to **0.13.x** otherwise there could be unexpected\\nbehaviour.\\n\\nWhat\u2019s more about the Authorisation tokens is that they are now encrypted on the\\nserver before being sent down to the client. Subsequent requests from the client\\nwill then send the token to the server via headers (not via cookies anymore).\\n\\n## Other Cool Changes\\n\\n- Fix: Debounce render calls again, fixes #669 (#796)\\n- Fix: XHRUpload canceled uploads progress events (#864)\\n- Improvement: Dashboard open/close animation (#852)\\n- Improvement: You can now hide action buttons in Dashboard and StatusBar (#821)\\n- Improvement: Pass `allowedFileTypes` and `maxNumberOfFiles` to\\n  `input[type=file]` to add restrictions to the system file picking dialog too\\n  (#814)\\n- Improvement: merge meta data when add file (#810)\\n- Fix: More robust failure handling for Transloadit, closes #708 (#805)\\n- Feature: display username/email in provider view\\n- Feature: show message for empty provider files\\n- Server: Allow custom headers to be set for remote multipart uploads\\n- Server: Add type to metadata as `filetype`\\n\\n\u26a0\ufe0f**heads up**\\n\\nIn the next release we are planning a\\n[Lerna conversion](https://github.com/transloadit/uppy/pull/906), meaning that\\neach Uppy plugin / module will get its own NPM package. Pretty excited about\\nthat one! (but also please refrain from sending us big PRs in the meantime :)\\n\\nSee you in the next one!\\n\\nThe Uppy Team"},{"id":"2018/04/0.24","metadata":{"permalink":"/blog/2018/04/0.24","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2018-04-0.24.md","source":"@site/blog/2018-04-0.24.md","title":"Uppy 0.24: Refreshed Dashboard, StatusBar and Provider UI, revamped XHR Response Handling","description":"Uppy 0.24.2 brings a refreshed UI in the Dashboard and StatusBar plugins, a","date":"2018-04-17T00:00:00.000Z","tags":[],"readingTime":5.86,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.24: Refreshed Dashboard, StatusBar and Provider UI, revamped XHR Response Handling","date":"2018-04-17T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/0.24/uppy-screenshot.jpg","published":true,"slug":"2018/04/0.24"},"unlisted":false,"prevItem":{"title":"Uppy 0.25: Drag & Drop Links Urls & Images, Improved File Selecting in Providers, Interactive Components In i18n","permalink":"/blog/2018/06/0.25"},"nextItem":{"title":"Uppy 0.23: Import from Url, refactored thumbnail generation, XHR bundle","permalink":"/blog/2018/02/0.23"}},"content":"Uppy 0.24.2 brings a refreshed UI in the Dashboard and StatusBar plugins, a\\nsynchronous `addFile()` method, a cancel button, style protections,\\ndocumentation on writing your own Uppy plugin, revamped XHR response handling\\nand tons of bugfixes.\\n\\n\x3c!--truncate--\x3e\\n\\n## Refreshed Dashboard and Providers\\n\\nAs always, we are trying to simplify and improve the UI of Uppy plugins. In this\\nrelease, Dashboard\u2019s design has been refreshed, check this out:\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.24/dashboard-main.jpg\\" />\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.24/uppy-screenshot.jpg\\" />\\n\\nMeta editing screen:\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.24/dashboard-meta-edit.jpg\\" />\\n\\nCamera screen:\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.24/import-from-camera.jpg\\" />\\n\\nImport from URL (Link):\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.24/import-from-url.jpg\\" />\\n\\nAnd more, check out the\\n[Dashboard example page](https://uppy.io/examples/dashboard/).\\n\\n## A Cleaner StatusBar\\n\\nThe StatusBar plugin used to show a lot of progress details. This has been\\nsimplified so that by default it will only show a percentage:\\n\\n<img src=\\"/img/blog/0.24/statusbar-2.jpg\\" />\\n\\nBut there\u2019s an option `showProgressDetails: true` for both the StatusBar and\\nDashboard (which passes it to StatusBar included in the Dashboard) to bring back\\nthis detailed information, spread over two lines:\\n\\n<img src=\\"/img/blog/0.24/statusbar-1.jpg\\" />\\n\\n```js\\nuppy.use(StatusBar, { ..., showProgressDetails: true })\\n\\n// or\\n\\nuppy.use(Dashboard, { ..., showProgressDetails: true })\\n```\\n\\nWe\u2019ve also added a handy \u201ccancel\u201d button, which will cancel everything in\\nprogress regardless of the type of the upload (wether uppy-server or local\\npowered, and wether tus-resumable or old school XHR/form uploads).\\n\\n## XHR Response Handling\\n\\nWhen the upload completes (regardless of whether it succeeded), a `response` key\\ngets added to the file. `file.response` contains a `status` and `data`\\nproperties. `data` is the result of the `getResponseData()` option. The\\n`getResponseData()` function\'s signature is now:\\n\\n```js\\ngetResponseData (responseText, response) { }\\n```\\n\\nThis is what the default JSON parsing implementation looks like in the\\n`XHRUpload` plugin, but you can override it with your own:\\n\\n```js\\ngetResponseData (responseText, response) {\\n  let parsedResponse = {}\\n  try {\\n    parsedResponse = JSON.parse(responseText)\\n  } catch (err) {\\n    console.log(err)\\n  }\\n\\n  return parsedResponse\\n}\\n```\\n\\nThe `responseText` is the XHR endpoint response as a string. For uploads from\\nthe user\'s device, `response` is the\\n[XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)\\nobject.\\n\\nWhen uploading files from remote providers such as Dropbox or Instagram, Uppy\\nServer sends upload response data to the client. This is made available in the\\n`getResponseData()` option as well. The `response` object from Uppy Server\\ncontains some properties named after their\\n[XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest)\\ncounterparts:\\n\\n- `response.responseText` - the XHR endpoint response as a string;\\n- `response.status` - the HTTP status code;\\n- `response.statusText` - the HTTP status text;\\n- `response.headers` - an object mapping lowercase header names to their values.\\n\\n## Powered by Uppy\\n\\nUppy is provided free for the world forever. In return, we ask that you consider\\nkeeping a tiny tasteful Uppy logo at the bottom of the Dashboard, so that more\\npeople can discover and enjoy Uppy. This _really helps_ to grow our community\\nwhich will result in more issues reported, more contributors, more features\\nrequested, more PRs merged, and a better Uppy for you to use tomorrow, for free,\\nforever.\\n\\nIf you don\'t want to do this indefinitely, consider doing this initially, just\\nto help us reach critical mass and get our _perpetuum mobile_ going.\\n\\nBut, Uppy is also free as in freedom. And so if you can\'t help our cause, set\\n`proudlyDisplayPoweredByUppy` to `false` to hide te Uppy logo.\\n\\n<img src=\\"/img/blog/0.24/powered-by-1.jpg\\" />\\n\\n## Server News\\n\\nWe occasionally get questions about the required servers for Uppy. Uppy does not\\nrequire special servers. You can use Uppy for free in the browser and let it\\nupload to your existing Apache/Nginx server. Sprinkle a few lines of HTML/JS and\\nthat\'s it.\\n\\n**If you want integration with Instagram** Dropbox and friends, you\'ll need to\\nrun an \'Uppy Server\' in the datacenter to help with OAuth secrecy and fetching\\nlarge files and uploading those, bypassing the client. No fun to have several\\ngigabytes pass through your mobile tubes - best let the datacenters sort this\\nout among themselves. That\'s what Uppy Server is for.\\n\\n**If you want resumable uploads**, you\'ll need a <https://tus.io/> speaking\\nserver.\\n\\nYou can run these optional servers yourself, or use the hosted variants provided\\nby our company [Transloadit](https://transloadit.com/) for \ud83d\udcb8. Transloadit also\\nadds a wide range of encoding/processing features.\\n\\nNow that that\'s sorted out, let\'s see what we improved on the Uppy Server side!\\nWe tackled a number of security issues:\\n\\n- Fixed security vulnerability in transient dependency\\n  [#70](https://github.com/transloadit/uppy-server/issues/70)\\n- Auto-generate tmp download file name to avoid Path traversal\\n- Namespace redis key storage/lookup to avoid collisions\\n- Validate callback redirect url after completing OAuth\\n- Reduce the permission level required by Google Drive\\n\\nOther non-security improvements are:\\n\\n- Auto-generate Server secret if none is provided on startup\\n- We implemented a more standard logger for Uppy Server\\n- Added an example project to run Uppy Server on Serverless,\\n  [see](https://github.com/transloadit/uppy-server/tree/master/examples/serverless).\\n\\n## Docs\\n\\n- Uppy Server docs now point to a detailed write-up on how to run Uppy Server on\\n  Kubernetes (#706 / @kiloreux)\\n- An Uppy Server custom provider example has been added, so now it\u2019s easier\\n  create your own custom providers.\\n- Added more useful events, i18n strings, fixed typos, and other polish.\\n\\n## Other Fixes & Improvements\\n\\n- \u26a0\ufe0f **breaking** `addFile()`, `onBeforeFileAdded()` and `onBeforeUpload()` are\\n  now synchronous and have to return nothing or file objects to proceed, or\\n  false to abort; please check out the update docs for details:\\n  [onBeforeFileAdded()](https://uppy.io/docs/uppy/#onBeforeFileAdded) and\\n  [onBeforeUpload()](https://uppy.io/docs/uppy/#onBeforeUpload).\\n- \u26a0\ufe0f **breaking** Most events now emit the whole `file` object instead of a\\n  `fileId`. So you can access `file.name` right away, for example, so you no\\n  longer have to fish for the file using its id.\\n- \u26a0\ufe0f **breaking** We\u2019ve added `postcss-safe-important` to our style build step,\\n  so now 90% of rules got `!important` declaration added to them. This is done\\n  to prevent page styles (especially global ones like from Bootstrap) from\\n  leaking into the Uppy widget. There are other solutions we are looking into,\\n  like iFrames and WebComponents, this is an experiment. Keep in mind that to\\n  override Uppy styles, you now have to also use `!important`.\\n- dashboard: \u26a0\ufe0f **breaking** `maxWidth`, `maxHeight` options have been converted\\n  to `width` and `height`, because this makes more sense, `maxWidth` and\\n  `maxHeight` are actually `100%`.\\n- There is now an option `showLinkToFileUploadResult: false` to disable linking\\n  to the upload result in Dashboard UI.\\n- We are now using the image time and date as a file name in Instagram, instead\\n  of a generic file id.\\n- The URL plugin now checks for HTTP(S) protocol, and adds HTTP by default if no\\n  protocol is present.\\n- It\u2019s now possible to override `<DashboardModal />` React component\u2019s target\\n  prop.\\n- Provider views now have `showFilter` and `showBreadcrumbs` options, those are\\n  `false` for the Instagram plugin, for example.\\n- Uppy Server to Client communication has been refactored into `Provider` and\\n  `Request` modules. `Request` can be used when a simple request needs to be\\n  made to Uppy Server, like in the URL plugin. `Provider` is used for more\\n  complex implementations shared between Google Drive and Instagram, for\\n  example.\\n\\nFinally, we\u2019ve added a Transloadit example to the website,\\n[check it out](https://uppy.io/examples/transloadit/).\\n\\nHave fun,\\n\\nThe Uppy Team"},{"id":"2018/02/0.23","metadata":{"permalink":"/blog/2018/02/0.23","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2018-02-0.23.md","source":"@site/blog/2018-02-0.23.md","title":"Uppy 0.23: Import from Url, refactored thumbnail generation, XHR bundle","description":"Hi all! We are back from holidays with a shiny new 0.23.0 release for you!","date":"2018-02-12T00:00:00.000Z","tags":[],"readingTime":9.285,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.23: Import from Url, refactored thumbnail generation, XHR bundle","date":"2018-02-12T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2018/02/0.23"},"unlisted":false,"prevItem":{"title":"Uppy 0.24: Refreshed Dashboard, StatusBar and Provider UI, revamped XHR Response Handling","permalink":"/blog/2018/04/0.24"},"nextItem":{"title":"Uppy 0.22: Preact, Form, Improved Dashboard, Custom Stores","permalink":"/blog/2017/12/0.22"}},"content":"Hi all! We are back from holidays with a shiny new `0.23.0` release for you!\\nIt\u2019s packed with a new `Url` plugin (imports files from urls), refactored\\n`ThumbnailGenerator`, `Webcam` improvements and more.\\n\\n## Import from Url\\n\\nMeet our new \u201cProvider\u201d plugin, `Url`. It\u2019s simple, yet powerful: paste a link\\nto any file on the web, and Uppy with Uppy Server will upload it wherever you\\nneed.\\n\\n```js\\nuppy.use(Url, { target: Dashboard, host: YOUR_UPPY_SERVER_URL });\\n```\\n\\n<figure class=\\"wide\\"><video alt=\\"Demo video showing Uppy with Url plugin that imports files from urls\\" controls autoplay><source src=\\"/img/blog/0.23/uppy-url-demo.mp4\\" type=\\"video/mp4\\" />Your browser does not support the video tag, you can <a href=\\"https://uppy.io/img/blog/0.23/uppy-url-demo.mp4\\">download the video</a> to watch it.</video></figure>\\n\\n\x3c!--truncate--\x3e\\n\\n## ThumbnailGenerator\\n\\nThumbnail generation has been refactored to a separate `ThumbnailGenerator`\\nplugin, thanks to the PR from\\n[@richardwillars](https://github.com/richardwillars). So Uppy Core is now more\\nlightweight, if you don\u2019t need previews.\\n\\n`ThumbnailGenerator` is still bundled with our most feature complete `Dashboard`\\nplugin though, so you don\u2019t have to change anything if you were using that.\\n\\nWe\u2019ve also fixed previews in Safari and tweaked the code slightly after reading\\nthe excellent\\n[Image resize in browsers is broken](https://blog.uploadcare.com/image-resize-in-browsers-is-broken-e38eed08df01)\\npost by Uploadcare \ud83d\udc4c.\\n\\n## Processing results\\n\\nProcessing results from encoding plugins like\\n[`Transloadit`](https://uppy.io/docs/transloadit/), are now added to `complete`\\nevent:\\n\\n```js\\nuppy.on(\'complete\', (result) => {\\n\\tconsole.log(result);\\n\\t// result: {\\n\\t//   failed: [...],\\n\\t//   successful: [...],\\n\\t//   transloadit: [...],\\n\\t//   uploadID: \\"cjdnzj2zy0000c___iewu9m5y\\"\\n\\t// }\\n});\\n```\\n\\nAnd to `uppy.upload()` promise result too:\\n\\n```js\\nuppy.upload().then((result) => {\\n\\tconsole.log(result);\\n});\\n```\\n\\nYou can still use events like\\n[`transloadit:result`](https://uppy.io/docs/transloadit/#transloadit-result),\\nits just easier when things are in the same place. Plugins can use the new\\n`uppy.addResultData()` API to add data to the `result`, like so:\\n\\n```js\\nuppy.addResultData(uploadID, { transloadit: assemblies });\\n```\\n\\n## Webcam\\n\\nThe Webcam plugin now mirrors image previews by default, so when you are making\\na selfie and wave with your right hand, you see that right hand in the Webcam\\npreview, just like in the mirror. This option can be disabled via\\n`uppy.use(Webcam, { mirror: false }`. Note that the resulting image will not be\\nmirrored, so your hand will actually be waving on the left. This mimics the\\nbehaviour of smarphone selfie cameras.\\n\\nWe\u2019ve also added an option to select which camera will be used to capture\\npictures or video:\\n[facingMode](https://uppy.io/docs/webcam/#facingMode-39-user-39), set to `user`\\n(front camera) by default.\\n\\n## Server\\n\\n- You can now specify a config path when starting the standalone Uppy Server\\n  like so `uppy-server --config /path/to/uppyconf.json`. The config file is\\n  expected to be a JSON file with the same schema as the Uppy Server options.\\n- A periodic cleanup job has been added to Uppy Server, to delete stale upload\\n  files from the specified `filePath`. Even though we\'d rarely expect uploaded\\n  files to go undeleted immediately, there could be cases where an error occurs\\n  during an upload, and so Uppy Server leaves the file undeleted to give room\\n  for upload retries. With the cleanup job in place, we can ensure that this\\n  file would eventually be deleted after the file upload is done.\\n- Responses from Multipart uploads are now relayed to Uppy Client as they are\\n  received from the target server. With this in place, you can now handle\\n  responses from local and remote XHRUpload in nearly the same way.\\n\\n## Other Improvements and Additions\\n\\n- Added new option to hide ProgressBar and StatusBar after upload finish (#485 /\\n  @wilkoklak)\\n- Chaining API has been improved, you can now use `.on` and `.off` anywhere:\\n  `uppy.use(Dashboard).use(Tus).on(\'complete\', handleComplete).run()`\\n- The Transloadit plugin now has a new `transloadit:assembly-executing` event\\n  and passes Assembly results to the `complete` callback (#547, #527 /\\n  @goto-bus-stop)\\n- We\u2019ve added a `bundle` option to the `XHRUpload` plugin to send multiple files\\n  in one request (#442 / @goto-bus-stop)\\n- Uppy releases are now hosted on Edgly CDN by Transloadit\\n- A Third-party extension for integrating the Ngrx Angular state management\\n  library with Uppy has been released,\\n  [uppy-store-ngrx](https://github.com/rimlin/uppy-store-ngrx/) by @rimlin\\n\\n## Other Fixes\\n\\n- Fixed blank preview thumbnails for images in Safari; use slightly different\\n  step scaling (#458, #584 / @arturi)\\n- We now log in console and show an Informer message, not error in console, when\\n  file cannot be added due to restrictions (#604, #492 / @goto-bus-stop).\\n- Unused files have been removed from published package, saving many many\\n  precious megabytes :) (#586 / @goto-bus-stop)\\n- Use empty input value so same file can be selected multiple times (@arturi /\\n  #534)\\n- Fix modal and page scroll (#564 / @arturi)\\n- Refactor provider views (#554 / @arturi)\\n- Lots of documentation fixes, thanks to all our contributors!\\n\\n## Press\\n\\nUppy has made some appearances on the internet recently.\\n\\n1\\\\.\\n**[Better File Uploads with Shrine: Direct Uploads](https://janko.io/better-file-uploads-with-shrine-direct-uploads/)**:\\n\\nOn how to set up Uppy with [Shrine](http://shrinerb.com/), a file attachment\\ntoolkit for Ruby applications. It starts off with an example of a plain `<form>`\\nupload and builds up to a more advanced experience:\\n\\n> - When the user submits the form with selected files, there is no indicator\\n>   telling them when the upload will finish.\\n> - When the user is uploading multiple files at once and the request happens to\\n>   get aborted, it\u2019s not possible to keep the files that were uploaded so far,\\n>   because all files are sent in a single request. In other words, multiple\\n>   uploads are all-or-nothing.\\n> - Files are validated only after they have been uploaded, which means the user\\n>   needs to wait until the upload finishes before they can know whether their\\n>   file was even valid.\\n>\\n> We can improve that by asynchronously starting to upload files on the client\\n> side as soon as they\u2019re selected. This also gives users the ability to\\n> continue filling in other fields while files are being uploaded, because the\\n> UI isn\u2019t blocked during the upload.\\n>\\n> There are many popular JavaScript file upload libraries out there \u2013\\n> jQuery-File-Upload, Dropzone.js, FineUploader etc. \u2013 but the one you should\\n> use with Shrine is definitely Uppy \ud83d\udc36. Uppy is a modular library that knows\\n> how to upload files to a custom endpoint on your app, to Amazon S3, or even to\\n> a resumable endpoint, providing progress bars, drag & drop functionality,\\n> image previews, file validations etc, all while making as few assumptions as\\n> possible.\\n\\n2\\\\. **Featured\\n[in Javascript Daily](https://twitter.com/JavaScriptDaily/status/950348390268919809)**:\\n\\n> Uppy: A Powerful, Modular JavaScript File Uploader\\n\\n<cite>\u2014 JavaScript Daily</cite>\\n\\n3\\\\.\\n**[#1 Trending on GitHub](https://twitter.com/uppy_io/status/946485101541683201)\\naccross all languages**:\\n\\n> Today our open source efforts are outpacing those of MSFT GOOG FB combined :D\\n\\n<cite>\u2014 kvz, transloadit</cite>\\n\\n4\\\\. **[#2 Product of the Week](https://www.producthunt.com/posts/uppy-io) on\\nProductHunt**:\\n\\n> You literally solved my biggest problem, thank you for developing such a great\\n> project.\\n\\n<cite>\u2014 Chetan Menaria</cite>\\n\\n> Writing file upload functionality is always a pain in the arse. I\u2019ll be\\n> checking this out today and integrating into SongBox if it\u2019s good.\\n\\n<cite>\u2014 Mick</cite>\\n\\n5\\\\.\\n**[#2 New Tool of The Year](https://stackshare.io/posts/top-developer-tools-2017)\\non Stackshare**:\\n\\n> Uppy closed out the year as the #1 trending GitHub JavaScript project, so we\\n> think it\u2019s only getting started.\\n\\n## Full Changelog\\n\\nHere is the full list of changes for version `0.23.0` (and patches\\n`0.22.1`\u2014`0.22.5`):\\n\\n- core: Allow plugins to add data to result object. Return `processing` results\\n  among with `upload` results in `complete` event and `upload()` promise (#527 /\\n  @goto-bus-stop)\\n- core: Move limiting to different point, to fix StatusBar and other UI issues\\n  #468 (#524, #526 / @goto-bus-stop)\\n- core: Add uploadID to complete event (#569 / @richardwillars)\\n- core: Allow chanining after .on() and .off() to improve ergonomics (#597 /\\n  @arturi)\\n- core: Allow user to override sass variables (#555 / @chao)\\n- core: Move preview generation to separate plugin, add queuing (#431 /\\n  @richardwillars)\\n- core: Third-party extension, uppy-store-ngrx\\n  <https://github.com/rimlin/uppy-store-ngrx/> (#532 / @rimlin)\\n- core: Warn, not error, when file cannot be added due to restrictions? (#604,\\n  #492 / @goto-bus-stop)\\n- dashboard: Add more i18n strings (#565 / @arturi)\\n- dashboard: Fix modal and page scroll (#564 / @arturi)\\n- dashboard: Refactor provider views (#554 / @arturi)\\n- dashboard: Restore focus after modal has been closed (#536 / @arturi)\\n- dashboard: Use empty input value so same file can be selected multiple times\\n  (@arturi / #534)\\n- dashboard: Use more accessible tip lib microtip (#536 / @arturi)\\n- docs: Add PHP snippets to XHRUpload docs (#567 / @goto-bus-stop)\\n- meta: Added instruction to fork the repo first (#512 / muhammadInam)\\n- meta: Automatically host releases on edgly and use that as our main CDN (#558\\n  / @kvz)\\n- meta: Dependency version updates (#523 / @goto-bus-stop)\\n- meta: Remove unused files from published package (#586 / @goto-bus-stop)\\n- s3: Respect `limit` option for upload parameter requests too; fix isXml()\\n  check when no content-type is available (#545, #544, #528 / @goto-bus-stop)\\n- statusbar: Fix status text still showing when statusbar is hidden (#525 /\\n  @goto-bus-stop)\\n- test: Alter jest testPathPattern to current dir, add chai (#583 / @arturi)\\n- thumbnail: Add thumbnail generation plugin (#461 / @richardwillars)\\n- thumbnail: Fix blank preview thumbnails for images in Safari; use slightly\\n  different stap scaling (#458, #584 / @arturi)\\n- transloadit: Add `transloadit:assembly-executing` event (#547 /\\n  @goto-bus-stop)\\n- transloadit: Add assembly results to to the `complete` callback (#527 /\\n  @goto-bus-stop)\\n- transloadit: Easily pass form fields (#593 / @goto-bus-stop)\\n- tus: `resume: false` \u2014 don\u2019t store url (@arturi / #507)\\n- uppy-server: Detect file upload size from the server (@ifedapoolarewaju)\\n- uppy-server: Fix circular json stringify error (@ifedapoolarewaju)\\n- uppy-server: Load standalone server options via config path\\n  (@ifedapoolarewaju)\\n- uppy-server: Pass response from uppy-server upload\u2019s endpoint (#591 /\\n  @ifedapoolarewaju)\\n- uppy-server: Schedule job to delete stale upload files (@ifedapoolarewaju)\\n- uppy-server: Security audit, ask @acconut\\n- uppy-server: Support localhost urls as endpoints (@ifedapoolarewaju)\\n- url: New plugin that imports files from urls (#588 / @arturi,\\n  @ifedapoolarewaju)\\n- webcam: Font styling for Webcam option (#509 / @muhammadInam)\\n- webcam: Mirror image preview, add option to select which camera is used to\\n  capture, try filling the whole Dashboard with webcam preview image, remove\\n  URL.createObjectURL() (#574 / @arturi, @nqst)\\n- website: Add Transloadit example to website (#603 / @arturi)\\n- website: Doc fixes (#563 / @arturi)\\n- website: Improve the Contributing guide (#578 / @arturi)\\n- xhrupload: Add bundle option to send multiple files in one request (#442 /\\n  @goto-bus-stop)\\n- xhrupload: Prevent files from being uploaded multiple times in separate\\n  uploads (#552 / @richardwillars)\\n- xhrupload: Refactor response and error handling (#591 / @goto-bus-stop,\\n  @arturi, @ifedapoolarewaju)\\n- core: Fix remote uploads (#474 / @arturi)\\n- statusbar, progressbar: Add option to hide progress bar after upload finish\\n  (#485 / @wilkoklak)\\n- s3: Allow passing on XHRUpload options, such as \\"limit\\" to AwsS3 Plugin (#471\\n  / @ogtfaber)\\n- XHRUpload: Fix progress with `limit`ed XHRUploads (#505 / @goto-bus-stop)\\n- core: fix error when `file.type === null`, shouldn\u2019t pass that to match\\n  (@arturi)\\n- dashboard: input hidden=\\"true\\" should not be focusable too (@arturi)\\n- webcam: Font styling for Webcam option (#509 / @muhammadInam)\\n- docs: fix reference to incorrect width/height options (#475 / @xhocquet)\\n- docs: Documentation fixes and improvements (#463 / @janko-m)\\n- docs: Fixed several typos in docs/server and docs/uppy (#484 / @martiuslim)\\n\\nThe Uppy Team"},{"id":"2017/12/0.22","metadata":{"permalink":"/blog/2017/12/0.22","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2017-12-0.22.md","source":"@site/blog/2017-12-0.22.md","title":"Uppy 0.22: Preact, Form, Improved Dashboard, Custom Stores","description":"Uppy is featured on Product Hunt!","date":"2017-12-23T00:00:00.000Z","tags":[],"readingTime":7.895,"hasTruncateMarker":false,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.22: Preact, Form, Improved Dashboard, Custom Stores","date":"2017-12-23T00:00:00.000Z","authors":["arturi"],"image":"https://uppy.io/img/blog/0.22/uppy-dashboard-updated.jpg","published":true,"slug":"2017/12/0.22"},"unlisted":false,"prevItem":{"title":"Uppy 0.23: Import from Url, refactored thumbnail generation, XHR bundle","permalink":"/blog/2018/02/0.23"},"nextItem":{"title":"Uppy 0.21: End to End Tests, Accessibility, Additional Security for Uppy Server","permalink":"/blog/2017/10/0.21"}},"content":"**Uppy is [featured on Product Hunt](https://www.producthunt.com/posts/uppy-io)!\\nTo our fellow hunters: welcome! Quick intro: Uppy is the next open source file\\nuploader for web browsers. We\'re very close to launching 1.0 and would love to\\nget your feedback in, leave your thoughts on Product Hunt or start a discussion\\nbelow.**\\n\\nHi all! It\u2019s New Year and Christmas time, and this year Santa is brining you\\nUppy `0.22` \ud83c\udf81 This release packs a lot of neat stuff, but it also breaks things\\nin quite a few places, so please read on.\\n\\nAnd, if you are celebrating, happy holidays from the Uppy Team! \ud83c\udf84\\n\\n\x3c!--more--\x3e\\n\\n## Preact and JSX\\n\\nWe\u2019ve been happy using `yo-yo` and `hyperx` template strings in our views for\\nquite a while, but decided to try something more stable. Preact has most of the\\ngreat ideas of React, plus smaller file size as well as a few good ideas of its\\nown.\\n\\nAll views have been refactored to utilize JSX. We actually liked hyperx a lot,\\nbut JSX has better tooling and syntax highlighting support. It also seems to be\\nthe standard in the React community.\\n\\nSee [#451 PR](https://github.com/transloadit/uppy/pull/451) for details on why\\nwe switched and discussion around the process.\\n\\n## Core and plugins refactor\\n\\n- **\u26a0\ufe0f Breaking** We\u2019ve renamed the `core` object to `uppy` in plugins. So\\n  instead of `this.core.state` we now use `this.uppy.state`.\\n- **\u26a0\ufe0f Breaking** Events have been renamed to remove the `core:` prefix. So\\n  `core:success` becomes just `success`, and this also results in now having\\n  `error`, `upload-started` and so on. Prefixed event names are used for\\n  plugin-specific event sometimes, like `dashboard:file-card`.\\n- **\u26a0\ufe0f Breaking** CSS class names have been altered to use the `uppy-`\\n  namespace, so `.UppyDashboard-files` becomes `.uppy-Dashboard-files` and so\\n  on.\\n- **\u26a0\ufe0f Breaking** `getMetaFromForm` was removed in favor of the new `Form`\\n  plugin (see below).\\n- **\u26a0\ufe0f Breaking** `MetaData` plugin was removed in favor of the `metaFields`\\n  option in Dashboard, [see docs](https://uppy.io/docs/dashboard/#metaFields)\\n  for more details.\\n- Plugins now use `this.el` to refer to their UI element instead of\\n  `this.target`.\\n- `setPluginState` and `getPluginState` are now used in Providers.\\n\\n## Refreshed Dashboard UI\\n\\n![Uppy Dashboard UI with 3 files selected](/img/blog/0.22/uppy-dashboard-updated.jpg)\\n\\n- File cards are simpler, we\u2019ve removed the excess white backgrounds, improved\\n  the remove icon, reduced paddings, added slight shadows.\\n- Cicular upload button in the Dashboard has been moved to the StatusBar. It\u2019s\\n  also not circular anymore, and there\u2019s no cloud icon. Plain and simple.\\n- Redesigned \u201cretry\u201d and \u201cadd +1 file\u201d buttons.\\n- Added `metaFields` option: an array of settings for UI field objects, which\\n  previousely lived in a separate `MetaData` plugin:\\n  `{ id: \'caption\', name: \'Caption\', placeholder: \'describe what the image is about\' }`,\\n  [see docs](https://uppy.io/docs/dashboard/#metaFields) for more details.\\n\\nSee [#434 PR](https://github.com/transloadit/uppy/pull/451) for more screenshots\\nand details.\\n\\n## Select multiple files in providers\\n\\nThanks to [@sadovnychyi](https://github.com/sadovnychyi), you can now select\\nmultiple files from remote providers like Google Drive and Instagram. You can\\nalso select folders, and even range of files by holding `shift` key when\\nclicking on first and last item in range.\\n\\n![Uppy Dashboard UI with 3 files selected](/img/blog/0.22/uppy-dashboard-provider-select.jpg)\\n\\n[Check it out \u2192](https://uppy.io/examples/dashboard/)\\n\\n## Stores\\n\\nAs you know, internally Uppy uses its own simple state management system with\\n`getState` and `setState` methods. In previous releases we\u2019ve added support for\\nRedux via a plugin called `Redux`, which mirrors all Uppy state to your Redux\\napplication\u2019s state, and a plugin called `ReduxDevTools` that connects to Redux\\nDevTools and enables all the cool time traveling stuff.\\n\\nWe are excited to tell you that this release makes state management even more\\nflexible by bringing support for external stores! Here\u2019s a quote from the docs:\\n\\n> By default, Uppy stores its internal state in an object.\\n>\\n> If your app uses a state management library such as Redux, it can be useful to\\n> have Uppy store its state there instead\u2014that way, you could write custom\\n> uploader UI components in the same way as the other components in the\\n> application.\\n\\nHere\u2019s how that works:\\n\\n```js\\nconst { createStore } = require(\'redux\')\\nconst ReduxStore = require(\'uppy/lib/store/ReduxStore\')\\n\\nconst reducer = combineReducers({\\n  ...reducers,\\n  uppy: ReduxStore.reducer\\n})\\nconst store = createStore(reducer)\\n\\nconst uppy = Uppy({\\n  store: ReduxStore({\\n    store: store // That\'s a lot of stores!\\n  })\\n})\\n...\\n```\\n\\nNow Uppy will use your app\u2019s Redux store instead of its own, so you have a\\n\u201csingle source of truth\u201d \ud83d\udd2e\\n\\nRead [more on stores](https://uppy.io/docs/guides/custom-stores/) in docs.\\n\\n## Form\\n\\n`Form` is a new plugin that can be used in conjunction with any other. Here\u2019s\\nwhat it does:\\n\\n1. Acquires metadata from a `<form>` element of your choosing before the upload\\n   starts in Uppy.\\n2. Injects result array of succesful and failed files back into the form.\\n\\n**\u26a0\ufe0f Breaking** With this plugin we\u2019ve deprecated `getMetaFromForm` option that\\nused to be in all acquire plugins like Dashboard and DragDrop. Now you can just\\nuse `Form`.\\n\\n```js\\nuppy.use(Form, {\\n\\ttarget: \'#my-form\',\\n});\\n```\\n\\nRead [more about the Form plugin](https://uppy.io/docs/form/) in docs.\\n\\n## Encoding support in GoldenRetriever\\n\\nOur browser crash / page refresh restore plugin `GoldenRetriever` (read\\n[more about it](https://uppy.io/docs/golden-retriever/)) now supports correctly\\nrestoring [Transloadit](https://transloadit.com) assemblies!\\n\\nAlso, we\u2019ve fixed restoring from paused state. Now uploads will remain paused\\nand not get out of sync.\\n\\n## Type-safe Server\\n\\nUppy Server now uses TypeScript to do some type checking at compile time. This\\nhelps spot some otherwise easy to miss runtime bugs. While the project\u2019s source\\nis still written in JavaScript, the use of\\n[JSDoc specifications is leveraged by TypeScript](https://github.com/Microsoft/TypeScript/wiki/Type-Checking-JavaScript-Files)\\nto detect data types and mistakes with that, within the project.\\n\\nThanks to this approach a number of hidden bugs have already been identified and\\nfixed, and it also makes Uppy Server very well documented. :)\\n\\n## And there\u2019s more\\n\\n- New `setFileState` method as a nice shorthand to update file-specific state.\\n- Added more extensions for mimetype detection.\\n- More plugin documentation \ud83d\udc4d\\n- Misc bugs fixes and improvements in Webcam, Dashboard, Provider, so things\\n  should be more stable all around.\\n- Added an option to limit simultaneous uploads in XHRUpload.\\n- Fixed remote server error handler for uppy-server.\\n- Added [Snyk](https://snyk.io/) to uppy-server to aid vulnerability detection.\\n\\n## Full Changelog\\n\\nHere is the full list of changes for version `0.22.0` (and patch `0.21.1`):\\n\\n- **\u26a0\ufe0f Breaking** core: rendering engine switched from `Yo-Yo` to `Preact`, and\\n  all views from `html` hyperx template strings to `JSX` (#451 / @arturi)\\n- **\u26a0\ufe0f Breaking** core: large refactor of Core and Plugins: `setFileState`,\\n  merge `MetaData` plugin into `Dashboard`, prefix \\"private\\" core methods with\\n  underscores (@arturi / #438)\\n- **\u26a0\ufe0f Breaking** core: renamed `core` to `uppy` in plugins and what not. So\\n  instead of `this.core.state` we now use `this.uppy.state` (#438 / @arturi)\\n- **\u26a0\ufe0f Breaking** core: renamed events to remove `core:` prefix, as been\\n  suggested already. So: `success`, `error`, `upload-started` and so on, and\\n  prefixed event names for plugins sometimes, like `dashboard:file-card` (#438 /\\n  @arturi)\\n- **\u26a0\ufe0f Breaking** core: CSS class names have been altered to use `uppy-`\\n  namespace, so `.UppyDashboard-files` --\x3e `.uppy-Dashboard-files` and so on\\n- **\u26a0\ufe0f Breaking** dashboard: added `metaFields` option, pass an array of\\n  settings for UI field objects\\n  `{ id: \'caption\', name: \'Caption\', placeholder: \'describe what the image is about\' }`\\n  (#438 / @arturi, @goto-bus-stop)\\n- **\u26a0\ufe0f Breaking** core: deprecate `getMetaFromForm` in favor of new `Form`\\n  plugin (#407 / @arturi)\\n- form: added `Form`, a new plugin that is used in conjunction with any\\n  acquirer, responsible for: 1. acquiring the metadata from `<form>` when upload\\n  starts in Uppy; 2. injecting result array of succesful and failed files back\\n  into the form (#407 / @arturi)\\n- core: add more extensions for mimetype detection (#452 / @ifedapoolarewaju)\\n- docs: more docs for plugins (#456 / @goto-bus-stop)\\n- core: misc bugs fixes and improvements in Webcam, Dashboard, Provider and\\n  others (#451 / @arturi)\\n- dashboard: improved Dashboard UI (@arturi)\\n- uppy-server: remove pause/resume socket listeners when upload is done\\n  (@ifedapoolarewaju)\\n- uppy/uppy-server: remote server error handler (#446 / @ifedapoolarewaju)\\n- provider: fix dropbox thumbnail view (@ifedapoolarewaju)\\n- uppy-server: link uppy-server with https://snyk.io/ to aid vulnerability\\n  spotting (@ifedapoolarewaju)\\n- **\u26a0\ufe0f Breaking** core: Set `this.el` in `Plugin` class (#425 / @arturi)\\n- StatusBar, Dashboard and Provider UI improvements place upload button into\\n  StatusBar, use Alex\u2019s suggestions for retry button; other UI tweaks (#434 /\\n  @arturi)\\n- XHRUpload: fix fields in XHR remote uploader (#424 / @sadovnychyi)\\n- XHRUpload: option to limit simultaneous uploads #360 (#427 / goto-bus-stop)\\n- core: Add `isSupported()` API for providers (#421 / @goto-bus-stop, @arturi)\\n- core: Add stores. Improve on Redux PR #216 to allow using Redux (or any other\\n  solution) for all Uppy state management, instead of proxy-only (#426 /\\n  @goto-bus-stop)\\n- core: add ability to disable thumbnail generation (#432 / @richardwillars)\\n- core: allow to select multiple files at once from remote providers (#419 /\\n  @sadovnychyi)\\n- core: use `setPluginState` and `getPluginState` in Providers (#436 / @arturi)\\n- docs: uppy-server docs for s3 `getKey` option (#444 / @goto-bus-stop)\\n- goldenretriever: Fix IndexedDB store initialisation when not cleaning up (#430\\n  / @goto-bus-stop)\\n- provider: folder deselection did not remove all files (#439 /\\n  @ifedapoolarewaju)\\n- s3: Use Translator for localised strings (420 / @goto-bus-stop )\\n- transloadit: Port old tests from tape (#428 / @goto-bus-stop)\\n- tus: Restore correctly from paused state (#443 / @goto-bus-stop)\\n- uppy-server: use typescript to compile code for a type safe servers\\n  (@ifedapoolarewaju)\\n\\nWe expect our 1.0 release early next year. Want to impact it? Comment below, in\\n[GitHub issues](https://github.com/transloadit/uppy/issues), or on\\n[Product Hunt](https://www.producthunt.com/posts/uppy-io).\\n\\nHappy Holidays,\\n\\nThe Uppy Team\\n\\n<center>\\n  <iframe src=\\"https://ghbtns.com/github-btn.html?user=transloadit&repo=uppy&type=watch&count=true\\"\\n  allowtransparency=\\"true\\" frameborder=\\"0\\" scrolling=\\"0\\" width=\\"100\\" height=\\"20\\"></iframe>\\n</center>"},{"id":"2017/10/0.21","metadata":{"permalink":"/blog/2017/10/0.21","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2017-10-0.21.md","source":"@site/blog/2017-10-0.21.md","title":"Uppy 0.21: End to End Tests, Accessibility, Additional Security for Uppy Server","description":"Hi all! We\u2019ve been busy with Halloween, but also another release, so here is","date":"2017-11-24T00:00:00.000Z","tags":[],"readingTime":5.6,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.21: End to End Tests, Accessibility, Additional Security for Uppy Server","date":"2017-11-24T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2017/10/0.21"},"unlisted":false,"prevItem":{"title":"Uppy 0.22: Preact, Form, Improved Dashboard, Custom Stores","permalink":"/blog/2017/12/0.22"},"nextItem":{"title":"Uppy 0.20: React, Retry & Time Travel","permalink":"/blog/2017/10/0.20"}},"content":"Hi all! We\u2019ve been busy with Halloween, but also another release, so here is\\nUppy `0.21`! This one improves accessibility, features new end-to-end tests and\\nimproved security in Uppy Server.\\n\\n\x3c!--truncate--\x3e\\n\\n## Accessibility\\n\\nOne of the goals we\u2019ve set out to achieve with Uppy was to make an accessibe\\nfile upload widget, and in this release we\u2019ve achieved some more progress in\\nthis area:\\n\\n- Dashboard modal dialog now handles focus better (it\u2019s trapped inside the modal\\n  while open);\\n- First button is in focus right after the modal dialog is open;\\n- More (aria-)labels have been added;\\n- Files from remote providers are now selectable with a keyboard.\\n\\nWe plan to continue gradually improving in the accessibility area.\\n\\nSee [#414 PR](https://github.com/transloadit/uppy/pull/414) for details.\\n\\n## Returning `{ successful, failed }` from `uppy.upload()`\\n\\n**\u26a0\ufe0f Breaking change**\\n\\n`uppy.upload()` promise now resolves to a `result` object with two arrays of\\nfiles: `{ successful, failed }`. This lets you handle succesful and failed\\nuploads in one go:\\n\\n```js\\nuppy.upload().then((result) => {\\n\\tconsole.info(\'Successful uploads:\', result.successful);\\n\\tif (result.failed.length > 0) {\\n\\t\\tconsole.error(\'Errors:\');\\n\\t\\tresult.failed.forEach((file) => {\\n\\t\\t\\tconsole.error(file.error);\\n\\t\\t});\\n\\t}\\n});\\n\\n// or\\n\\nuppy.on(\'core:complete\', ({ successful, failed }) => {\\n\\tif (failed.length === 0) {\\n\\t\\tconsole.log(\'UPLOAD SUCCESSFUL!!!\');\\n\\t} else {\\n\\t\\tconsole.warn(\'UPLOAD FAILED!!!\');\\n\\t}\\n\\tconsole.log(\'successful files:\', successful);\\n\\tconsole.log(\'failed files:\', failed);\\n});\\n```\\n\\nSee [`uppy.upload()`](https://uppy.io/docs/uppy/#uppy-upload) and\\n[`core:complete`](https://uppy.io/docs/uppy/#core-complete) in docs, as well as\\n[#404 PR](https://github.com/transloadit/uppy/pull/404) for more details.\\n\\n## End to end tests\\n\\nWe\u2019ve refactored end to end tests to use [Webdriver.io](http://webdriver.io),\\nand for the occasion added tests for Edge, Safari, Android and iOS. Now tests on\\nTravis and Sauce Labs (thanks for the open source tier!) run smoothly and it\u2019s\\neasier to alter them or write new ones.\\n\\n## More secure Uppy Server\\n\\nWe made sure access tokens from third-party providers, such as Google Drive or\\nInstagram, are not stored on the server with Uppy Server, and kept in your\\nbrowser instead. Then, when you want to pick a file from your Instagram, the\\ntoken is used to make a request to Uppy Server, which is in turn used by Uppy\\nServer to communicate with Instagram.\\n\\nData validation is also now done during intiation of an upload, to prevent\\ncorrupt data from triggering funny behaviours on the server. :)\\n\\nAnd, while we were at this, we also made sure all sensitive data is masked in\\nrequest logs.\\n\\n## Migration to Dropbox v2 API\\n\\nSince the\\n[deprecation of Dropbox v1 API](https://blogs.dropbox.com/developers/2017/09/api-v1-shutdown-details/),\\nuppy/uppy-server have now been updated to use the v2 API. It is implemented to\\nwork closely as its previous implementation so there should be no worries.\\n\\n## Custom plugin id\\n\\nUp until now you could only use a plugin once with an Uppy instance. Now you can\\npass custom `id` for any plugin (though this has to be manually implemented in\\nany new plugin). This allows using, for example, two `StatusBar`s, one inside\\nthe `Dashboard`, and one somewhere on the page, visible even when `Dashboard` is\\nclosed.\\n\\nCan be used like this:\\n\\n```js\\n// one StatusBar comes included in the Dashboard, another will be mounted on the page\\n.use(Dashboard {...})\\n.use(StatusBar, { id: \'PageStatusBar\', target: \'body\' }\\n```\\n\\nSee [#418 PR](https://github.com/transloadit/uppy/pull/418) for details.\\n\\n## Misc good stuff\\n\\n- Migrated Dropbox in Uppy Server to use v2 API.\\n- Fixed generating thumbnails for images with transparent background.\\n- We are now using [`tinyify`](https://github.com/goto-bus-stop/tinyify)(by our\\n  own [@goto-bus-stop](https://github.com/goto-bus-stop)) for the Uppy bundle to\\n  make it smaller and more efficient.\\n- Instead of restarting only the file upload itself, start an entirely new\\n  upload for retries. Fixes retrying uploads with processing plugins.\\n- The S3 plugin now includes XHRUpload. **\u26a0\ufe0f Breaking change: you should remove\\n  `.use(XHRUpload)` when using S3.**\\n- XHRUpload now includes a timeout `opts.timeout = 30000`, after which it errors\\n  and offers a retry (retry UI supported in Dashboard), see\\n  [#378](https://github.com/transloadit/uppy/pull/378) for more.\\n- Renamed `RestoreFiles` \u2192 `GoldenRetriever`, and `Tus10` \u2192 `Tus`. **\u26a0\ufe0f Breaking\\n  change: please make sure to use the new names when setting up plugins**.\\n- The Webcam plugin has been refactored. There\u2019s no flash fallback now, it works\\n  in modern browsers only, and the Webcam tab won\u2019t appear in the Dashboard if a\\n  camera is not supported on the device.\\n\\n## Full Changelog\\n\\nHere is the full list of changes for version `0.21.0` (and patches `0.20.1`,\\n`0.20.2`, `0.20.3`):\\n\\n- accessibility: add tabindex=\\"0\\" to buttons and tabs, aria-labels, focus (#414\\n  / @arturi)\\n- core: allow setting custom `id` for plugins to allow a plugin to be used\\n  multiple times (#418 / @arturi)\\n- core: do not check isPreviewSupported for unknown filetypes (#417 /\\n  @sadovnychyi)\\n- core: refactor `uppy-base` (#382 / @goto-bus-stop)\\n- core: remove functions from state object (#408 / @goto-bus-stop)\\n- core: return `{ successful, failed }` from `uppy.upload()` (#404 /\\n  @goto-bus-stop)\\n- core: update state with error messages rather than error objects (#406 /\\n  @richardwillars)\\n- core: use `tinyify` for the unpkg bundle. (#371 / @goto-bus-stop)\\n- dashboard: Fix pasting files, default `image` file name, add type to meta,\\n  file type refactor (#395 / @arturi)\\n- dragdrop: Fix of the .uppy-DragDrop-inner spacing on small screens (#405 /\\n  @nqst)\\n- react: fix `uppy` PropType, closes (#416 / @goto-bus-stop)\\n- s3: automatically wrap XHRUpload. Users should remove `.use(XHRUpload)` when\\n  using S3. (#408 / @goto-bus-stop)\\n- test: refactored end-to-end tests to not use website, switched to\\n  Webdriver.io, added tests for Edge, Safari, Android and iOS (#410 / @arturi)\\n- tus: Rename Tus10 \u2192 Tus (#285 / @goto-bus-stop)\\n- uppy-serer: mask sensitive data from request logs (@ifedapoolarewaju)\\n- uppy-server: add request body validators (@ifedapoolarewaju)\\n- uppy-server: migrate dropbox to use v2 API (#386 / @ifedapoolarewaju)\\n- uppy-server: store tokens in user\u2019s browser only (@ifedapoolarewaju)\\n- webcam: only show the webcam tab when browser support is available (media\\n  recorder API) (#421 / @arturi, @goto-bus-stop)\\n- webcam: simplify and refactor webcam plugin (modern browser APIs only) (#382 /\\n  @goto-bus-stop)\\n- xhrupload: set a timeout in the onprogress event handler to detect stale\\n  network (#378 / @goto-bus-stop)\\n- uppy-server: allow flexible whitelist endpoint protocols (@ifedapoolarewaju)\\n- core: Start a completely new upload when retrying. (#390 / @goto-bus-stop)\\n- dashboard: Show errors that occurred during processing on the file items.\\n  (#391 / @goto-bus-stop)\\n- transloadit: Mark files as having errored if their assembly fails. (#392 /\\n  @goto-bus-stop)\\n- core: Clear file upload progress when an upload starts. (#393 /\\n  @goto-bus-stop)\\n- tus: Clean up `tus.Upload` instance and events when an upload starts,\\n  finishes, or fails. (#390 / @goto-bus-stop)\\n- docs: fix `getMetaFromForm` documentation (@arturi)\\n- core: fix generating thumbnails for images with transparent background (#380 /\\n  @goto-bus-stop)\\n- transloadit: use Translator class for localised strings (#383 /\\n  @goto-bus-stop)\\n- goldenretriever: don\'t crash when required server-side (#384 / @goto-bus-stop)\\n- redux: add plugin for syncing uppy state with a Redux store (#376 /\\n  @richardwillars)\\n\\nThe Uppy Team"},{"id":"2017/10/0.20","metadata":{"permalink":"/blog/2017/10/0.20","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2017-10-0.20.md","source":"@site/blog/2017-10-0.20.md","title":"Uppy 0.20: React, Retry & Time Travel","description":"We are proud to present Uppy 0.20. This one focuses on React and Redux","date":"2017-10-05T00:00:00.000Z","tags":[],"readingTime":5.4,"hasTruncateMarker":true,"authors":[{"name":"renee"}],"frontMatter":{"title":"Uppy 0.20: React, Retry & Time Travel","image":"https://uppy.io/img/blog/0.20/dnd-gray.jpg","date":"2017-10-05T00:00:00.000Z","author":"renee","published":true,"slug":"2017/10/0.20"},"unlisted":false,"prevItem":{"title":"Uppy 0.21: End to End Tests, Accessibility, Additional Security for Uppy Server","permalink":"/blog/2017/10/0.21"},"nextItem":{"title":"Uppy 0.19: Tests, Informer details and better\xa0APIs","permalink":"/blog/2017/09/0.19"}},"content":"We are proud to present Uppy `0.20`. This one focuses on React and Redux\\nsupport, adding storage expirations to `GoldenRetriever` and upload retries.\\nEnjoy!\\n\\n## Uppy React components\\n\\nUppy now ships with React components! We\u2019ve been exploring different approaches\\nto React components for several months, so we\u2019re excited to finally have them in\\n\u2728 There are components for each of Uppy\u2019s UI elements, like the Dashboard and\\nthe StatusBar.\\n\\n```js\\nconst uppy = Uppy();\\nuppy.use(Tus10, { endpoint: \'/upload\' });\\n\\nconst Dashboard = require(\'uppy/lib/react/Dashboard\');\\n\\nconst Uploader = () => (\\n\\t<Dashboard uppy={uppy} note=\\"Hey! It\'s a React component!\\" />\\n);\\n\\nReactDOM.render(<Uploader />, document.querySelector(\'#uploader\'));\\n```\\n\\n\x3c!--truncate--\x3e\\n\\n[Check out the docs for more!](/docs/react/)\\n\\n## Redux\\n\\n[@richardwillars](https://github.com/richardwillars) contributed a plugin that\\nwill sync Uppy\u2019s internal state with an existing Redux store. To use it, define\\na Redux action and reducer:\\n\\n```js\\n// The action creator receives 3 parameters:\\n// - The previous state\\n// - The new state\\n// - The change set\\nconst uppyStateUpdate = (previous, next, patch) => ({\\n\\ttype: \'UPPY_STATE_UPDATE\',\\n\\tprevious,\\n\\tnext,\\n\\tpatch,\\n});\\n\\nfunction reduce(state = {}, action) {\\n\\tif (action.type === \'UPPY_STATE_UPDATE\') {\\n\\t\\treturn {\\n\\t\\t\\t...state,\\n\\t\\t\\t// Merge in the changes.\\n\\t\\t\\t...action.patch,\\n\\t\\t};\\n\\t}\\n}\\n```\\n\\nThen pass your Redux store\'s `dispatch` function and the action creator to the\\nRedux plugin:\\n\\n```js\\nconst ReduxStore = require(\'uppy/lib/Redux\');\\n\\nuppy.use(ReduxStore, {\\n\\tdispatch: store.dispatch,\\n\\taction: uppyStateUpdate,\\n});\\n```\\n\\n[See the docs](/docs/guides/custom-stores/)\\n\\n## Redux DevTools\\n\\nEven if you\'re not using Redux in your application, there\'s some Redux-related\\nnews! Uppy now has a new plugin, `ReduxDevTools`, which adds debug support for\\nRedux DevTools and allows you to time travel while debugging Uppy:\\n\\n<figure class=\\"wide\\"><video alt=\\"Demo video showing Uppy with Redux Dev Tools and time traveling\\" controls autoplay><source src=\\"/img/blog/0.20/uppy-reduxdevtools.mp4\\" type=\\"video/mp4\\" />Your browser does not support the video tag, you can <a href=\\"https://uppy.io/img/blog/0.20/uppy-reduxdevtools.mp4\\">download the video</a> to watch it.</video></figure>\\n\\nTo try it, add the plugin:\\n\\n```js\\nconst ReduxDevTools = require(\'uppy/lib/plugins/ReduxDevTools\');\\n\\nuppy.use(ReduxDevTools);\\n```\\n\\nAnd then\\n[activate the browser extension](https://github.com/zalmoxisus/redux-devtools-extension).\\n\\nSee [#373](https://github.com/transloadit/uppy/pull/373) for details and\\ndiscussion.\\n\\n## Retries\\n\\nWe\u2019ve added a retry UI to the `Dashboard`. If some of your uploads fail\u2014maybe\\nthe network is down or the endpoint is unresponsive\u2014you\u2019ll see this:\\n\\n<img alt=\\"Uppy Dashboard retry UI with individual retry buttons and \u201cretry all\u201d\\" src=\\"/img/blog/0.20/retry.jpg\\" />\\n\\nFrom here it\u2019s easy to retry individual uploads or all at once. This feature\\ncurrenty works best with `Tus10` plugin, and has basic `XHRUpload` support, but\\nwe\u2019ll improve on the latter in the future releases.\\n\\n## Re-designed Drag and Drop plugin\\n\\nThe old trustly `DragDrop` plugin has been re-designed by\\n[@arturi](https://github.com/arturi) and [@nqst](http://zaytsev.io):\\n\\n- Fresh simple design, arrow icon, white background;\\n- New sizing options: `width` and `height` (both `100%` by default to fill the\\n  entire container space);\\n- A `note` option, like in the `Dashboard`, to add info about restrictions or\\n  anything else you would like your users to know.\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.20/dnd-gray.jpg\\" />\\n\\n**[Check it out](/examples/dragdrop/)**\\n\\n```js\\nuppy.use(DragDrop, {\\n\\ttarget: \'body\',\\n\\twidth: \'600px\',\\n\\theight: \'300px\',\\n\\tnote: \'Videos only, up to 100 MB\',\\n});\\n```\\n\\n## The Golden Retriever cleans up after itself\\n\\nWe recently released the `GoldenRetriever` plugin, which stores selected files\\non the client so that it can recover them after a browser crash. Previously,\\nthese stored files would stay around forever, and clog up the user\'s disk space.\\nAs of 0.20.0, files will be removed from client-side storage when they have been\\nuploaded. Files that have had nothing happen to them for longer than 24 hours\\nwill be cleaned up automatically. This timeframe can be configured using the new\\n`expires` option:\\n\\n```js\\nconst ms = require(\'ms\');\\n\\nuppy.use(GoldenRetriever, {\\n\\texpires: ms(\'4 hours\'),\\n});\\n```\\n\\n(The [`ms`](https://npmjs.com/package/ms) module is great for converting text\\ndurations to milliseconds!)\\n\\nThis will clean up files when Uppy runs, but perhaps not every page of your app\\nuses Uppy. If a user selected some files, but then never came back to that same\\npage, files could still hang around for a long time. To aid this, there\'s a new\\nmodule that you can call to clean up Uppy\'s cache without needing an Uppy\\ninstance:\\n\\n```js\\nconst cleanup = require(\'uppy/lib/plugins/GoldenRetriever/cleanup\');\\n\\ncleanup();\\n```\\n\\nWe\'ll hopefully make that require path easier to remember in the future :)\\n\\n## Misc good stuff\\n\\n- The GoldenRetriever now detects a serviceWorker registration\\n  automatically\u2014it\'s no longer necessary to emit an `core:sw-file-ready` event.\\n- Request headers are now configurable in the AWS S3 plugin.\\n- A new `setPluginState` allows plugins to set state scoped to the plugin.\\n- Some unused code was removed \ud83c\udf89\\n- More tests were added! Thanks [@gavboulton](https://github.com/gavboulton) and\\n  [@richardwillars](https://github.com/richardwillars) \ud83c\udf89\\n- Documentation for the [StatusBar](/docs/statusbar),\\n  [XHRUpload](/docs/xhrupload) and [Tus](/docs/tus) plugins.\\n\\n## Full Changelog\\n\\nHere is the full list of changes for version `0.20.0` (and patch `0.19.1`):\\n\\n- core: retry/error when upload can\u2019t start or fails (offline, connection lost,\\n  wrong endpoint); add error in file progress state, UI, question mark button\\n  (#307 / @arturi)\\n- core: support for retry in Tus plugin (#307 / @arturi)\\n- core: support for retry in XHRUpload plugin (#307 / @arturi)\\n- core: Add support for Redux DevTools via a plugin (#373 / @arturi)\\n- core: improve and merge the React PR (#170 / @goto-bus-stop, @arturi)\\n- core: improve core.log method, add timestamps (#372 / @arturi)\\n- dragdrop: redesign, add note, width/height options, arrow icon (#374 /\\n  @arturi)\\n- uploaders: upload resolution changes, followup to #323 (#347 / @goto-bus-stop)\\n- uploaders: issue warning when no uploading plugins are used (#372 / @arturi)\\n- core: fix `replaceTargetContent` and add tests for `Plugin` (#354 /\\n  @gavboulton)\\n- goldenretriever: Omit completed uploads from saved file state\u2014previously, when\\n  an upload was finished and the user refreshed the page, all the finished files\\n  would still be there because we saved the entire list of files. Changed this\\n  to only store files that are part of an in-progress upload, or that have yet\\n  to be uploaded (#358, #324 / @goto-bus-stop)\\n- goldenretriever: Remove files from cache when upload finished\u2014this uses the\\n  deleteBlobs function when core:success fires (#358, #324 / @goto-bus-stop)\\n- goldenretriever: add a timestamp to cached blobs, and to delete old blobs on\\n  boot (#358, #324 / @goto-bus-stop)\\n- s3: have some way to configure content-disposition for uploads, see #243\\n  (@goto-bus-stop)\\n- core: move `setPluginState` and add `getPluginState` to `Plugin` class (#363 /\\n  @goto-bus-stop)\\n- goldenretriever: fix restorefiles with id (#351 / @arturi)\\n- goldenretriever: Clean up blobs that are not related to a file in state (#349\\n  / @goto-bus-stop)\\n- core: set the newState before emiting `core:state-update` (#341 /\\n  @sunil-shrestha, @arturi)\\n- docs: Document StatusBar plugin (#350 / @goto-bus-stop)\\n\\nThe Uppy Team"},{"id":"2017/09/0.19","metadata":{"permalink":"/blog/2017/09/0.19","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2017-09-0.19.md","source":"@site/blog/2017-09-0.19.md","title":"Uppy 0.19: Tests, Informer details and better\xa0APIs","description":"Hello! The 0.19 release is about internal fixes, optimizations and","date":"2017-09-21T00:00:00.000Z","tags":[],"readingTime":3.27,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.19: Tests, Informer details and better\xa0APIs","image":"https://uppy.io/img/blog/0.19/informer-details.jpg","date":"2017-09-21T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2017/09/0.19"},"unlisted":false,"prevItem":{"title":"Uppy 0.20: React, Retry & Time Travel","permalink":"/blog/2017/10/0.20"},"nextItem":{"title":"Uppy 0.18: Dogumentation and The GoldenRetriever","permalink":"/blog/2017/08/0.18"}},"content":"Hello! The `0.19` release is about internal fixes, optimizations and\\nrefactoring, as well as some work on PRs that we\u2019ll hopefully tell you about\\nsoon!\\n\\n## Jest tests\\n\\nThanks to our contributer, [@richardwillars](https://github.com/richardwillars),\\nand following the example set by Uppy Server, we\u2019ve\\n[switched to Jest](https://github.com/transloadit/uppy/pull/310) for Uppy\u2019s unit\\ntests, and added a bunch of new tests as well. And even more are being\\n[added](https://github.com/transloadit/uppy/pull/346) as we speak!\\n\\nWe\'re also happy to report that\\n[more tests](https://github.com/transloadit/uppy-server/compare/3341a9592d0723fd9b58ec77d8c762f20b434704...d3c6f5b409d08f588d1704b77181e5c0342ca322)\\nhave been added for Uppy Server.\\n\\n## Dashboard APIs\\n\\nWe\u2019ve exposed `show/hide/isOpen` APIs for the Dashboard UI plugin. Now you can\\nopen and close the modal dialog programmatically:\\n\\n```js\\nconst modal = uppy.getPlugin(\'Dashboard\');\\nmodal.show();\\n\\n// ...\\n\\nbutton.addEventListener(\'click\', () => {\\n\\tif (modal.isOpen()) {\\n\\t\\tmodal.hide();\\n\\t} else {\\n\\t\\tmodal.show();\\n\\t}\\n});\\n```\\n\\nCheck out [the docs](https://uppy.io/docs/dashboard/#Methods).\\n\\n\x3c!--truncate--\x3e\\n\\n## Transloadit\\n\\n- Possibility to upload to S3, then import into an assembly;\\n- New `alwaysRunAssembly` option has beed added to run assemblies when no files\\n  are uploaded.\\n\\n## Informer details\\n\\nInformer supports \u201cexplanations\u201d, a questionmark (?) button that shows more info\\non hover / click.\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.19/informer-details.jpg\\" />\\n\\n## Misc good stuff\\n\\n- Uppy instance ID, useful for GoldenRetriver, check out\\n  [example using multiple Uppy instances](https://github.com/transloadit/uppy/tree/master/examples/multiple-instances);\\n- Custom error messages from upload endpoints are now supported (#305);\\n- Fixed `calculateTotalProgress` and `restrictions`; improved `generateFileID`\\n  and `isOnline`;\\n- Removed some unused css styles from the bundle;\\n- Allow multiple `trigger` elements for the Dashboard, via using the same\\n  `class` attribute;\\n- Image previews are now resized gradually for better performance and quality;\\n- Metadata edits in the Dashboard are now saved when pressing enter key;\\n\\n## Full Changelog\\n\\nHere is the full list of changes for version `0.19` (and patch `0.18.1`):\\n\\n- core: gradually resize image previews (#275 / @goto-bus-stop)\\n- informer: support \u201cexplanations\u201d, a (?) button that shows more info on hover /\\n  click (#292 / @arturi)\\n- fix webcam video recording (@goto-bus-stop)\\n- bundle: add missing plugins (s3, statusbar, restorefiles) to unpkg bundle\\n  (#301 / @goto-bus-stop)\\n- xhrupload: Use error messages from the endpoint (#305 / @goto-bus-stop)\\n- dashboard: prevent submitting outer form when pressing enter key while editing\\n  metadata (#306 / @goto-bus-stop)\\n- dashboard: save metadata edits when pressing enter key (#308 / @arturi)\\n- transloadit: upload to S3, then import into :tl: assembly using\\n  `/add_file?s3url=${url}` (#280 / @goto-bus-stop)\\n- transloadit: add `alwaysRunAssembly` option to run assemblies when no files\\n  are uploaded (#290 / @goto-bus-stop)\\n- core: use `iteratePlugins` inside `updateAll` (#312 / @richardwillars)\\n- core: improve error when plugin does not have ID (#309 / @richardwillars)\\n- tus: Clear stored `uploadUrl` on `uppy.resetProgress()` call (#314 /\\n  @goto-bus-stop)\\n- website: simplify examples and code samples, prevent sidebar subheading links\\n  anywhere but in docs (@arturi)\\n- website: group plugin docs together in the sidebar (@arturi)\\n- goldenretriever: allow passing options to `IndexedDbStore` (#339 /\\n  sunil-shrestha)\\n- core: add Uppy instance ID option, namespace serviceWorker action types, add\\n  example using multiple Uppy instances with GoldenRetriever (#333 /\\n  @goto-bus-stop)\\n- core: fix `calculateTotalProgress` - NaN (#342 / @arturi)\\n- core: fix and refactor `restrictions` (#345 / @arturi)\\n- core: Better `generateFileID` (#330 / @arturi)\\n- core: improve `isOnline()` (#319 / @richardwillars)\\n- core: remove unused bootstrap styles (#329 / @arturi)\\n- core: experiment with yo-yo --\x3e preact and picodom (#297 / @arturi)\\n- dashboard: fix FileItem source icon position and copy (@arturi)\\n- dashboard: expose and document the `show/hide/isOpen` API (@arturi)\\n- dashboard: allow multiple `trigger` of the same class `.open-uppy` (#328 /\\n  @arturi)\\n- plugins: add `aria-hidden` to all SVG icons for accessibility\\n  (#4e808ca3d26f06499c58bb77abbf1c3c2b510b4d / @arturi)\\n- core: Handle sync returns and throws in possibly-async function options (#315\\n  / @goto-bus-stop)\\n- core: switch to Jest tests, add more tests for Core and Utils (#310 /\\n  @richardwillars)\\n- website: Minify bundle for `disc` (#332 / @goto-bus-stop)\\n- transloadit: remove `this.state` getter (#331 / @goto-bus-stop)\\n- server: option to define valid upload urls (@ifedapoolarewaju)\\n- server: more automated tests (@ifedapoolarewaju)\\n\\nThe Uppy Team"},{"id":"2017/08/0.18","metadata":{"permalink":"/blog/2017/08/0.18","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2017-08-0.18.md","source":"@site/blog/2017-08-0.18.md","title":"Uppy 0.18: Dogumentation and The GoldenRetriever","description":"Hi! Another month \u2014 a new Uppy release \ud83c\udf89","date":"2017-09-15T00:00:00.000Z","tags":[],"readingTime":4.78,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.18: Dogumentation and The GoldenRetriever","image":"http://uppy.io/img/blog/0.18/golden-retriever.jpg","date":"2017-09-15T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2017/08/0.18"},"unlisted":false,"prevItem":{"title":"Uppy 0.19: Tests, Informer details and better\xa0APIs","permalink":"/blog/2017/09/0.19"},"nextItem":{"title":"The Golden Retriever: Making uploads survive browser crashes","permalink":"/blog/2017/07/golden-retriever"}},"content":"Hi! Another month \u2014 a new Uppy release \ud83c\udf89\\n\\n_Note: current latest release is actually `0.19`, but this post got delayed, so\\nwe are publishing it first. `0.19` post is coming next._\\n\\n## New documentation\\n\\nDocumentation for Uppy has been re-written, and now features chapters on Uppy\u2019s\\nsettings and API, using various plugins, and running Uppy Server. Check it out:\\n<https://uppy.io/docs/>. More chapters to come!\\n\\n## The GoldenRetriever\\n\\nThe GoldenRetriever has been released as a public beta. For details, please\\nrefer to the previous post,\\n[The GoldenRetriever: Making uploads survive browser crashes](https://uppy.io/blog/2017/07/golden-retriever/),\\nbut the gist is: when enabled, this plugin will save uppy-state to localStorage\\non every change, and then if your browser crashes, or you accidentaly navigate\\naway from a tab,later when you return, your uploads will resume like nothing\\nhappened. Spoiler: it uses Service Workers and IndexedDB.\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.18/golden-retriever.jpg\\" />\\n\\n\x3c!--truncate--\x3e\\n\\n## Multipart uploader is now XHRUpload\\n\\n`Multipart` has been replaced by a more flexible `XHRUpload`, so that other\\nplugins, like `AwsS3`, can depend on it.\\n\\n## AwsS3\\n\\nThe `AwsS3` plugin can be used to upload files directly to an S3 bucket.\\n\\nAs of now, the AwsS3 plugin \u201cdecorates\u201d the `XHRUpload` plugin. To upload files\\ndirectly to S3, both the `XHRUpload` and `AwsS3` plugins must be used:\\n\\n```js\\n// No options have to be provided to the XHRUpload plugin,\\n// the S3 plugin will configure it.\\nuppy.use(XHRUpload);\\nuppy.use(AwsS3, {\\n\\t// Options for S3\\n});\\n```\\n\\nPlease find [more info and examples](https://uppy.io/docs/aws-s3/) in the docs.\\n\\n## Transloadit `getAssemblyOptions`\\n\\nWe\u2019ve added a `getAssemblyOptions` function option to the `Transloadit` plugin.\\nThis option can return an object or a Promise for an object to configure the\\nTransloadit assembly. The returned object can contain params, a signature, and\\nfields.\\n\\n`getAssemblyOptions` is called on each file, so each file can return a different\\nset of options. Files that returned the same options are bundled together and\\nrun through a single assembly. Files that return different options will be run\\nthrough different assemblies.\\n\\nThis means that it is now possible to make assembly parameters depend on user\\ninput from eg. the `MetaData` plugin, and have different parameters for\\ndifferent files. It\u2019s now also possible to generate very short-lived signatures\\non the server when an upload starts, by calling fetch inside the\\n`getAssemblyOptions` hook.\\n\\n## Webcam: 1, 2, 3 smile!\\n\\nWebcam plugin now has a new exciting feature \u2014 \u23f1 `countdown`. If you set it to\\n3 seconds, for example, then after pressing the capture button, Uppy will count\\nto 3 before actually taking your selfie, so you\u2019ll have the time to fix your\\nhair:\\n\\n```js\\nuppy.use(Webcam, { countdown: 3 });\\n```\\n\\n## Tons of Uppy Server improvements\\n\\n- Uppy Server uses Informer to display errors;\\n- Pictures from Instagram carousels show up inline;\\n- Uppy server now returns an `i-am` containing its instance url;\\n- Disable socket channel from restarting an already completed file download;\\n- Uppy client whitelisting has been made optional, you may use wildcard instead;\\n- Added feature to set master oauth redirect uri for multiple uppy-server\\n  instances;\\n- Added options to support for redis session storage on the standalone server;\\n- Uppy-server can be started as a binary `uppy-server`;\\n- Downloaded files are stored based on uuids;\\n- Upload state is stored on redis (useful for Goldern Retriever plugin).\\n\\n## Release Notes\\n\\nHere is the full list of changes for version `0.18`:\\n\\n- goldenretriver: use Service Woker first, then IndexedDB, add file limits for\\n  IndexedDB, figure out what restores from where, add throttling for\\n  localStorage state sync (@goto-bus-stop @arturi)\\n- dashboard: flag to hide the upload button, for cases when you want to manually\\n  stat the upload (@arturi)\\n- dashboard: place close btn inside the Dashboard, don\u2019t close on click outside,\\n  place source icon near the file size (@arturi)\\n- core: informer becomes a core API, `uppy.info(\'Smile! \ud83d\udcf8\', \'warning\', 5000)`\\n  so its more concise with `uppy.log(\'my msg\')` and supports different UI\\n  implementations (@arturi, #271)\\n- docs: first stage \u2014 on using plugins, all options, list of plugins, i18n,\\n  uppy-server (@arturi, @goto-bus-stop, @ifedapoolarewaju)\\n- provider: file size sorting (@ifedapoolarewaju)\\n- provider: show loading screen when checking auth too (@arturi)\\n- uploaders: add direct-to-s3 upload plugin (@goto-bus-stop)\\n- core: ability to re-upload all files, even `uploadComplete` ones, reset\\n  progress (@arturi)\\n- goldenretriver: recover selected or in progress files after a browser crash or\\n  closed tab: alpha-version, add LocalStorage, Service Worker and IndexedDB\\n  (@arturi @goto-bus-stop @nqst #268)\\n- xhrupload: add XHRUpload a more flexible successor to Multipart, so that S3\\n  plugin can depend on it (@goto-bus-stop #242)\\n- core: add getFile method (@goto-bus-stop, #263)\\n- provider: use informer to display errors (@ifedapoolarewaju)\\n- provider: flatten instagram carousels #234 (@ifedapoolarewaju)\\n- server: add uppy-server url as `i-am` header (@ifedapoolarewaju)\\n- server: disable socket channel from restarting an already completed file\\n  download (@ifedapoolarewaju)\\n- server: make uppy client whitelisting optional. You may use wildcard instead\\n  (@ifedapoolarewaju)\\n- server: master oauth redirect uri for multiple uppy-server instances\\n- server: options support for redis session storage on standalone server\\n  (@ifedapoolarewaju)\\n- server: start uppy-server as binary `uppy-server` (@ifedapoolarewaju)\\n- server: store downloaded files based on uuids (@ifedapoolarewaju)\\n- server: store upload state on redis (@ifedapoolarewaju)\\n- server: use uppy informer for server errors (@ifedapoolarewaju, #272)\\n- server: whitelist multiple uppy clients (@ifedapoolarewaju)\\n- transloadit: emit an event when an assembly is created (@goto-bus-stop / #244)\\n- transloadit: function option for file-dependent `params` (@goto-bus-stop /\\n  #250)\\n- tus: Save upload URL early on (@goto-bus-stop #261)\\n- tus: return immediately if no files are selected (@goto-bus-stop #245)\\n- uppy-server: add uppy-server metrics to Librato (@ifedapoolarewaju @kiloreux)\\n- webcam: add 1, 2, 3, smile! to webcam, onBeforeSnapshothook (@arturi, #187,\\n  #248)\\n- website: live example on the homepage, \u201ctry me\u201d button, improve /examples\\n  (@arturi)\\n\\nThe Uppy Team"},{"id":"2017/07/golden-retriever","metadata":{"permalink":"/blog/2017/07/golden-retriever","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2017-07-golden-retriever.md","source":"@site/blog/2017-07-golden-retriever.md","title":"The Golden Retriever: Making uploads survive browser crashes","description":"TL;DR: We\'re on a mission to improve file uploading on the web. We released","date":"2017-07-31T00:00:00.000Z","tags":[],"readingTime":6.98,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"The Golden Retriever: Making uploads survive browser crashes","date":"2017-07-31T00:00:00.000Z","authors":["arturi"],"image":"http://uppy.io/img/blog/golden-retriever/uppy-team-kong.jpg","published":true,"slug":"2017/07/golden-retriever"},"unlisted":false,"prevItem":{"title":"Uppy 0.18: Dogumentation and The GoldenRetriever","permalink":"/blog/2017/08/0.18"},"nextItem":{"title":"Uppy 0.17: Restrictions","permalink":"/blog/2017/05/0.17"}},"content":"**TL;DR:** We\'re on a mission to improve file uploading on the web. We released\\n[tus](https://tus.io): the open protocol for resumable file uploads, as well as\\nUppy: the next open source file uploader for web browsers. Uppy uses tus, which\\nmakes it resilient to poor network conditions and crashing servers. Today we\u2019re\\nlaunching an Uppy feature that also makes it resilient to browser crashes, which\\nwe believe is an industry first. We\u2019re sharing a quick\\n[demo](/blog/2017/07/golden-retriever/#demo) video, a bit of\\n[background](/blog/2017/07/golden-retriever/#uppy),\\n[how](/blog/2017/07/golden-retriever/#how) exactly we achieved this, and how you\\ncan [try](/blog/2017/07/golden-retriever/#try) it yourself.\\n\\n\\\\*\\\\*\\\\*\\n\\nDon\u2019t you just hate it when you\u2019re about to share the perfect photos from your\\ntrip to Iceland, and halfway through, your cat jumps on the keyboard and trashes\\nyour browser? Or the battery in your laptop dies? Or you accidentally close the\\ntab or navigate away? We hate that too!\\n\\nIf action games have had checkpoints since 1687 \u2014 why can\u2019t file uploaders?\\nWell, as it turns out, they can! We found a way to get those Iceland pics into\\nthe hands of your loved ones with near-zero levels of frustration, even after a\\ndreaded Blue Screen of Death! (if that is still a thing ;)\\n\\n\x3c!--truncate--\x3e\\n\\n<a name=\\"demo\\"></a>\\n\\n## Demo\\n\\nFirst off, let\u2019s show you a demo \ud83d\udcf9 of Uppy surviving a browser crash and\\npicking up right where we left it:\\n\\n<figure class=\\"wide\\"><video alt=\\"Demo video showing the Golden Retriever file restoring plugin in action\\" controls><source src=\\"/img/blog/golden-retriever/uppy-golden-retriever-crash-demo-2.mp4\\" type=\\"video/mp4\\" />Your browser does not support the video tag, you can <a href=\\"https://uppy.io/img/blog/golden-retriever/uppy-golden-retriever-crash-demo-2.mp4\\">download the video</a> to watch it.</video></figure>\\n\\n<a name=\\"uppy\\"></a>\\n\\n## Uppy?\\n\\nFor those of you who are new here, Uppy is the next-gen open source file\\nuploader for the web. It is made by Transloadit and thus it works great with\\ntheir uploading & encoding platform \u2014 but it also works great without! Simply\\nadd Uppy JavaScript to your website, deploy your own tusd/Node.js/Apache/Nginx\\nserver, and be on your way. Add\\n[uppy-server](https://github.com/transloadit/uppy-server), and your users will\\nbe able to pick files from remote sources like Dropbox and Instagram. Uppy\u2019s\\nfocus is on the modern web, and we go through extreme lengths to achieve the\\nsmoothest of user experiences, and the most durable of reliabilities. \ud83d\ude43\\n\\n## Hacking trip\\n\\nOur core team is spread across three continents and five cities, and most of us\\nhave never met in person, with the majority of communication happening in GitHub\\nand Slack. Just last week, we got together in Berlin for a crazy week of pink\\nlimo rides, Indian food and Mario Kart 64. More on that on the\\n[Transloadit blog](https://transloadit.com/blog/2017/08/team-meetup-2017/).\\n\\n<figure class=\\"wide\\">\\n  <img src=\\"/img/blog/golden-retriever/uppy-team-kong.jpg\\" />\\n</figure>\\n\\nWhile enjoying some world-famous-in-Germany \u201cFlammkuchen\u201d, we were thinking\\nabout even more ways to make file uploading better (yes, we really can\u2019t stop\\nthinking about that). We then sat together in one room for a few days of hacking\\nand came up with something neat.\\n\\n## The Golden Retriever\\n\\nUppy has a new friend to play with. Meet the Golden Retriever, our file recovery\\nplugin:\\n\\n<center><img src=\\"/img/blog/golden-retriever/catch-fail-2.gif\\" alt=\\"Golden Retriever failing to catch something\\" title=\\"Good try, girl!\\" /></center>\\n\\nAs you can see, we\u2019re not yet fully done with training her, but we\u2019re getting\\nthere! \ud83d\ude04\\n\\nBut wait, we can hear you think, didn\'t [tus.io](https://tus.io) already make\\nresumable uploads possible? Yes indeed, and it does an awesome job at recovering\\nfrom poor network conditions. However, if your browser suddenly decided to\\ncrash, Uppy would have no idea about what it was doing before, and you would\\nhave to re-select and edit your files all over.\\n\\n<center><img src=\\"/img/blog/golden-retriever/no-idea-dog-3.gif\\" alt=\\"Dog has no idea what he is doing\\" title=\\"Keep trying, buddy!\\" /></center>\\n\\nFor those cases, our Golden Retriever now comes to the rescue! It saves Uppy\u2019s\\nmemory (state) in browser cache with every move you make. This means that when\\nUppy suddenly crashes for whatever reason, our plugin will be able to retrieve\\nthis memory upon restart, and offer to resume where you left off. Sounds simple\\nenough right? So why hasn\'t anybody attempted this before?\\n\\nAs it turns out, it\u2019s tricky. For one thing, no other competing file uploader\\nuses tus, and resuming uploads without standardized and scrutinized components\\nis really leaving you with more problems than you\u2019re trying to solve in the\\nfirst place. But with tus, we are standing on the shoulders of a giant and need\\nnot worry about the resumability aspect of the transmission.\\n\\nSo then it becomes all about remembering what was going on with file selection\\nand uploading right before the crash. One of the big issues here is that because\\nof security reasons, Uppy is no longer allowed to access the selected files on\\nyour disk after a crash. Reasonable of course, but this meant that we had to\\ndeploy a number of workarounds that \u2014 while it may cause our inner purist some\\nupset - combined, now amount to a pretty sweet user experience for the majority\\nof cases. And in the end, that is what Uppy is all about: pleasing and\\ndelighting its users.\\n\\n<a name=\\"how\\"></a>\\n\\n## \ud83d\udc7b How it works\\n\\nIf you really want to know...\\n\\nBecause we cannot access the files that we were uploading from disk, we cache\\nthem inside the browser.\\n\\nIt all started with\\n[a prototype](https://github.com/transloadit/uppy/issues/237) by\\n[Richard Willars](https://github.com/richardwillars), which used a Service\\nWorker to store files and states. Service Workers are great for when you close a\\ntab, but when the browser dies, so does the Service Worker (in most cases).\\nAlso: iOS does not support it yet. So, we looked at Local Storage, which is\\nalmost universally available and _can_ survive a browser crash, but can\'t be\\nused to store blobs. We also considered IndexedDB, which _can_ store blobs, but\\nis less available and has severe limits on how much you can or should store in\\nit.\\n\\nSince all of these technologies came with specific drawbacks, which one should\\nwe pick?\\n\\nWhy, all of them, of course! By combining the three, they cover each other\u2019s\\ndisadvantages with their own advantages. Here\'s what goes where:\\n\\n- Local Storage stores all files state, without blobs (the actual data of the\\n  file), and restores this meta information on boot.\\n- Service Worker stores references to all file blobs in memory. This should\\n  persist when navigating away from a page or closing the browser tab, but will\\n  likely get destroyed after a browser crash / quit.\\n- IndexedDB stores all files that can reasonably be stored there, up to 10 MB\\n  per file and 300 MB in total (we are still debating reasonable limits). This\\n  persists until either the browser or Uppy decides to do a cleanup.\\n\\nNow when Uppy starts, we restore all meta information from Local Storage to get\\nan idea of what was going on. For the blobs, we try to recover data from both\\nthe Service Worker and IndexedDB. This goes a long way into supporting many\\ndisastrous scenarios out there.\\n\\nIn some cases (very large files or a complete browser crash), we won\u2019t be able\\nto recover the file, but we do have valuable information about it, such as the\\nname and a preview.\\n\\nOur current idea is that we could present the user with \u201cghost files\u201d for these\\nedge cases, and ask them to re-add such files. Here\u2019s an early mockup, but we\\nwould love more feedback on this:\\n\\n<img src=\\"/img/blog/golden-retriever/desktop-ghost.png\\" alt=\\"Design mockup with ghosts\\" title=\\"Design mockup with ghosts\\" />\\n\\nFor the remaining cases, if an upload was already in progress before the\\ncrash/refresh, and especially if it was resumable (via [tus](https://tus.io),\\nfor example), Golden Retriever just picks up from where it all went south. Our\\nGolden Retriever will also clean up after herself: when files are successfully\\nuploaded, or you decide to delete them, they will be removed from all\\n\u201cpermanent\u201d storages.\\n\\n<a name=\\"try\\"></a>\\n\\n## \ud83d\udea6 Give it a try in alpha\\n\\nGolden Retriever already works \u2014 tail awagging \u2014 and feels like magic\\n:sparkles:, but it is also unstable, and hasn\u2019t been tested on all the different\\ndevices yet. We encourage you to try it out though:\\n\\n```sh\\ngit clone https://github.com/transloadit/uppy.git\\ngit checkout feature/restore-files\\nnpm install\\nnpm run dev\\n```\\n\\nA new browser tab with Uppy + Golden Retriever should open in a moment after the\\nlast command from above. The app entry point is in\\n`examples/bundled-example/main.js`, it rebuilds on change. Enjoy! And please\\ngive your feedback in the [#268](https://github.com/transloadit/uppy/pull/268)\\nPR \ud83c\udf89\\n\\nThe Uppy Team"},{"id":"2017/05/0.17","metadata":{"permalink":"/blog/2017/05/0.17","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2017-05-0.17.md","source":"@site/blog/2017-05-0.17.md","title":"Uppy 0.17: Restrictions","description":"Hi! We are back with yet another Uppy release that contains some often requested","date":"2017-07-11T00:00:00.000Z","tags":[],"readingTime":5.825,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.17: Restrictions","date":"2017-07-11T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2017/05/0.17"},"unlisted":false,"prevItem":{"title":"The Golden Retriever: Making uploads survive browser crashes","permalink":"/blog/2017/07/golden-retriever"},"nextItem":{"title":"Uppy 0.16: Transloadit!","permalink":"/blog/2017/05/0.16"}},"content":"Hi! We are back with yet another Uppy release that contains some often requested\\nfeatures such as file restrictions and better file type detection, alongside a\\nbrand new Instagram plugin, UI improvements and more!\\n\\n\x3c!--truncate--\x3e\\n\\n## \u26a0\ufe0f File Restrictions\\n\\nSomething that a few of our biggest fans were asking for, is finally here!\\nHere\'s the gist of it:\\n\\n```js\\nUppy({\\n\\tdebug: true,\\n\\tautoProceed: false,\\n\\trestrictions: {\\n\\t\\tmaxFileSize: 300000,\\n\\t\\tmaxNumberOfFiles: 5,\\n\\t\\tminNumberOfFiles: 2,\\n\\t\\tallowedFileTypes: [\'image/*\', \'video/*\'],\\n\\t},\\n\\tonBeforeFileAdded: (currentFile, files) => {\\n\\t\\tif (currentFile.name === \'my-file.jpg\') {\\n\\t\\t\\treturn Promise.resolve();\\n\\t\\t}\\n\\t\\treturn Promise.reject(\'This is not the file I was looking for\');\\n\\t},\\n\\tonBeforeUpload: (files) => {\\n\\t\\tif (Object.keys(files).length < 2) {\\n\\t\\t\\treturn Promise.reject(\'Too few files :(\');\\n\\t\\t}\\n\\t\\treturn Promise.resolve();\\n\\t},\\n});\\n```\\n\\nBasically, there are two ways to set restrictions:\\n\\n1\\\\. Using the `restrictions` object in Uppy\'s core settings:\\n\\n```js\\nrestrictions: {\\n  maxFileSize: 300000,\\n  maxNumberOfFiles: 5,\\n  minNumberOfFiles: 2,\\n  allowedFileTypes: [\'image/*\', \'video/*\']\\n}\\n```\\n\\nTranslation: allow only images and videos of any type, a minimum of 2 and\\nmaximum of 5 files must be selected, 300kb or less.\\n\\n`allowedFileTypes` must be an array of strings with supported file mime-types.\\nAnything from\\n[this list](https://www.iana.org/assignments/media-types/media-types.xhtml)\\nshould work, as long as Uppy is able to detect it (and Uppy promises to try real\\nhard, see below for details). Both wildcards `video/*` and specicifc types\\n`image/jpeg` are supported!\\n\\n2\\\\. Using the more advanced callbacks: `onBeforeFileAdded(currentFile, files)`,\\nwhich fires before a file is added and allows you to run whatever checks you\\nwish against either the single file that is about to be added or all files\\ncurrently selected / uploaded, and `onBeforeUpload(files)`, where you are able\\nto check stuff before proceeding with the upload.\\n\\nBasically, use the first option for the simple stuff such as limiting uploads to\\nimages or a maximum of three files. Use the second option for things like \u201cwe\\nneed users to upload 5 photos and an audio file, so we can make a short clip out\\nof it\u201d. Let us know if this suits your needs, we are all \ud83d\udc42ears\ud83d\udc42!\\n\\nAlso, a new `note` option has been added to the Dashboard, as a quick and easy\\nway to inform users about the restrictions you choose to set up:\\n\\n```js\\nuppy.use(Dashboard, {\\n\\tnote: \'Images and video only, 300kb or less\',\\n});\\n```\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.17/restrictions-note.jpg\\" />\\n\\n## \ud83d\udcf8 Instagram plugin and UI overhaul\\n\\nYes, Instagram is now supported in Uppy, so you can easily import all of your\\ncat, dog and food pictures!\\n\\n<figure class=\\"wide\\">\\n  <img className=\\"border\\" src=\\"/img/blog/0.17/instagram-ui.jpg\\" />\\n</figure>\\n\\nYou can try it live in the\\n[Dashboard example](https://uppy.io/examples/dashboard/).\\n\\nThe UI for all \u201cprovider\u201d plugins, which is the way we call Google Drive,\\nDropbox and other external services, have been revamped to make better use of\\nthe space.\\n\\nFiles are now selected, or added, on click/tap, rather than double click, which\\nis easier and also works on mobile. \ud83d\ude40\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.17/provider-search.jpg\\" />\\n\\n## StatusBar\\n\\nThe Dashboard\u2019s StatusBar has been improved. First of all, even though it still\\ncomes bundled with the Dashboard like before, it is now a separate plugin that\\ncan be used anywhere, like with the Drag and Drop plugin or your own custom\\nthing. Furthermore, it now shows fatal upload errors in addition to the upload /\\nprocessing / transcoding progress. \ud83d\udcaa\\n\\nIn the Dashboard, you can now disable the StatusBar and/or Informer if you don\u2019t\\nneed them or want something custom, by setting `disableStatusBar: true` and\\n`disableInformer: true`.\\n\\nDetails: [#217](https://github.com/transloadit/uppy/pull/217)\\n\\n## Better file type detection\\n\\nWe\u2019ve added a [`file-type`](https://github.com/sindresorhus/file-type) module\\nthat helps with figuring out the file type by reading the first magic bytes of\\nthe file. If that doesn\u2019t work, we try to use the mime-type provided by the\\nsystem/browser, and if that is still a dead end, we attempt to figure it out by\\nextension. All in all, this leads to a more robust file type detecting\\nexperience. Personally, I\u2019m just happy my Sex and the City \ud83c\udf78 `.avi` files are\\nnow recognized as `video` on a Mac!\\n\\nFurther details can be found here:\\n[#219](https://github.com/transloadit/uppy/pull/219)\\n\\n## Extracting metadata from `<form>` inputs\\n\\nIf a plugin\u2019s `target` is a `form` element, we are going to try to extract all\\nthe data from that form\u2019s inputs and add it as `meta` to Uppy\u2019s state. That\\n`meta` is then merged with file\u2019s meta when it is being added.\\n\\nUppy\u2019s core options have received a new `meta` property, where you can define\\nsome metadata from the start, as well as a new `setMeta` method that can be\\ncalled at any time.\\n\\nSee here for more details: [#238](https://github.com/transloadit/uppy/pull/238)\\n\\n## More\\n\\n- Added a `reset()` method that stops uploads, clears files and totalProgress,\\n  and restores things to the way they were on initialization, before user\\n  interactions [#226](https://github.com/transloadit/uppy/pull/226)\\n- Support for headers in Multipart plugin\\n  [#224](https://github.com/transloadit/uppy/pull/224)\\n- Set bytesUploaded/bytesTotal as soon as the file is added, fixes a `NaN` issue\\n  [#232](https://github.com/transloadit/uppy/pull/232)\\n\\n## Release Notes\\n\\nHere is the full list of changes for version 0.17:\\n\\n- core: added restrictions \u2014 by file type, size, number of files (@arturi)\\n- provider: improved UI: improve overall look, breadcrumbs, more responsive\\n  (@arturi)\\n- core: css-in-js demos, try template-css (@arturi @goto-bus-stop #239)\\n- core: added `uppy.reset()` as discussed in #179 (@arturi)\\n- core: added nanoraf\\n  <https://github.com/yoshuawuyts/choo/pull/135/files?diff=unified>\\n  (@goto-bus-stop, @arturi)\\n- core: file type detection: archives, markdown (possible modules: file-type,\\n  identify-filetype) example:\\n  <http://requirebin.com/?gist=f9bea9602030f1320a227cf7f140c45f>,\\n  <http://stackoverflow.com/a/29672957> (@arturi)\\n- dashboard: made file icons prettier:\\n  <https://uppy.io/img/blog/0.16/service-logos.png> (@arturi, @nqst / #215)\\n- fileinput: allow retrieving fields/options from form (@arturi #153)\\n- server: configurable server port (@ifedapoolarewaju)\\n- server: added support for custom providers (@ifedapoolarewaju)\\n- statusbar: also show major errors, add \u201cerror\u201d state (@goto-bus-stop)\\n- statusbar: pre/postprocessing status updates in the StatusBar (@goto-bus-stop,\\n  #202)\\n- statusbar: show status \u201cUpload started...\u201d when the remote upload has begun,\\n  but no progress events received yet (@arturi)\\n- statusbar: work towards extracting StatusBar to a separate plugin, still\\n  bundle it with Dashboard (@goto-bus-stop, @arturi)\\n- tus/uppy-server: support metadata in remote tus uploads (@ifedapoolarewaju,\\n  @goto-bus-stop / #210)\\n- uploaders: added direct-to-s3 upload plugin and test it with the flow to then\\n  upload to transloadit, stage 1, WIP (@goto-bus-stop)\\n- uppy/uppy-server: Made a barely working Instagram Plugin (@ifedapoolarewaju /\\n  #21)\\n- uppy/uppy-server: allow google drive/dropbox non-tus (i.e multipart) remote\\n  uploads (@arturi, @ifedapoolarewaju / #205)\\n- uppy/uppy-server: do not show files that cannot be downloaded from Google\\n  Drive (@ifedapoolarewaju)\\n- uppy: fixed Google Drive uploads on mobile (double click issue) (@arturi)\\n- core: updated prettier-bytes to fix the IE support issue\\n  <https://github.com/Flet/prettier-bytes/issues/3> (@arturi)\\n- core: use URL.createObjectURL instead of resizing thumbnails (@arturi,\\n  @goto-bus-stop / #199)\\n- dashboard: fixed ETA when multiple files are being uploaded (@goto-bus-stop,\\n  #197)\\n- transloadit: fixed receiving assembly results that are not related to an input\\n  file (@arturi, @goto-bus-stop / #201)\\n- transloadit: use the `tus_upload_url` to reliably link assembly results with\\n  their input files (@goto-bus-stop / #207)\\n- transloadit: moved user-facing strings into locale option (@goto-bus-stop /\\n  <https://github.com/transloadit/uppy/commit/87a22e7ee37b6fa3754fa34868516a6700306b60>)\\n- webcam: mute audio in realtime playback (@goto-bus-stop / #196)\\n- temporarily downgrade yo-yoify, until shama/yo-yoify#45 is resolved (@arturi /\\n  <https://github.com/transloadit/uppy/commit/6292b96>)\\n\\nEnjoy!\\n\\nThe Uppy Team"},{"id":"2017/05/0.16","metadata":{"permalink":"/blog/2017/05/0.16","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2017-05-0.16.md","source":"@site/blog/2017-05-0.16.md","title":"Uppy 0.16: Transloadit!","description":"Hello there! Missed us much? :) We\'re chomping at the bits, at least, to tell","date":"2017-05-24T00:00:00.000Z","tags":[],"readingTime":4.63,"hasTruncateMarker":true,"authors":[{"name":"ife"}],"frontMatter":{"title":"Uppy 0.16: Transloadit!","date":"2017-05-24T00:00:00.000Z","author":"ife","slug":"2017/05/0.16"},"unlisted":false,"prevItem":{"title":"Uppy 0.17: Restrictions","permalink":"/blog/2017/05/0.17"},"nextItem":{"title":"Uppy 0.15: Spring cleanup","permalink":"/blog/2017/03/0.15"}},"content":"Hello there! Missed us much? :) We\'re chomping at the bits, at least, to tell\\nyou about our latest release. This one has been in the works longer than usual,\\nbut then again, it\'s also way cooler than usual, so let\'s get right to it.\\n\\n\x3c!--truncate--\x3e\\n\\n## Transloadit integration beta\\n\\nYes, you read that right! We now have an easily integrable\\n[Transloadit](https://transloadit.com) plugin. It was a big push indeed and we\\nowe a big debt of thanks to [Ren\xe9e](https://github.com/goto-bus-stop) for going\\nfully beast mode on this. The plugin is still in beta, but it works - and it\'s\\nawesome. That said, of course it is entirely optional: if you don\'t use\\nTransloadit, you don\'t have to bundle the plugin.\\n\\n<video alt=\\"Demo video showing the Transloadit upload plugin in action.\\" muted autoplay loop>\\n  <source src=\\"/img/blog/0.16/transloadit.webm\\" type=\\"video/webm\\" />\\n  <source src=\\"/img/blog/0.16/transloadit.mp4\\" type=\\"video/mp4\\" />\\n</video>\\n\\nThe Transloadit plugin for Uppy handles creating an \\"Assembly\\" (a file\\nconversion job) before uploading files, and can optionally wait for file\\nconversions to complete before showing the uploads as successful, as shown\\nabove. Listen for the `core:success` event to respond to upload completion, just\\nlike you would without the Transloadit plugin.\\n\\nWe\'ll be adding decent documentation to the Uppy website soon, but\\n[here](https://gist.github.com/kvz/8ae07aa8c063c8e55abbc1580b50c8a4#file-uppy-demo-js-L117-L147)\\nis a quick code sample of how a Transloadit plugin integration would look like\\nalready.\\n\\n## More work on high-level React components\\n\\nSince the last release, we\'ve been exploring possibilities for an official set\\nof React components. Initially, we\'ll be providing component wrappers for the\\nexisting Uppy UI plugins, such as the [Dashboard](/examples/dashboard) and\\n[DragDrop](/examples/dragdrop) plugins. They aren\'t ready yet, but if you\'d like\\nto follow along with development, check out the work that has been done so far\\nin pull request [#170](https://github.com/transloadit/uppy/pull/170)!\\n\\n## DOM element in `target:` option, `uppy.close()` for tearing down an Uppy instance\\n\\nWhile laying the groundwork for the React component integrations, Uppy has also\\nbecome a bit friendlier towards being integrated with other frameworks and in\\nsingle-page apps. The `target:` option in each plugin used to work only with CSS\\nselectors, which was difficult to use if the plugin should be mounted on a\\ndynamically generated element. In 0.16, either a query selector or an actual DOM\\nelement can be passed in.\\n\\nThe new `.close()` method on the Uppy instance cleans up all of Uppy\'s event\\nhandlers and DOM elements. Useful when navigating away from a page with an Uppy\\nuploader in a single-page app, or when unmounting a React component that\\ncontains an Uppy instance!\\n\\n## Server time!\\n\\nWe got everything covered - front-to-back-end - so you can be sure we also got\\nsome things going on the server side.\\n\\n- parallelizing downloading/uploading remote files: start uploading chunks right\\n  away, while still downloading the file on disk. Even though the server may\\n  download files relatively faster, it is good to know that you don\'t have to\\n  wait out the download before the upload begins.\\n- Image thumbnails are now also shown for remote files.\\n- Automated tests have been added using the test library,\\n  [jest](https://facebook.github.io/jest/).\\n- Remote files are now deleted from local disk immediately after a successful\\n  upload.\\n\\n## And\\n\\nMultiple necessary chores (the kind you don\u2019t like to talk about at parties),\\nsuch as:\\n\\n- Replacing `babel-preset-es2015-loose` by the standard es2015 preset with\\n  `loose` option\\n- Merging the Tus10 plugin options with `tus-js-client` options\\n- We reviewed the uppy-server README to be more elaborate when getting started.\\n- The Service logo is now visible on the corresponding file in the Dashboard.\\n  For example if a file is being uploaded from Google Drive you would see a\\n  Google Drive logo easily identifying where the file is from. Take a look!\\n\\n<img src=\\"/img/blog/0.16/service-logos.png\\" />\\n\\n## Release Notes\\n\\nHere is the full list of changes for version 0.16:\\n\\n- uploaders: make sure uploads retry/resume if started when offline or\\n  disconnected, retry when back online / failed\\n  <https://github.com/transloadit/uppy/pull/135> (@arturi, @ifedapoolarewaju)\\n- transloadit: add basic (beta) version of Transloadit plugin (@goto-bus-stop,\\n  @kvz, @tim-kos / #28)\\n- transloadit: emit an upload event w/ tl data when a file upload is complete\\n  (#191 @goto-bus-stop)\\n- webcam: implement reading audio+video from webcam (@goto-bus-stop / #175)\\n- webcam: Make the webcam video fill the available space as much as possible\\n  (@goto-bus-stop / #190)\\n- tus: Merge tus-js-client options with uppy-tus. Hence, enable custom headers\\n  support (@goto-bus-stop)\\n- multipart/tus: Remove Promise.all() calls with unused results (@goto-bus-stop\\n  / #121)\\n- dashboard: fix Dashboard modal close button position (@goto-bus-stop / #171)\\n- core: pass through errors (@goto-bus-stop / #185)\\n- core: accept a DOM element in `target:` option (@goto-bus-stop / #169)\\n- core: Remove the last few potentially buggy uses of `document.querySelector`\\n  (@goto-bus-stop)\\n- dashboard: Fix dashboard width when multiple instances exist (@goto-bus-stop /\\n  #184)\\n- dashboard: add service logo / name to the selected file in file list (@arturi)\\n- server: begin adding automated tests, maybe try\\n  <https://facebook.github.io/jest> (@ifedapoolarewaju)\\n- server: add image preview / thumbnail for remote files, if its in the API of\\n  services (@ifedapoolarewaju)\\n- server: research parallelizing downloading/uploading remote files: start\\n  uploading chunks right away, while still storing the file on disk\\n  (@ifedapoolarewaju)\\n- server: delete file from local disk after upload is successful\\n  (@ifedapoolarewaju)\\n- website: try on a Github ribbon <http://tholman.com/github-corners/> (@arturi\\n  / #150)\\n- website: different meta description for pages and post (@arturi)\\n- server: well-documented README (@ifedapoolarewaju)\\n- react: \\\\[WIP] High-level React Components (@goto-bus-stop / #170)\\n- core: add `uppy.close()` for tearing down an Uppy instance (@goto-bus-stop /\\n  #182)\\n- core: replace `babel-preset-es2015-loose` by standard es2015 preset with\\n  `loose` option (@goto-bus-stop / #174)\\n\\nEnjoy!\\n\\nThe Uppy Team"},{"id":"2017/03/0.15","metadata":{"permalink":"/blog/2017/03/0.15","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2017-03-0.15.md","source":"@site/blog/2017-03-0.15.md","title":"Uppy 0.15: Spring cleanup","description":"Spring is in the air and Uppy is feeling particularly full of life. In this post","date":"2017-03-15T00:00:00.000Z","tags":[],"readingTime":4.19,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.15: Spring cleanup","date":"2017-03-15T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2017/03/0.15"},"unlisted":false,"prevItem":{"title":"Uppy 0.16: Transloadit!","permalink":"/blog/2017/05/0.16"},"nextItem":{"title":"Uppy 0.14: Responsive Dashboard, Standalone & Pluggable Server, Dropbox","permalink":"/blog/2017/02/0.14"}},"content":"Spring is in the air and Uppy is feeling particularly full of life. In this post\\nabout Uppy 0.15, we have some exciting stories about `babel-plugin-yo-yoify`,\\nprogress event throttling, and new friends.\\n\\n\x3c!--truncate--\x3e\\n\\n## Yo-yoify for NPM-installed Uppy\\n\\nIn [`0.14`](https://uppy.io/blog/2017/02/0.14/), we added `yo-yoify` transform\\nto give Uppy some extra speed and eliminate `Function.caller` issues. As it\\nturned out, we [forgot](https://github.com/transloadit/uppy/issues/158) about\\nour Babel-transpiled `lib` version of Uppy that gets published to NPM \ud83d\ude40. We\\nthen spent some time creating a standalone version of `yo-yoify` that would be\\nable to parse `yo-yo` template strings before Babel-transpilation, only to\\ndiscover that there already is a\\n[`babel-plugin-yo-yoify`](https://www.npmjs.com/package/babel-plugin-yo-yoify)\\nthat not only does precisely that, but also frees us from jumping through a lot\\nof unnecessary hoops. It did\\n[have](https://github.com/goto-bus-stop/babel-plugin-yo-yoify/issues/9)\\n[a few](https://github.com/goto-bus-stop/babel-plugin-yo-yoify/pull/8)\\n[issues](https://github.com/goto-bus-stop/babel-plugin-yo-yoify/issues/11) at\\nfirst, but luckily our friend [Ren\xe9e](https://github.com/goto-bus-stop) was\\navailable to colaborate with us on this. Ren\xe9e has also agreed to join Uppy for\\na while to help us with other pressing issues. So, silver linings \u2014 bugs can\\nsometimes lead to new friends and wonderful beginnings. We are very excited\\nabout what this all means for Uppy in the months to come.\\n\\nUppy from NPM is now good to go and the issue has been completely resolved. You\\ncan update at: <https://www.npmjs.com/package/uppy>. And yeah, if you use\\n`yo-yo`, give\\n[`babel-plugin-yo-yoify`](https://www.npmjs.com/package/babel-plugin-yo-yoify) a\\ntry.\\n\\n## Pause & Resume Remote Uploads\\n\\nJust like with \u201clocal\u201d uploads, Uppy can now pause and resume remote uploads\\nfrom Google Drive or Dropbox (handled on the backend by `uppy-server` + `tus`).\\n\ud83c\udf89\\n\\n## Progress Throttling\\n\\nWhile working on pausing remote uploads with `uppy-server`, Ife discovered a\\nstrange bug: uppy-client would hang during the upload, after which the progress\\nwould immediately jump to 100%. After some solid Sherlock Holmesing, we found\\nwhat was causing it: uploads were happening too fast. This was leading to\\nprogress events being sent very, very often (like 300 / second), which trashed\\nthe interface rendering loop. We have solved this by\\n[adding throttling in tus-js-client](https://github.com/tus/tus-js-client/commit/9940f27b2361fd7e10ba58b09b60d82422183bbb)\\n(thanks Marius!) and\\n[uppy-server](https://github.com/transloadit/uppy-server/commit/936ad48e92631c45d123664900b9aabcf7a190fa)\\n(thanks Ife!). I would also very much like to take this opportunity to thank\\nmyself for\\n[fixing](https://github.com/transloadit/uppy/commit/1d5f4404546420442deabc94df84bd3ec0677eec)\\n[it](https://github.com/transloadit/uppy/commit/db32c6f4fd85420532f27f04920dbaf6d126ea9b)\\nin uppy-client too! :innocent:\\n\\nTo prevent \u201cjumping\u201d progress, numbers and text in StatusBar are now only\\nupdated once a second. Plus, we have switched to\\n[`prettier-bytes`](https://www.npmjs.com/package/prettier-bytes), which adds\\nsome nice number rounding. Smooth as butter!\\n\\nTL;DR Uppy was simply too fast at uploading, so we had to shorten the leash a\\nbit!\\n\\n## Informer coming at you in full-color mode\\n\\nInformer will now be able to change the way it looks depending on the `type`\\nargument:\\n\\n```js\\n// (`\'informer\'`, `text`, `type`, `duration`)\\nuppy.emit(\'informer\', \'Connected!\', \'success\', 3000);\\n```\\n\\n<img src=\\"/img/blog/0.15/informer.png\\" />\\n\\nThis supports the following `type`s: `info`, `warning`, `error`, `success`, all\\nwith their own colors!\\n\\n## Some other things\\n\\n- Multipart now treats all 2xx responses as successful and returns xhr object in\\n  `core:upload-success` event callback.\\n- That progress circle that you can see on each file in Dashboard has been\\n  improved on the inside: precise `circleLength` and\\n  `stroke-dasharray/stroke-dashoffset` calculation.\\n- Uppy-server returns uploaded file urls and sizes for remote uploads (from\\n  Google Drive & Dropbox).\\n- Provider plugins now have a loading screen, error screen and logout link.\\n  Breadcrumbs are also working again.\\n\\n## Release Notes\\n\\nHere is the full list of changes for version 0.15:\\n\\n- build: update dependencies and eslint-plugin-standard, nodemon --\x3e onchange,\\n  because simpler and better options (@arturi)\\n- build: fix `Function.caller` issue in `lib` which gets published to NPM\\n  package, add babel-plugin-yo-yoify (@arturi #158 #163)\\n- provider: show error view for things like not being able to connect to uppy\\n  server, should this be happening when uppy-server is unavailable\\n  <http://i.imgur.com/cYJakc9.png> (@arturi, @ifedapoolarewaju)\\n- provider: loading indicator while files from GoogleDrive / Dropbox are loading\\n  (@arturi, @ifedapoolarewaju)\\n- provider: logout link/button (@arturi, @ifedapoolarewaju)\\n- provider: fix breadcrumbs (@ifedapoolarewaju)\\n- server: refactor local/remote uploads in tus, allow for pause/resume with\\n  remote upload (@arturi, @ifedapoolarewaju)\\n- server: throttle progress updates sent through websockets, sometimes it can be\\n  overwhelming when uploads are getting this fast (@ifedapoolarewaju)\\n- server: pass file size from Google Drive / Dropbox (@ifedapoolarewaju)\\n- server: return uploaded file urls (from Google Drive / Dropbox)\\n  (@ifedapoolarewaju)\\n- server: research having less permissions, smaller auth expiration time for\\n  security (@ifedapoolarewaju)\\n- dashboard: basic React component (@arturi)\\n- core: experiment with `nanoraf` and `requestAnimationFrame` (@arturi)\\n- core: add throttling of progress updates (@arturi)\\n- dashobard: fix Missing `file.progress.bytesTotal` property (@arturi #152)\\n- dashboard: switch to prettier-bytes for more user-friendly progress updates\\n  (@arturi)\\n- dashboard: fix `updateDashboardElWidth()` not firing in time, causing\\n  container width to be 0 (@arturi)\\n- multipart: treat all 2xx responses as successful, return xhr object in\\n  `core:upload-success` (@arturi #156 #154)\\n- dashboard: throttle StatusBar numbers, so they update only once a second\\n  (@arturi, @acconut)\\n- dashboard: add titles to pause/resume/cancel in StatusBar (@arturi)\\n- dashboard: precise `circleLength` and `stroke-dasharray/stroke-dashoffset`\\n  calculation for progress circles on FileItem (@arturi)\\n- dashboard: don\u2019t show per-file detailed progress by default \u2014 too much noise\\n  (@arturi)\\n- website: blog post and images cleanup (@arturi)\\n\\nEnjoy!\\n\\nThe Uppy Team"},{"id":"2017/02/0.14","metadata":{"permalink":"/blog/2017/02/0.14","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2017-02-0.14.md","source":"@site/blog/2017-02-0.14.md","title":"Uppy 0.14: Responsive Dashboard, Standalone & Pluggable Server, Dropbox","description":"Hi! Hope y\u2019all have had great holidays! \ud83c\udf84 Which reminds us, we still have a","date":"2017-02-13T00:00:00.000Z","tags":[],"readingTime":5.495,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.14: Responsive Dashboard, Standalone & Pluggable Server, Dropbox","date":"2017-02-13T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2017/02/0.14"},"unlisted":false,"prevItem":{"title":"Uppy 0.15: Spring cleanup","permalink":"/blog/2017/03/0.15"},"nextItem":{"title":"Uppy 0.12: Responsive. Cancel. Feedback. Refreshed\xa0ES6 server","permalink":"/blog/2016/12/0.12"}},"content":"Hi! Hope y\u2019all have had great holidays! \ud83c\udf84 Which reminds us, we still have a\\ngift for you \u2014 and we even wrapped it in a package (npm). Look inside and you\u2019ll\\nfind that Uppy 0.14!\\n\\n\u201cBut wait\u201d, you might ask, \u201cwhere is the 0.13 release that we have been waiting\\nfor?\u201d\\n\\nWell, let\u2019s just say we are superstitious like that. You won\u2019t see us coding\\nunder any ladders either! And we were also in the middle of the holiday season,\\nso we decided to call 0.13 \u201cThe Release That Wasn\u2019t\u201d and skip it.\\n\\nLet\u2019s take a look at what Uppy 0.14 has in store for you.\\n\\n\x3c!--truncate--\x3e\\n\\n## Major Uppy Server Updates\\n\\n**Express.js** We\u2019ve switched to Express from Koa. It\u2019s more widely adopted and\\nsupported, has larger community and better maintained packages, so we went for\\nit.\\n\\n**Pluggable or standalone** Uppy Server can now be plugged into your existing\\nExpress/Koa server app, but you can also still run it as a standalone server.\\n[See here](https://github.com/transloadit/uppy-server#run-as-standalone-server)\\nfor further instructions.\\n\\n**Smooth authentication** It used to be the case that when you clicked that\\nstylish \u201cauthenticate\u201d \\\\[with Google Drive] button, you were taken away from the\\npage, and things tended to get lost. That has now all been made silky smooth:\\nupon clicking the button, a fresh tab will open in your browser, which will take\\nyou to the authentication page \u2013 be it on Google Drive, Dropbox, or somewhere\\nelse. When you are done, this tab is automagically closed, and you are back\\nwhere you were, authenticated, with all your remote files at hand.\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.14/smooth-auth.png\\" />\\n\\n**Dropbox plugin** Dropbox support made it into Uppy this release! \ud83c\udf89\\n[Ife](https://github.com/ifedapoolarewaju) rocks like that. (A shoutout here as\\nwell to [Harry](https://github.com/hedgerh) for the initial work on Uppy Server\\nand the Google Drive plugin!) Why don\'t you\\n[give it a try](https://uppy.io/examples/dashboard/)!\\n\\n<img className=\\"border\\" src=\\"/img/blog/0.14/uppy-dropbox.png\\" />\\n\\nWhat\u2019s more, the client-side code of Google Drive and Dropbox plugins is slowly\\nbeing refactored into a generic provider view that can be shared among\\nall\xa0services.\\n\\n## Dashboard\\n\\n**Responsive UI and more icons** The Dashboard now adapts itself to screen sizes\\nbig and small. That includes `inline` mode, where you can set `maxWidth` and\\n`maxHeight` in options, like so:\\n\\n```js\\nuppy.use(Dashboard, {\\n\\tmaxWidth: 300,\\n\\tmaxHeight: 350,\\n\\tinline: true,\\n\\ttarget: \'#myUploadContainer\',\\n});\\n```\\n\\nWe are not using media queries here, but have instead added a\\n`UppyDashboard--wide` CSS class, which allows for more flexibility \u2014 your file\\nuploading widget can be tiny even if the screen is large.\\n\\nWhen there is little space available, the file grid view that you have become\\nused to, will turn into a new compact list view.\\n\\n<figure class=\\"wide\\">\\n  <img src=\\"/img/blog/0.14/dashboard-grid-list.jpg\\" />\\n</figure>\\n\\nWe are also adding more file type icons and trying to be smarter about detecting\\nthem. We have new icons for video, audio, text, and PDF for you to enjoy.\\n\\n**Total / uploaded sizes** Total and uploaded sizes have been added to the\\nStatusBar, allowing you and your users to keep track of all those bits and\\nbytes.\\n\\n<img src=\\"/img/blog/0.14/statusbar-uploaded-total-size.png\\" />\\n\\nYou can play with all of these new features on\\n[the Dashboard example page](https://uppy.io/examples/dashboard/).\\n\\n\x3c!--truncate--\x3e\\n\\n## Per plugin locale settings\\n\\nWe have moved locale settings from global/core to plugins. By default, each UI\\nplugin ships with an English locale, and you can override any string with your\\nown, like so:\\n\\n```js\\nuppy.use(DragDrop, {\\n\\ttarget: \'.drop\',\\n\\tlocale: {\\n\\t\\tstrings: {\\n\\t\\t\\tchooseFile: \'Valitse tiedoston\',\\n\\t\\t\\torDragDrop: \'tai siirt\xe4\xe4 t\xe4nne\',\\n\\t\\t},\\n\\t},\\n});\\n```\\n\\n<img src=\\"/img/blog/0.14/dnd-fi.png\\" />\\n\\nAnd just like that, your Drag&Drop plugin now speaks Finnish! _Hyv\xe4\xe4 huomenta!_\\nThis feature is a work in progress, we are trying to find the sweet spot between\\n[bundling a whole bunch of strings in packs](https://github.com/transloadit/uppy/blob/8c6252933813af69c1b71ec4621a7fc14dfb3ab0/src/locales/pt_BR.js),\\nwhich might be redundant (i.e. if you only use the Drag&Drop, you don\u2019t need\\nstrings from the Dashboard), and making you choose or set language strings for\\neach UI plugin. We\u2019d love to\\n[hear what you think](https://github.com/transloadit/uppy/issues/42).\\n\\n## Misc\\n\\n- [yo-yoify](https://www.npmjs.com/package/yo-yoify) has been added to our build\\n  setup in order to solve a\\n  [Function.caller / strict mode issue](https://github.com/shama/bel#note) and\\n  to make the app faster/smaller by transforming template strings into pure and\\n  fast document calls.\\n- By the way, Uppy\u2019s UI DOM is powered by\\n  [yo-yo](https://www.npmjs.com/package/yo-yo). We like yo-yo for its\\n  simplicity, speed and small size, but sometimes there are issues, one of them\\n  being the lack of wide adoption. We are looking at\\n  [Preact](https://preactjs.com/), but are also quite excited about\\n  [Nanocomponent](https://github.com/yoshuawuyts/nanocomponent).\\n- Progress events that were not being properly sent from Uppy Server as now\\n  fixed. As it turns out, this occurred because server uploads were happening\\n  too fast, before the client was actually able to connect to the server.\\n  :scream: Guess that\u2019s a good problem to have solved!\\n- We have recently added Uppy to\\n  [Product Hunt](https://www.producthunt.com/posts/uppy) and we were very\\n  pleased with the warm welcome, we even made it to the front page a few days\\n  later. Let\u2019s hope it will help get more people excited about the project.\\n\\n## Release Notes\\n\\nHere is the full list of changes for version 0.14:\\n\\n- dashboard: use `isWide` prop/class instead of media queries, so that\\n  compact/mobile version can be used in bigger screens too (@arturi)\\n- dashboard: basic \u201clist\u201d view in addition to current \u201cgrid\u201d view (@arturi)\\n- dashboard: more icons for file types (@arturi)\\n- dashboard: add totalSize and totalUploadedSize to StatusBar (@arturi)\\n- dashboard: figure out where to place Informer, accounting for StatusBar \u2014 over\\n  the StatusBar for now (@arturi)\\n- dashboard: add `<progress>` element for progress bar, like here\\n  <https://overcast.fm/+BtuxMygVg/>. Added hidden for now, for\\n  semantics/accessibility (@arturi)\\n- dragdrop: show number of selected files, remove upload btn (@arturi)\\n- build: exclude locales from build (@arturi)\\n- core: i18n for each plugin in options \u2014 local instead of global (@arturi)\\n- core: add default pluralization (can be overridden in plugin options) to\\n  Translator (@arturi)\\n- core: use yo-yoify to solve\\n  [Function.caller / strict mode issue](https://github.com/shama/bel#note) and\\n  make our app faster/smaller by transforming template strings into pure and\\n  fast document calls (@arturi)\\n- server: a pluggable uppy-server (express / koa for now) (@ifedapoolarewaju)\\n- server: standalone uppy-server (@ifedapoolarewaju)\\n- server: Integrate dropbox plugin (@ifedapoolarewaju)\\n- server: smooth authentication: after auth you are back in your app where you\\n  left, no page reloads (@ifedapoolarewaju)\\n- tus: fix upload progress from uppy-server (@arturi, @ifedapoolarewaju)\\n- core: basic React component \u2014 DnD (@arturi)\\n- core: fix support for both ES6 module import and CommonJS requires with\\n  `add-module-exports` babel plugin (@arturi)\\n\\n## Feedback\\n\\nWe appreciate your feedback, feel free to\\n[comment on GitHub](https://github.com/transloadit/uppy/issues/), send a PR, and\\nhit us on [twitter](https://twitter.com/uppy_io).\\n\\nThe Uppy Team"},{"id":"2016/12/0.12","metadata":{"permalink":"/blog/2016/12/0.12","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2016-12-0.12.md","source":"@site/blog/2016-12-0.12.md","title":"Uppy 0.12: Responsive. Cancel. Feedback. Refreshed\xa0ES6 server","description":"Hello! Here\u2019s what\u2019s new in Uppy 0.12.","date":"2016-12-07T00:00:00.000Z","tags":[],"readingTime":3.095,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.12: Responsive. Cancel. Feedback. Refreshed\xa0ES6 server","date":"2016-12-07T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2016/12/0.12"},"unlisted":false,"prevItem":{"title":"Uppy 0.14: Responsive Dashboard, Standalone & Pluggable Server, Dropbox","permalink":"/blog/2017/02/0.14"},"nextItem":{"title":"Uppy 0.11: StatusBar, research, https and API docs","permalink":"/blog/2016/11/0.11"}},"content":"Hello! Here\u2019s what\u2019s new in Uppy 0.12.\\n\\n## Dashboard: local mode and multipart uploads support in UI\\n\\nPrior to this release, we\u2019ve optimized the Dashboard for usage with multiple\\n\u201cacquire plugins\u201d, say Webcam + Google Drive. But sometimes all you need is\\n\u201clocal disk\u201d with drag & drop support, nice file previews and progress. And now\\nthe Dashboard UI works great with that use case out of the box. When you don\u2019t\\nadd (.use) any acquire plugins, it looks like this:\\n\\n<figure class=\\"wide\\">\\n  <img src=\\"/img/blog/0.12/uppy-dashboard-local.jpg\\" />\\n</figure>\\n\\nAlso (prior to this release), we\u2019ve built the Dashboard to work well with\\n[tus resumable uploads](http://tus.io). That\u2019s why you can pause and resume\\nindividual uploads, as well as all at once. But if you use an endpoint that is\\nnot yet ready for the future and upload resumability (here\u2019s\\n[how](https://github.com/tus/tus-node-server) to\\n[fix that](https://github.com/tus/tusd), by the way), the Dashboard UI will show\\nregular \u201ccancel\u201d buttons instead of pause/resume.\\n\\nDashboard is gradually becoming more mobile friendly too, but we\u2019ll be saving\\nsome of that stuff for the next release.\\n\\n## Server\\n\\nUppy server has undergone a quite a few changes, including the build setup:\\n\\n- We are using ES2015, transpiling to ES5 with Babel.\\n- Added linting, lint-staged, pre-commit all that good stuff.\\n- Added `npm run release` command that publishes releases for us.\\n- Google Drive is working again on the Uppy Server side.\\n- Refactoring, error handling and more minor improvements.\\n\\n\x3c!--truncate--\x3e\\n\\n## And\\n\\n- The website now features a video demo of Uppy in action, check it out:\\n  <http://uppy.io>.\\n- Fixed a bug where the Webcam would continue to be active (green light on) even\\n  after the picture was taken \u2014 all good now.\\n- Improved import/require support for ES2015 and CommonJS modules. Basically, we\\n  don\u2019t recommend ES2015 spread imports as a default option just yet \u2014 no tree\\n  shaking in Browserify and Webpack 1. Both\\n  `import DragDrop from \'uppy/lib/plugin/DragDrop\'` and\\n  `const DragDrop = require(\'uppy/lib/plugin/DragDrop\')` are now supported.\\n  We\u2019ve added `add-module-exports` babel plugin that replaces `export default`\\n  with `module.exports` for backwards compatibility.\\n- Optimized dependencies a little: removed the ones we don\u2019t use, upgraded some\\n  that we do.\\n\\n## Release Notes\\n\\nHere is the full list of changes for version 0.12:\\n\\n- meta: write 0.12 release blog post (@arturi)\\n- core: figure out import/require for core and plugins \u2014 just don\u2019t use spread\\n  for plugins (@arturi)\\n- meta: create a demo GIF, showcasing Uppy Dashboard for the main page, like\\n  <https://zeit.co/blog/next> (@arturi)\\n- meta: update Readme, update screenshot (@arturi)\\n- server: add pre-commit and lint-staged (@arturi)\\n- server: re-do build setup: building at `deploy` and `prepublish` when typing\\n  `npm run release:patch` 0.0.1 -> 0.0.2 (@ifedapoolarewaju)\\n- server: re-do build setup: es6 `src` -> es5 `lib` (use plugin packs from Uppy)\\n- server: re-do build setup: `eslint --fix ./src` via <http://standardjs.com>\\n  (@ifedapoolarewaju)\\n- server: re-do build setup: `babel-node` or `babel-require` could do realtime\\n  transpiling for development (how does that hook in with e.g. `nodemon`?)\\n  (@ifedapoolarewaju)\\n- server: refacor: remove/reduce file redundancy (@ifedapoolarewaju)\\n- server: error handling: 404 and 401 error handler (@ifedapoolarewaju)\\n- server: bug fix: failing google drive (@ifedapoolarewaju)\\n- webcam: stop using the webcam (green light off) after the picture is taken /\\n  tab is hidden (@arturi)\\n- core: allow usage without `new`, start renaming `Core()` to `Uppy()` in\\n  examples (@arturi)\\n- core: api \u2014 consider\\n  [Yosh\u2019s feedback and proposals](https://gist.github.com/yoshuawuyts/b5e5b3e7aacbee85a3e61b8a626709ab),\\n  come up with follow up questions (@arturi)\\n- dashboard: local mode \u2014 no acquire plugins / external services, just DnD.\\n  ActionBrowseTagline component (@arturi)\\n- dashboard: only show pause/resume when tus is used (@arturi)\\n- dashboard: cancel uploads button for multipart (@arturi)\\n- dashboard: responsive design \u2014 stage 1 (@arturi)\\n- meta: write 0.11 release blog post (@arturi)\\n\\nThe Uppy Team"},{"id":"2016/11/0.11","metadata":{"permalink":"/blog/2016/11/0.11","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2016-11-0.11.md","source":"@site/blog/2016-11-0.11.md","title":"Uppy 0.11: StatusBar, research, https and API docs","description":"Hey everyone! It has been a while since we last shared some news about our","date":"2016-11-15T00:00:00.000Z","tags":[],"readingTime":3.41,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.11: StatusBar, research, https and API docs","date":"2016-11-15T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2016/11/0.11"},"unlisted":false,"prevItem":{"title":"Uppy 0.12: Responsive. Cancel. Feedback. Refreshed\xa0ES6 server","permalink":"/blog/2016/12/0.12"},"nextItem":{"title":"Uppy 0.10: Getting together, the future, Google Drive UI, exposed events","permalink":"/blog/2016/09/0.10"}},"content":"Hey everyone! It has been a while since we last shared some news about our\\nprogress and we can\'t wait to let you know what\u2019s up(py)!\\n\\nIn October, we have been working hard to get Uppy 0.11 ready for release. This\\nentailed, among other things, doing a write-up of our general architecture,\\nbringing in a friend to look at what we\u2019ve been up to, experimenting with Redux,\\nand updating the Dashboard UI and website example.\\n\\nHere\'s what we have been up to, in some more detail.\\n\\n\x3c!--truncate--\x3e\\n\\n## More research and experiments\\n\\n- We wrote an\\n  [ARCHITECTURE.md](https://github.com/transloadit/uppy/blob/master/ARCHITECTURE.md)\\n  document, describing our architecture and APIs.\\n- Author of [Choo](https://github.com/yoshuawuyts/choo), Yoshua Wuyts, was\\n  invited to take a look at the state of things in Uppy, and he came up with a\\n  proposal for some changes, which we\u2019ll be considering in the coming releases.\\n- We also conducted a few Redux experiments on Uppy, in the process of which, no\\n  animals were hurt. :dog:\\n\\n## Dashboard: example features, StatusBar and updated UI\\n\\n**Dashboard example** [on our website](https://uppy.io/examples/dashboard/) now\\nfeatures several options:\\n\\n- switchting between \u201cinline\u201d and \u201cmodal dialog / popup\u201d mode;\\n- toggling the `autoProceed` option that starts uploads automatically, without\\n  waiting for a click on the \u201cupload\u201d button;\\n- enabling/disabling acquire plugins, like Google Drive and Webcam.\\n\\n<img src=\\"/img/blog/0.11/dashboard-example-options.png\\" />\\n\\n**StatusBar** is a \u2013 you guessed it \u2013 bar that appears on the bottom of the\\nDashboard and unifies progress with pause/resume buttons.\\n\\n**Dashboard UI** has undergone minor improvements, such as: a new \u201cdrag files\\nhere\u201d icon and tagline. Furthermore, the text before \u201cacquire\u201d icons on the top\\n\u2014 Local Disk, Google Drive, Webcam \u2014 has been removed (it used to say \u201cImport\\nfiles from:\u201d). We also added new \u201cremove file\u201d icons. You know, small things,\\nbig difference. :sunglasses:\\n\\n<img src=\\"/img/blog/0.11/uppy-dashboard-oct-2016-1.jpg\\" alt=\\"Dashboard UI, no files. Text: Drop files here, paste or import from one of the locations above\\" />\\n\\n<img src=\\"/img/blog/0.11/uppy-dashboard-oct-2016-2.jpg\\" alt=\\"Dashboard UI, file upload in progress. StatusBar with pause/resume button and progress\\" />\\n\\n## HTTPS\\n\\nWe have upgraded both [uppy.io](http://uppy.io/) and [tus.io](http://tus.io/) to\\nsupport HTTPS with Let\u2019s Encrypt. This will ensure that webcam example now\\nworks, secure uploads work, and \u2013 hopefully \u2013 that all will be well.\\n\\n## And more\\n\\n- We have renamed FormTag plugin to FileInput and made it pretty by default,\\n  with an added option to just show the default browser \u201cchoose file\u201d.\\n- [Fixed a bug](https://github.com/transloadit/uppy/issues/126) with\\n  `autoProceed: true` duplicating uploads.\\n- Refactored Dashboard to only keep active acquire panel in DOM.\\n- Added PersistentState plugin that saves state to localStorage \u2014 which is\\n  useful for development.\\n- [Grand refactor of Uppy Server](https://github.com/transloadit/uppy/pull/131)\\n  with dynamic controllers.\\n- Webcam stream no longer flashes when state is updated.\\n\\n## Release Notes\\n\\nHere is the full list of changes for version 0.11:\\n\\n- core: log method should have an option to throw error in addition to just\\n  logging (@arturi)\\n- experimental: PersistentState plugin that saves state to localStorage \u2014 useful\\n  for development (@arturi)\\n- dashboard: implement new StatusBar with progress and pause/resume buttons\\n  <https://github.com/transloadit/uppy/issues/96#issuecomment-249401532>\\n  (@arturi)\\n- dashboard: attempt to throttle StatusBar, so it doesn\u2019t re-render too often\\n  (@arturi)\\n- dashboard: refactor \u2014 only load one acquire panel at a time (activeAcquirer or\\n  empty), change focus behavior, utilize onload/onunload\\n- experimental: create a Dashboard UI for Redux refactor (@hedgerh)\\n- dashboard: make trigger optional \u2014 not needed when rendering inline (@arturi)\\n- fileinput: pretty input element #93 (@arturi)\\n- meta: document current Uppy architecture and question about the future\\n  (@arturi, @hedgerh)\\n- test: see about adding tests for autoProceed: true (@arturi)\\n- website: and ability to toggle options in Dashboard example: inline/modal,\\n  autoProceed, which plugins are enabled #89 (@arturi)\\n- website: finish https upgrade for uppy.io, uppy-server and tus, set up pingdom\\n  notifications (@arturi, @kvz, @hedgerh)\\n- website: update guide, API docs and main page example to match current actual\\n  API (@arturi)\\n- uppy-server: Make uppy server have dynamic controllers (@hedgerh)\\n\\nWe hope you\'ll enjoy this latest release. We have got a lot more in store for\\nUppy and we won\'t wait too long with throwing you a bone again!\\n\\nThe Uppy Team"},{"id":"2016/09/0.10","metadata":{"permalink":"/blog/2016/09/0.10","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2016-09-0.10.md","source":"@site/blog/2016-09-0.10.md","title":"Uppy 0.10: Getting together, the future, Google Drive UI, exposed events","description":"Hi! Another month has passed and we have just released a new version of Uppy.","date":"2016-09-28T00:00:00.000Z","tags":[],"readingTime":5.16,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy 0.10: Getting together, the future, Google Drive UI, exposed events","date":"2016-09-28T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2016/09/0.10"},"unlisted":false,"prevItem":{"title":"Uppy 0.11: StatusBar, research, https and API docs","permalink":"/blog/2016/11/0.11"},"nextItem":{"title":"Uppy 0.9: Making Progress, then pause & resume. Remote file uploads, Informer.","permalink":"/blog/2016/08/0.9.0"}},"content":"Hi! Another month has passed and we have just released a new version of Uppy.\\nHere\u2019s what we\u2019ve been up to.\\n\\n## Thinking about the future \ud83d\udd2e\\n\\nWe have been spending quite a lot of time thinking about Uppy\'s future and the\\ndirection in which we would like to take this project. Our primary concern is\\nmaking Uppy as flexible as possible as well as compatible with popular\\nlibraries, such as React and React Native. We also want to make it easy to port\\nUppy to any environments or ecosystems that are not officially supported.\\n\\nWe have done a lot of research. We created\\n[prototypes of Uppy React components](https://github.com/hedgerh/uppy-react) and\\nwe also created a new module that we like to call \\"Uppy Base.\\"\\n[`uppy-base`](https://github.com/hedgerh/uppy-base) is a thin module containing\\nreusable functionality from some of our plugins that can be used in any\\necosystem or environment, without being opinionated about the UI.\\n\\n\x3c!--truncate--\x3e\\n\\nFinally, we are also discussing using [Redux](https://github.com/reactjs/redux)\\nas the internal state management store within Uppy. You can see some drafts\\nunder the `src/experimental` folder (EDIT: this folder has since been removed).\\n\\nHave a look at the\\n[Uppy Base repository here](https://github.com/hedgerh/uppy-base).\\n\\nCheck out\\n[our Uppy React wrapper and components](https://github.com/hedgerh/uppy-react),\\nwhich are built on top of Uppy Base.\\n\\nFinally, we have played a bit with [CSS Modules](https://github.com/css-modules)\\nand [CSJS](https://github.com/rtsao/csjs). We have also tried generating preview\\nthumbnails in Web Workers, as well as with\\n[Pica library](https://github.com/nodeca/pica).\\n\\nWe would love to hear feedback on all of this. Please join our discussion at:\\n<https://github.com/transloadit/uppy/issues/116>\\n\\nYou are, of course, more than welcome to chime in on other issues or to open new\\nones!\\n\\n## Dashboard: refreshed look and new features\\n\\nIn an attempt to be brave and keep things simple, we have removed the dashed\\nborder from inside the Dashboard, rewritten its layout with flexbox, and tried\\nout a new\\n[blend-in-with-the-background-and-blur](https://cloud.githubusercontent.com/assets/1199054/18763191/35d31ddc-80da-11e6-9a2c-c46388857135.png)\\nmode.\\n\\n<img alt=\\"Refreshed Dashboard UI\\" src=\\"/img/blog/0.10/dashboard-sep-27-2016.jpg\\" />\\n\\nUppy now also has the option to render the Dashboard inline on the page, instead\\nof the default full modal dialog. To try it out, set `inline: true` in options,\\nlike this: `uppy.use(Dashboard, {target: \'.myContainer\', inline: true})`.\\n\\nWe have also added a circular progress bar that shows total upload progress,\\ncombined with a pause all / resume all button, and an info panel that shows\\nspeed, ETA and status for all uploads currently in progress. So you\'ll have\\nsomething fun and useful to look at while you are waiting!\\n\\n<img alt=\\"Dashboard UI with global pause/resume buttons and a status bar \u2014 progress speed & ETA\\" src=\\"/img/blog/0.10/dashboard-pause-resume-sep-27-2016.jpg\\" />\\n\\nBe sure not to miss out on the new Copy Link button that appears after a\\nsuccessful upload, right where the edit button usually is. We know, that\u2019s\\npretty exciting! And it gets even better: when you click on it, the link is\\ncopied to your clipboard. Or, in less capable browsers, a window pops up with a\\ntext link, so you can copy it yourself. Bananas!\\n\\n## Google Drive UI improved\\n\\nThe UI for Google Drive has received a fresh new redesign. Check it out!\\n\\n<img alt=\\"The redesigned file browser UI for Google Drive\\" src=\\"/img/blog/0.10/google-drive-ui-sep-27-2016.jpg\\" />\\n\\n## Listen to events\\n\\nWe have finally begun to expose events on the `uppy` instance, so you can now\\nsubscribe to them and use them in your app. For example, in order to display an\\nimage in your UI after it has been successfully uploaded:\\n\\n```javascript\\nuppy.on(\'core:upload-success\', (id, url) => {\\n\\tconst img = new Image();\\n\\timg.width = 300;\\n\\timg.alt = id;\\n\\timg.src = url;\\n\\tdocument.body.appendChild(img);\\n});\\n```\\n\\nThere is also `core:upload-progress` to track progress and `core:success` for\\nwhen all uploads are complete. The\\n[event documentation](https://github.com/transloadit/uppy/#api) is quite small\\nright now, we\u2019ll be adding more once we sort out the API.\\n\\n## But wait, there\u2019s more!\\n\\n- i18n strings now extend default en_US dictionary: if a certain string is not\\n  available in a language, the English string will be displayed.\\n- Updated readme: improved usage docs and CDN links. Check out\\n  [the new usage section](https://github.com/transloadit/uppy/#usage) for\\n  yourself. Import, require or script tag? In any case, we\u2019ve got your back.\\n- Capabilities: we have added `capabilities` to the state. For example, if \'tus\'\\n  resumable uploader is used, `capabilities.resumable === true` is added to the\\n  state, so it is easy to check what upload capabilities are available. More to\\n  come.\\n\\n## Release Notes\\n\\nHere is the full list of changes for version 0.10.0:\\n\\n- core: expose some events/APIs/callbacks to the user: `onFileUploaded`,\\n  `onFileSelected`, `onAllUploaded`, `addFile` (or `parseFile`), open modal...\\n  (@arturi, @hedgerh)\\n- core: how would Uppy work without the UI, if one wants to Uppy to just add\\n  files and upload, while rendering preview and UI by themselves #116 \u2014\\n  discussion Part 1 (@arturi, @hedgerh)\\n- core: refactor towards react compatibility as discussed in\\n  <https://github.com/transloadit/uppy/issues/110> (@hedgerh)\\n- core: CSS modules? allow bundling of CSS in JS for simple use in NPM? See\\n  <https://github.com/transloadit/uppy/issues/120#issuecomment-242455042>, try\\n  <https://github.com/rtsao/csjs> \u2014 verdict: not yet, try again later (@arturi,\\n  @hedgerh)\\n- core: try Web Workers and FileReaderSync for image resizing again \u2014 still\\n  slow, probably message payload between webworker and regular thread is huge\\n  (@arturi)\\n- core: i18n strings should extend default `en_US` dictionary \u2014 if a certain\\n  string in not available in German, English should be displayed (@arturi)\\n- dashboard: refactor to smaller components, pass props down (@arturi)\\n- dashboard: option to render Dashboard inline instead of a modal dialog\\n  (@arturi)\\n- dashboard: global circular progress bar, try out different designs for total\\n  upload speed and ETA (@arturi)\\n- dashboard: show total upload speed and ETA, for all files (@arturi)\\n- dashboard: copy link to uploaded file button, cross-browser (@arturi)\\n  (<http://i.imgur.com/b1Io34n.png>) (@arturi)\\n- dashobard: refreshed design and grand refactor (@arturi)\\n- dashboard: improve file paste the best we can\\n  <http://stackoverflow.com/a/22940020> (@arturi)\\n- provider: abstract google drive into provider plugin for reuse (@hedgerh)\\n- google drive: improve UI (@hedgerh)\\n- tus: add `resumable` capability flag (@arturi)\\n- tus: start fixing pause/resume issues and race conditions (@arturi)\\n- test: working Uppy example on Require Bin \u2014 latest version straight from NPM\\n  <http://requirebin.com/?gist=54e076cccc929cc567cb0aba38815105> (@arturi\\n  @account)\\n- meta: update readme docs, add unpkg CDN links\\n  (<https://unpkg.com/uppy/dist/uppy.min.css>) (@arturi)\\n- meta: write 0.10 release blog post (@arturi)\\n\\nWe\u2019ll see you in about a month!\\n\\nThe Uppy Team"},{"id":"2016/08/0.9.0","metadata":{"permalink":"/blog/2016/08/0.9.0","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2016-08-0.9.0.md","source":"@site/blog/2016-08-0.9.0.md","title":"Uppy 0.9: Making Progress, then pause & resume. Remote file uploads, Informer.","description":"We have just released Uppy 0.9.0. This release features some changes that we","date":"2016-08-26T00:00:00.000Z","tags":[],"readingTime":3.225,"hasTruncateMarker":true,"authors":[{"name":"hedgerh"}],"frontMatter":{"title":"Uppy 0.9: Making Progress, then pause & resume. Remote file uploads, Informer.","date":"2016-08-26T00:00:00.000Z","author":"hedgerh","published":true,"slug":"2016/08/0.9.0"},"unlisted":false,"prevItem":{"title":"Uppy 0.10: Getting together, the future, Google Drive UI, exposed events","permalink":"/blog/2016/09/0.10"},"nextItem":{"title":"Uppy version 0.8 released: The Webcam Edition and Meta Data","permalink":"/blog/2016/08/0.8.0"}},"content":"We have just released Uppy 0.9.0. This release features some changes that we\\nthink you will be very excited about. Let\'s see what\'s new!\\n\\n\x3c!--truncate--\x3e\\n\\n## Ability to pause uploads, progress indicators & ETA\\n\\nThe most visible feature that has been added is the ability to pause and resume\\nfile uploads.\\n\\n<img alt=\\"dashboard UI with paused uploads\\" src=\\"/img/blog/0.9/upload-pause.jpg\\" className=\\"border\\" />\\n\\n<img alt=\\"dashboard UI with files uploading and a pause all button\\" src=\\"/img/blog/0.9/upload-resume.jpg\\" className=\\"border\\" />\\n\\nThe upload dashboard now contains more information about uploads, such as the\\ntime remaining until an upload is finished. We have also added circular progress\\nindicators to give better visual feedback on an upload\'s progress.\\n\\n## Remote file uploads\\n\\nRemote file uploading is now working again.\\n\\n## Informer interface\\n\\nWe have added a new `Informer` plugin (tested with `Dashboard`, should also work\\nanywhere else) that listens to `informer` events, like so:\\n\\n```javascript\\nbus.emit(\'informer\', message, type, duration);\\n```\\n\\nand displays a message bubble for a certain amount of time. It will be useful to\\nnotify you when the internet connection is (a licky boom-boom) down (or back\\nup):\\n\\n<img alt=\\"info: no connection\\" src=\\"/img/blog/0.9/info-no-connection.jpg\\" className=\\"border\\" />\\n\\nOr when Uppy has successfully uploaded your files:\\n\\n<img alt=\\"info: upload successful\\" src=\\"/img/blog/0.9/info-upload-success.jpg\\" className=\\"border\\" />\\n\\n## Webcam: Say Cheese!\\n\\nThe Webcam plugin can now take snapshots and add them to the file dashboard in\\nUppy\'s modal. We have also added Flash support for Safari/IE users. The UI has\\nalso been cleaned up in the dashboard. We have temporarily disabled video\\nrecording in order to focus on rolling out the snapshot feature.\\n\\n## Under the hood: UI refactors\\n\\nUnder the hood, we have made some changes to how the UI is structured. We are\\ntaking a more componentized approach. For example, the rendering of Google\\nDrive\'s UI has been separated into multiple smaller components that can be found\\nin the `plugins/GoogleDrive` folder.\\n\\n## Release Notes\\n\\nHere is the full list of changes for version 0.9.0.:\\n\\n- dashboard: informer interface: message when all uploads are \\"done\\"\\n  ([@arturi](https://github.com/arturi))\\n- dashboard: improve file paste \u2014 not really possible \u2014 no file names, weird\\n  API, Chrome-only <http://stackoverflow.com/a/22940020>\\n  ([@arturi](https://github.com/arturi))\\n- meta: add google demo account [@kvz](https://github.com/kvz))\\n- meta: Set up a Google testing account that people can use to try the demo\\n  ([@hedgerh](https://github.com/hedgerh))\\n- meta: write 0.9 release blog post ([@hedgerh](https://github.com/hedgerh))\\n- webcam: a barely working webcam snapshot & upload\\n  ([@hedgerh](https://github.com/hedgerh))\\n- metadata: Uppy + tus empty metadata value issue in Safari\\n  <https://github.com/tus/tus-js-client/issues/41> --\x3e tus issue \u2014 nailed down,\\n  passed to @account (@arturi, @account)\\n- core: experiment with switching to `virtual-dom` in a separate branch;\\n  experiment with rollup again ([@arturi](https://github.com/arturi))\\n- core: figure out race conditions (animations not completing because file div\\n  gets re-added to the dom each time) with `yo-yo`/`morphdom`\\n  <https://github.com/shama/bel/issues/26#issuecomment-238004130>\\n  ([@arturi](https://github.com/arturi))\\n- core: switch to <https://github.com/sethvincent/namespace-emitter> \u2014 smaller,\\n  allows for `on(\'*\')` ([@arturi](https://github.com/arturi))\\n- dashboard: add aria-labels and titles everywhere to improve accessibility #114\\n  ([@arturi](https://github.com/arturi))\\n- dashboard: file name + extension should fit on two lines, truncate in the\\n  middle (maybe\\n  <https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/measureText>)\\n  ([@arturi](https://github.com/arturi))\\n- dashboard: implement a circular progress indicator on top of the fileItem with\\n  play/pause ([@arturi](https://github.com/arturi))\\n- dashboard: refactor to smaller components, as discussed in #110\\n  ([@arturi](https://github.com/arturi))\\n- google drive: refactor to smaller components, as discussed in #110\\n  ([@hedgerh](https://github.com/hedgerh))\\n- google drive: add demo account ([@hedgerh](https://github.com/hedgerh))\\n- metadata: add labels to fields in fileCard\\n  ([@arturi](https://github.com/arturi))\\n- metadata: the aftermath \u2014 better UI ([@arturi](https://github.com/arturi))\\n- test: Get IE6 on Win XP to run Uppy and see it fall back to regular form\\n  upload #108 ([@arturi](https://github.com/arturi))\\n- test: refactor tests, add DragDrop back ([@arturi](https://github.com/arturi))\\n- tus: update uppy to `tus-js-client@1.2.1`, test on requirebin\\n  ([@arturi](https://github.com/arturi))\\n- tus: add ability to pause/resume all uploads at once\\n  ([@arturi](https://github.com/arturi))\\n- tus: add ability to pause/resume upload ([@arturi](https://github.com/arturi))\\n\\nWe hope you will enjoy this latest release. Uppy is still improving every day\\nand we hope to bring you more news about our progress soon!\\n\\nThe Uppy Team"},{"id":"2016/08/0.8.0","metadata":{"permalink":"/blog/2016/08/0.8.0","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2016-08-0.8.0.md","source":"@site/blog/2016-08-0.8.0.md","title":"Uppy version 0.8 released: The Webcam Edition and Meta Data","description":"We have just released Uppy 0.8.0 and we can\'t wait to tell you more about it.","date":"2016-08-17T00:00:00.000Z","tags":[],"readingTime":4.285,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy version 0.8 released: The Webcam Edition and Meta Data","date":"2016-08-17T00:00:00.000Z","authors":["arturi"],"published":true,"slug":"2016/08/0.8.0"},"unlisted":false,"prevItem":{"title":"Uppy 0.9: Making Progress, then pause & resume. Remote file uploads, Informer.","permalink":"/blog/2016/08/0.9.0"},"nextItem":{"title":"Uppy: let\u2019s teach an old dog some new\xa0tricks","permalink":"/blog/2016/07/uppy-begins"}},"content":"We have just released Uppy 0.8.0 and we can\'t wait to tell you more about it.\\nAlong with various under-the-hood improvements, this release also contains some\\nvery visible upgrades. You can read below for further details.\\n\\n## Including Meta Data\\n\\nWhile fetching your files, Uppy is now also able to supply some custom metadata\\nto go along with them. So far, there are three components in place for that:\\nCore API (`core:update-meta` event), `MetaData` plugin, and a new panel in\\nDashboard UI called File Card, which looks like this:\\n\\n<img alt=\\"metadata dashboard UI, editing file name, future size and adding description\\" src=\\"/img/blog/0.8/metadata-dashboard.jpg\\" className=\\"border\\" />\\n\\n\x3c!--truncate--\x3e\\n\\nTo summon this panel, all you have to do is click the edit button on the\\nDashboard:\\n\\n<img alt=\\"metadata dashboard UI, editing file name, future size and adding description\\" src=\\"/img/blog/0.8/uppy-dashboard-ui.jpg\\" className=\\"border\\" />\\n\\nBy default, the only active metadata field is `Name`. However, if you want to\\nadd other fields you can utilize our new and easy to use `MetaData` plugin:\\n\\n```javascript\\nconst uppy = new Uppy().use(Dashboard).use(MetaData, {\\n\\tfields: [\\n\\t\\t{\\n\\t\\t\\tid: \'resizeTo\',\\n\\t\\t\\tname: \'Resize to\',\\n\\t\\t\\tvalue: 1200,\\n\\t\\t\\tplaceholder: \'specify future image size\',\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\tid: \'description\',\\n\\t\\t\\tname: \'Description\',\\n\\t\\t\\tvalue: \'\',\\n\\t\\t\\tplaceholder: \'describe what the file is for\',\\n\\t\\t},\\n\\t],\\n});\\n```\\n\\nAnd just like that, we have added two fields: `Resize` and `Description`. All\\nmetadata is sent along with both [tus](http://tus.io) and multipart uploads.\\n\\n## Webcam Support\\n\\nWe have also added a basic `Webcam` plugin, which allows you to acquire images\\ndirectly from your own webcam. This is still a work in progress and we will be\\nimproving it in the next release.\\n\\n## Mime Types and File Icons\\n\\nUppy now includes a [mime-type](https://www.npmjs.com/package/mime-types)\\nlibrary that helps us figure out file types by extension.\\n\\nHaving proper file types also means that we need the right corresponding file\\nicons for the Dashboard UI. We have already added a few and we will soon supply\\nmore icons for audio, video, text, PDF and other common file types.\\n\\n## Previously on Uppy: File Previews, Remote File Handling, Accessibility and Acceptance Tests Stats\\n\\nWe thought it might be worth taking a moment to list a few highlights from the\\nprevious versions as well:\\n\\n- If a file you selected is an image, its preview thumbnail data URL will be\\n  generated and added to `file.preview` in Uppy\u2019s state. This URL can be used\\n  later to render a preview with any plugin. Currently, this is done by the\\n  mighty Dashboard.\\n- It is now also possible to select remote files in Uppy. Simply double-click a\\n  file from, for instance, Google Drive, and Uppy will then show it in a preview\\n  area.\\n- We have been doing some more work on accessibility: from now on, when you\\n  switch tabs in Modal, it will focus on the first input in that tab. We have\\n  also added proper labels and titles, and are doing more research in this area.\\n- Everybody likes to see stats. That is why, on our website, you can now view\\n  stats that show how acceptance tests are performing in various browsers. If a\\n  test is successful, that means Uppy will likely be able to load and upload\\n  files in that particular browser.\\n- The Dashboard UI is now way better looking and easier to work with. It\\n  replaced the old `Modal` plugin and it can accept files via drag & drop, local\\n  disk and paste (experimental, WIP). It has become our main source of truth and\\n  the basic acquire plugin for local files. The DragDrop plugin is still\\n  available as a lighter alternative.\\n\\n## Release Notes\\n\\nHere is the full list of changes for version 0.8.0.\\n\\n- core: fix bug: no meta information from uppy-server files\\n  ([@hedgerh](https://github.com/hedgerh))\\n- core: fix bug: uppy-server file is treated as local and directly uploaded\\n  ([@hedgerh](https://github.com/hedgerh))\\n- uppy-server: hammering out websockets/oauth\\n  ([@hedgerh](https://github.com/hedgerh),\\n  [@acconut](https://github.com/acconut))\\n- debugger: introduce MagicLog as a way to debug state changes in Uppy\\n  ([@arturi](https://github.com/arturi))\\n- modifier: A MetaData plugin to supply meta data (like width, tag, filename,\\n  user_id) ([@arturi](https://github.com/arturi))\\n- modifier: pass custom metadata with non-tus-upload. Maybe mimic meta behavior\\n  of tus here, too ([@arturi](https://github.com/arturi))\\n- modifier: pass custom metadata with tus-upload with tus-js-client\\n  ([@arturi](https://github.com/arturi))\\n- webcam: initial version: webcam light goes on\\n  ([@hedgerh](https://github.com/hedgerh))\\n- progress: better icons, styles ([@arturi](https://github.com/arturi))\\n- core: better mime/type detection (via mime + extension)\\n  ([@arturi](https://github.com/arturi))\\n- core: add deep-freeze to getState so that we are sure we are not mutating\\n  state accidentally ([@arturi](https://github.com/arturi))\\n- meta: release \u201cUppy Begins\u201d post ([@arturi](https://github.com/arturi)\\n  [@kvz](https://github.com/kvz))\\n- meta: better readme on GitHub and NPM ([@arturi](https://github.com/arturi))\\n- test: add pre-commit & lint-staged ([@arturi](https://github.com/arturi))\\n- test: add next-update <https://www.npmjs.com/package/next-update> to check if\\n  packages we use can be safely updated ([@arturi](https://github.com/arturi))\\n- website: blog polish \u2014 add post authors and their gravatars\\n  ([@arturi](https://github.com/arturi))\\n- dashboard: UI revamp, more prototypes, background image, make dashboard nicer\\n  ([@arturi](https://github.com/arturi))\\n- dashboard: try a workflow where import from external service slides over and\\n  takes up the whole dashboard screen ([@arturi](https://github.com/arturi))\\n- modal: merge modal and dashboard ([@arturi](https://github.com/arturi))\\n\\nWe hope you will enjoy this latest release. Uppy is still improving every day\\nand we hope to bring you more news about our progress soon!\\n\\nThe Uppy Team"},{"id":"2016/07/uppy-begins","metadata":{"permalink":"/blog/2016/07/uppy-begins","editUrl":"https://github.com/transloadit/uppy.io/tree/main/blog/2016-06-uppy-begins.md","source":"@site/blog/2016-06-uppy-begins.md","title":"Uppy: let\u2019s teach an old dog some new\xa0tricks","description":"For the past six months, we have been working hard on uppy.io. We feel that it","date":"2016-07-15T00:00:00.000Z","tags":[],"readingTime":3.805,"hasTruncateMarker":true,"authors":[{"email":"artur@transloadit.com","name":"Artur Paikin","id":"artur","tagline":"Developer","imageURL":"https://github.com/arturi.png","key":"arturi"}],"frontMatter":{"title":"Uppy: let\u2019s teach an old dog some new\xa0tricks","date":"2016-07-15T00:00:00.000Z","authors":["arturi"],"slug":"2016/07/uppy-begins"},"unlisted":false,"prevItem":{"title":"Uppy version 0.8 released: The Webcam Edition and Meta Data","permalink":"/blog/2016/08/0.8.0"}},"content":"For the past six months, we have been working hard on uppy.io. We feel that it\\nis high time we gave you a look behind the scenes: what are we working on, and\\nwhy.\\n\\n<img src=\\"/img/blog/uppy-begins/uppy-dashboard.jpg\\" />\\n\\nThe way uploading works has not changed in a meaningful way since the days of\\nour trusty old 56 kbit/s modems. Of course, files have gotten bigger and speeds\\nhave increased, but that is more or less all there is to say. If it were up to\\nus \u2013 and we hope it is \u2013 that is all about to change.\\n\\nWe at [Transloadit](https://transloadit.com/) are on a mission to change the way\\nthe world does uploading. To accomplish this, our first step has been to develop\\nan open protocol for resumable file uploads, called [\u2018tus\u2019](http://tus.io/).\\nFinally, that 2GB video upload from your smartphone doesn\u2019t have to start over\\nwhen your train passes through a tunnel! The protocol got\\n[Hacker News excited](https://news.ycombinator.com/item?id=10591348) on several\\noccasions and is being deployed by, among others, our friends at Vimeo. Now that\\na stable version 1.0 of \u2018tus\u2019 has been released, it is time to put it to the\\ntest. A protocol without real-world applications is nothing more than a\\nmeaningless document, after all.\\n\\nWe are therefore excited to tell you about Uppy: the file uploader that will\\ncertainly fetch more than just your newspaper.\\n\\n\x3c!--truncate--\x3e\\n\\n## Why the need for another file uploader?\\n\\nIt is true, there are indeed already a good few file uploading solutions out\\nthere ([Dropzone](http://www.dropzonejs.com/), for instance, is quite good). And\\n\u2013 for the most part \u2013 they do their job. Nevertheless, they are quite limited in\\ntheir functionality:\\n\\n- You can drag and drop files from local disk, but uploaders that supports\\n  Instagram, Dropbox or Google Drive are scarce. The ones out there lock you in\\n  with vendors and are hard to customize for own use.\\n\\n- File uploaders are seldom mindful of the existence of encoding and processing\\n  backends, while the reality is that files often require some form of\\n  processing and that the end user would like to receive progress updates with\\n  regard to that.\\n\\n- None of the currently available file uploaders make use of the standardized\\n  resumability that \u2018tus\u2019 provides, which makes them less than ideal for\\n  handling larger files.\\n\\n- Lastly, we feel that the current solutions are sometimes dropping the ball\\n  when it comes to a polished user experience. We aim to fix that.\\n\\nAll in all, we think there is definitely some \u2018trouble at the old mill\u2019 here and\\nit\u2019s time to let Uppy take care of that!\\n\\n## Our plans for Uppy\\n\\nUppy will be a JavaScript file uploader that allows you to fetch files, not only\\nfrom your local disk, but also from places like Dropbox, Instagram, Google\\nDrive, webcams and remote URLs. It will have a modular, plugin-based design,\\nmaking it lightweight and customizable.\\n\\nCute on the outside, the core of Uppy is very robust \u2013 thanks to resumability\\nthrough \'tus\'. We are confident that Uppy will be able to send even the biggest\\nof files over the smallest of tubes.\\n\\nUppy will also offer first class support for accessing Transloadit\u2019s uploading\\nand encoding backend, making it incredibly versatile. Of course, these are all\\nultimately just plugins, and Uppy can just as easily be used with your own\\nbackend \u2013 meaning no need to pay any subscription fees.\\n\\nWe are intent on making the user experience as smooth and satisfying as\\npossible, in terms of both functionality and visual design. Uppy will have a\\nbeautiful, themeable UI and it will look \u2013 and work \u2013 great on mobile platforms\\nas well. While we hope that advanced users will love the customizable nature of\\nUppy, an ample selection of presets will also be there to make sure that novice\\nusers are not going to be lost in the woods.\\n\\nLastly, and this is a point of special significance to us, Uppy will be\\ncompletely open source. When Uppy is finished, you will be free to use it for\\nwhatever you like. Until that time, we very much welcome your ideas and\\ncontributions. There are still a lot of decisions to be made and this is the\\nperfect time to come and influence the end product.\\n\\nWe are going to work hard on bringing you the best file uploader possible and\\nwe\u2019ll keep you informed about the development process on\\n[uppy.io](http://uppy.io/). We can\u2019t wait for you to meet Uppy!\\n\\n> We were on the [Hacker News](https://news.ycombinator.com/item?id=12109410)\\n> and [Product Hunt](https://www.producthunt.com/posts/uppy) frontpages.\\n> Comments welcome there."}]}}')}}]);