"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[4273],{85779:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>d,toc:()=>a});var n=s(74848),r=s(28453);const o={},i="Custom stores",d={id:"guides/custom-stores",title:"Custom stores",description:"If your app uses a state management library such as",source:"@site/docs/guides/custom-stores.md",sourceDirName:"guides",slug:"/guides/custom-stores",permalink:"/docs/guides/custom-stores",draft:!1,unlisted:!1,editUrl:"https://github.com/transloadit/uppy.io/blob/main/docs/guides/custom-stores.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Supporting IE11",permalink:"/docs/guides/browser-support"},next:{title:"Migration guides",permalink:"/docs/guides/migration-guides"}},c={},a=[{value:"Using stores",id:"using-stores",level:2},{value:"<code>DefaultStore</code>",id:"defaultstore",level:3},{value:"<code>ReduxStore</code>",id:"reduxstore",level:3},{value:"<code>opts.store</code>",id:"optsstore",level:4},{value:"<code>opts.id</code>",id:"optsid",level:4},{value:"<code>opts.selector</code>",id:"optsselector",level:4},{value:"Implementing Stores",id:"implementing-stores",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"custom-stores",children:"Custom stores"}),"\n",(0,n.jsxs)(t.p,{children:["If your app uses a state management library such as\n",(0,n.jsx)(t.a,{href:"https://redux.js.org",children:"Redux"}),", it can be useful to have Uppy store its state\nthere instead\u2014that way, you could write custom uploader UI components in the\nsame way as the other components in the application."]}),"\n",(0,n.jsx)(t.p,{children:"Uppy comes with two state management solutions (stores):"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"@uppy/store-default"}),", a basic object-based store."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"@uppy/store-redux"}),", a store that uses a key in a Redux store."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"You can also use a third-party store:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.a,{href:"https://github.com/rimlin/uppy-store-ngrx/",children:"uppy-store-ngrx"}),", keeping Uppy\nstate in a key in an ",(0,n.jsx)(t.a,{href:"https://github.com/ngrx/platform",children:"Ngrx"})," store for use\nwith Angular."]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"using-stores",children:"Using stores"}),"\n",(0,n.jsxs)(t.p,{children:["To use a store, pass an instance to the\n",(0,n.jsxs)(t.a,{href:"/docs/uppy#store-defaultstore",children:[(0,n.jsx)(t.code,{children:"store"})," option"]})," in the Uppy constructor:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"import DefaultStore from '@uppy/store-default';\n\nconst uppy = new Uppy({\n\tstore: new DefaultStore(),\n});\n"})}),"\n",(0,n.jsx)(t.h3,{id:"defaultstore",children:(0,n.jsx)(t.code,{children:"DefaultStore"})}),"\n",(0,n.jsxs)(t.p,{children:["Uppy uses the ",(0,n.jsx)(t.code,{children:"DefaultStore"})," by default! You do not need to do anything to use\nit. It does not take any options."]}),"\n",(0,n.jsx)(t.h3,{id:"reduxstore",children:(0,n.jsx)(t.code,{children:"ReduxStore"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"ReduxStore"})," stores Uppy state on a key in an existing Redux store. The\n",(0,n.jsx)(t.code,{children:"ReduxStore"})," dispatches ",(0,n.jsx)(t.code,{children:"uppy/STATE_UPDATE"})," actions to update state. When the\nstate in Redux changes, it notifies Uppy. This way, you get most of the benefits\nof Redux, including support for the Redux Devtools and time traveling!"]}),"\n",(0,n.jsxs)(t.p,{children:["Checkout our\n",(0,n.jsx)(t.a,{href:"https://github.com/transloadit/uppy/tree/main/examples/redux",children:"Redux example"}),"\nfor a working demo."]}),"\n",(0,n.jsx)(t.h4,{id:"optsstore",children:(0,n.jsx)(t.code,{children:"opts.store"})}),"\n",(0,n.jsxs)(t.p,{children:["Pass a Redux store instance, from ",(0,n.jsx)(t.code,{children:"Redux.createStore"}),". This instance should have\nthe Uppy reducer mounted somewhere already."]}),"\n",(0,n.jsx)(t.h4,{id:"optsid",children:(0,n.jsx)(t.code,{children:"opts.id"})}),"\n",(0,n.jsxs)(t.p,{children:["By default, the ",(0,n.jsx)(t.code,{children:"ReduxStore"})," assumes Uppy state is stored on a ",(0,n.jsx)(t.code,{children:"state.uppy[id]"}),"\nkey. ",(0,n.jsx)(t.code,{children:"id"})," is randomly generated by the store constructor, but can be specified\nby passing an ",(0,n.jsx)(t.code,{children:"id"})," option if it should be predictable."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"ReduxStore({\n\tstore,\n\tid: 'avatarUpload',\n});\n"})}),"\n",(0,n.jsx)(t.h4,{id:"optsselector",children:(0,n.jsx)(t.code,{children:"opts.selector"})}),"\n",(0,n.jsxs)(t.p,{children:["If you\u2019d rather not store the Uppy state under the ",(0,n.jsx)(t.code,{children:"state.uppy"})," key at all, use\nthe ",(0,n.jsx)(t.code,{children:"selector"})," option to the ",(0,n.jsx)(t.code,{children:"ReduxStore"})," constructor to tell it where to find\nstate instead:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"const uppy = new Uppy({\n\tstore: ReduxStore({\n\t\tstore,\n\t\tid: 'avatarUpload',\n\t\tselector: (state) => state.pages.profile.uppy.avatarUpload,\n\t}),\n});\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Note that when specifying a custom selector, you ",(0,n.jsx)(t.strong,{children:"must"})," also specify a custom\nstore ID. The store ",(0,n.jsx)(t.code,{children:"id"})," tells the reducer in which property it should put\nUppy\u2019s state. The selector must then take the state from that property. In the\nexample, we set the ID to ",(0,n.jsx)(t.code,{children:"avatarUpload"})," and take the state from the\n",(0,n.jsx)(t.code,{children:"[reducer mount path].avatarUpload"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["If your app uses ",(0,n.jsx)(t.a,{href:"https://npmjs.com/package/reselect",children:(0,n.jsx)(t.code,{children:"reselect"})}),", its selectors\nwork well with this!"]}),"\n",(0,n.jsx)(t.h2,{id:"implementing-stores",children:"Implementing Stores"}),"\n",(0,n.jsx)(t.p,{children:"An Uppy store is an object with three methods."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"getState()"})," - Return the current state object."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"setState(patch)"})," - Merge the object ",(0,n.jsx)(t.code,{children:"patch"})," into the current state."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"subscribe(listener)"})," - Call ",(0,n.jsx)(t.code,{children:"listener"})," whenever the state changes. ",(0,n.jsx)(t.code,{children:"listener"}),"\nis a function that should receive three parameters:\n",(0,n.jsx)(t.code,{children:"(prevState, nextState, patch)"})]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"subscribe()"})," method should return a function that \u201cunsubscribes\u201d\n(removes) the ",(0,n.jsx)(t.code,{children:"listener"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"The default store implementation, for example, looks a bit like this:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"function createDefaultStore() {\n\tlet state = {};\n\tconst listeners = new Set();\n\n\treturn {\n\t\tgetState: () => state,\n\t\tsetState: (patch) => {\n\t\t\tconst prevState = state;\n\t\t\tconst nextState = { ...prevState, ...patch };\n\n\t\t\tstate = nextState;\n\n\t\t\tlisteners.forEach((listener) => {\n\t\t\t\tlistener(prevState, nextState, patch);\n\t\t\t});\n\t\t},\n\t\tsubscribe: (listener) => {\n\t\t\tlisteners.add(listener);\n\t\t\treturn () => listeners.remove(listener);\n\t\t},\n\t};\n}\n"})}),"\n",(0,n.jsx)(t.p,{children:"A pattern like this, where users can pass options via a function call if\nnecessary, is recommended."}),"\n",(0,n.jsxs)(t.p,{children:["See the\n",(0,n.jsx)(t.a,{href:"https://github.com/transloadit/uppy/tree/main/packages/%40uppy/store-default",children:"@uppy/store-default"}),"\npackage for more inspiration."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>d});var n=s(96540);const r={},o=n.createContext(r);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);