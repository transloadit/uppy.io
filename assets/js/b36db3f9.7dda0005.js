"use strict";(self.webpackChunkuppy_io=self.webpackChunkuppy_io||[]).push([[8778],{10626:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var s=n(74848),r=n(28453);const o={},a="SvelteKit",i={id:"framework-integrations/svelte-kit",title:"SvelteKit",description:"Integration guide for using Uppy UI plugins and components with SvelteKit.",source:"@site/docs/framework-integrations/svelte-kit.mdx",sourceDirName:"framework-integrations",slug:"/framework-integrations/svelte-kit",permalink:"/docs/framework-integrations/svelte-kit",draft:!1,unlisted:!1,editUrl:"https://github.com/transloadit/uppy.io/blob/main/docs/framework-integrations/svelte-kit.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Remix",permalink:"/docs/framework-integrations/remix"},next:{title:"Svelte",permalink:"/docs/svelte"}},l={},d=[{value:"Install",id:"install",level:2},{value:"Tus",id:"tus",level:2},{value:"Transloadit",id:"transloadit",level:2},{value:"HTTP uploads to your backend",id:"http-uploads-to-your-backend",level:2},{value:"Next steps",id:"next-steps",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"sveltekit",children:"SvelteKit"}),"\n",(0,s.jsx)(t.p,{children:"Integration guide for using Uppy UI plugins and components with SvelteKit."}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"Uppy can be used with any JavaScript framework. This guide shows how to\nintegrate Uppy with SvelteKit."})}),"\n",(0,s.jsx)(t.h2,{id:"install",children:"Install"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"npm install @uppy/core @uppy/dashboard @uppy/svelte\n"})}),"\n",(0,s.jsx)(t.h2,{id:"tus",children:"Tus"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://tus.io/",children:"Tus"})," is an open protocol for resumable uploads built on HTTP. This means\naccidentally closing your tab or losing connection lets you continue, for\ninstance, your 10GB upload instead of starting all over."]}),"\n",(0,s.jsxs)(t.p,{children:["Tus supports any language, any platform, and any network. It requires a client\nand server integration to work. We will be using ",(0,s.jsx)(t.a,{href:"https://github.com/tus/tus-node-server",children:"tus Node.js"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Check out the ",(0,s.jsxs)(t.a,{href:"/docs/tus",children:[(0,s.jsx)(t.code,{children:"@uppy/tus"})," docs"]})," for more information."]}),"\n",(0,s.jsx)(t.p,{children:"Create a route where you want to handle uploads:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-svelte",children:"<script>\n  import Uppy from '@uppy/core';\n  import { Dashboard } from '@uppy/svelte';\n  import Tus from '@uppy/tus';\n\n  import '@uppy/core/dist/style.min.css';\n  import '@uppy/dashboard/dist/style.min.css';\n\n  let uppy = new Uppy().use(Tus, { endpoint: '/api/upload' });\n<\/script>\n\n<Dashboard {uppy} theme=\"dark\" />\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/tus/tus-node-server",children:(0,s.jsx)(t.code,{children:"@tus/server"})})," does not directly support SvelteKit endpoints,\nwhich use the Fetch API\u2019s ",(0,s.jsx)(t.code,{children:"Request"})," and ",(0,s.jsx)(t.code,{children:"Response"})," objects."]}),"\n",(0,s.jsxs)(t.p,{children:["However, you can integrate ",(0,s.jsx)(t.code,{children:"@tus/server"})," by setting up a\n",(0,s.jsx)(t.a,{href:"https://svelte.dev/docs/kit/adapter-node#Custom-server",children:"custom server"}),".\nSvelteKit supports multiple ",(0,s.jsx)(t.a,{href:"https://kit.svelte.dev/docs/adapters",children:"adapters"}),", so\nchoose the one that fits your needs."]}),"\n",(0,s.jsxs)(t.p,{children:["The exact code to integrate ",(0,s.jsx)(t.a,{href:"https://github.com/tus/tus-node-server",children:"tus Node.js"})," in your custom server depends on the\nframework you choose. Head over to the ",(0,s.jsx)(t.code,{children:"@tus/server"})," ",(0,s.jsx)(t.a,{href:"https://github.com/tus/tus-node-server/tree/main/packages/server#examples",children:"examples for the most popular Node.js servers"}),"\nto find the one that works for you."]}),"\n",(0,s.jsx)(t.h2,{id:"transloadit",children:"Transloadit"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["Before continuing, you should have a ",(0,s.jsx)(t.a,{href:"https://transloadit.com",children:"Transloadit"}),"\naccount and a\n",(0,s.jsx)(t.a,{href:"https://transloadit.com/docs/getting-started/my-first-app/",children:"template"})," set up."]})}),"\n",(0,s.jsxs)(t.p,{children:["Transloadit\u2019s strength is versatility. By handling video, audio, images,\ndocuments, and more, you only need one vendor for ",(0,s.jsx)(t.a,{href:"https://transloadit.com/services/",children:"all your file processing\nneeds"}),". The ",(0,s.jsx)(t.a,{href:"/docs/transloadit",children:(0,s.jsx)(t.code,{children:"@uppy/transloadit"})}),"\nplugin directly uploads to Transloadit, so you only have to worry about creating\na ",(0,s.jsx)(t.a,{href:"https://transloadit.com/docs/getting-started/concepts/",children:"template"}),". It uses ",(0,s.jsx)(t.a,{href:"#tus",children:"Tus"})," under the hood, so you\ndon\u2019t have to sacrifice reliable, resumable uploads for convenience."]}),"\n",(0,s.jsxs)(t.p,{children:["When you go to production, always make sure to set the ",(0,s.jsx)(t.code,{children:"signature"}),". ",(0,s.jsxs)(t.strong,{children:["Not using\n",(0,s.jsx)(t.a,{href:"https://transloadit.com/docs/topics/signature-authentication/",children:"Signature Authentication"}),"\ncan be a security risk"]}),". Signature Authentication is a security measure that\ncan prevent outsiders from tampering with your Assembly Instructions."]}),"\n",(0,s.jsx)(t.p,{children:"Generating a signature should be done on the server to avoid leaking secrets."}),"\n",(0,s.jsxs)(t.p,{children:["Start by creating a ",(0,s.jsx)(t.a,{href:"https://svelte.dev/docs/kit/routing#server",children:"server route"}),"\nto generate the signature and params:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"// src/routes/transloadit-params/+server.ts\nimport type { RequestHandler } from '@sveltejs/kit';\nimport crypto from 'crypto';\n\nfunction utcDateString(ms: number): string {\n\treturn new Date(ms)\n\t\t.toISOString()\n\t\t.replace(/-/g, '/')\n\t\t.replace(/T/, ' ')\n\t\t.replace(/\\.\\d+Z$/, '+00:00');\n}\n\nexport const POST: RequestHandler = async ({ request }) => {\n\t// Expire 1 hour from now (this must be milliseconds)\n\tconst expires = utcDateString(Date.now() + 1 * 60 * 60 * 1000);\n\tconst authKey = process.env.TRANSLOADIT_KEY;\n\tconst authSecret = process.env.TRANSLOADIT_SECRET;\n\tconst templateId = process.env.TRANSLOADIT_TEMPLATE_ID;\n\n\tif (!authKey || !authSecret || !templateId) {\n\t\treturn new Response(\n\t\t\tJSON.stringify({ error: 'Missing Transloadit credentials' }),\n\t\t\t{ status: 500 },\n\t\t);\n\t}\n\n\tconst body = await request.json();\n\tconst params = JSON.stringify({\n\t\tauth: {\n\t\t\tkey: authKey,\n\t\t\texpires,\n\t\t},\n\t\ttemplate_id: templateId,\n\t\tfields: {\n\t\t\t// You can use this in your template.\n\t\t\tcustomValue: body.customValue,\n\t\t},\n\t\t// Your other params like notify_url, etc.\n\t});\n\n\tconst signatureBytes = crypto\n\t\t.createHmac('sha384', authSecret)\n\t\t.update(Buffer.from(params, 'utf-8'));\n\t// The final signature needs the hash name in front, so\n\t// the hashing algorithm can be updated in a backwards-compatible\n\t// way when old algorithms become insecure.\n\tconst signature = `sha384:${signatureBytes.digest('hex')}`;\n\n\treturn new Response(JSON.stringify({ expires, signature, params }), {\n\t\theaders: { 'Content-Type': 'application/json' },\n\t});\n};\n"})}),"\n",(0,s.jsxs)(t.p,{children:["On the client, we want to fetch the signature and params from the server. You\nmay want to send values from Svelte state along to your endpoint, for instance,\nto add ",(0,s.jsx)(t.a,{href:"https://transloadit.com/docs/topics/assembly-variables/",children:(0,s.jsx)(t.code,{children:"fields"})})," which\nyou can use in your template as global variables."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-svelte",children:"<script>\n  import Uppy from '@uppy/core';\n  import { Dashboard } from '@uppy/svelte';\n  import Transloadit from '@uppy/transloadit';\n\n  let props = $props();\n\n  uppy.use(Transloadit, {\n    async assemblyOptions() {\n      // You can send metadata along for use in your template.\n      const { meta } = uppy.getState();\n      const body = JSON.stringify({ customValue: meta.customValue });\n      const res = await fetch('/transloadit-params', {\n        method: 'POST',\n        body,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return res.json();\n    },\n  });\n\n  $effect(() => {\n    if (props.customValue) {\n      uppy.setMeta({ customValue: props.customValue });\n    }\n  })\n\n<\/script>\n\n<Dashboard {uppy} />\n"})}),"\n",(0,s.jsx)(t.h2,{id:"http-uploads-to-your-backend",children:"HTTP uploads to your backend"}),"\n",(0,s.jsxs)(t.p,{children:["If you want to handle uploads yourself, you can use\n",(0,s.jsx)(t.a,{href:"/docs/xhr-upload",children:(0,s.jsx)(t.code,{children:"@uppy/xhr-upload"})}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["Create an endpoint, such as ",(0,s.jsx)(t.code,{children:"src/routes/upload/+server.ts"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import type { RequestHandler } from '@sveltejs/kit';\nimport { requireUser } from '$lib/auth'; // Your optional logic\nimport fs from 'fs';\nimport path from 'path';\n\nexport const POST: RequestHandler = async ({ request }) => {\n\tconst user = await requireUser(request); // Your optional logic\n\n\tconst formData = await request.formData();\n\tconst files = formData.getAll('files[]'); // Assuming 'files[]' is the field name used\n\n\tfor (const file of files) {\n\t\tif (file instanceof File) {\n\t\t\tconst arrayBuffer = await file.arrayBuffer();\n\t\t\tconst buffer = Buffer.from(arrayBuffer);\n\t\t\tconst storageKey = `user-${user.id}-avatar-${file.name}`;\n\t\t\tconst uploadPath = path.join('uploads', storageKey);\n\t\t\tfs.writeFileSync(uploadPath, buffer);\n\t\t\tconsole.log(`Saved file to ${uploadPath}`);\n\t\t}\n\t}\n\n\treturn new Response(null);\n};\n"})}),"\n",(0,s.jsx)(t.p,{children:"Create a page with your Uppy instance:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-svelte",children:"<script>\n  import Uppy from '@uppy/core';\n  import { Dashboard } from '@uppy/svelte';\n  import XHRUpload from '@uppy/xhr-upload';\n\n  import '@uppy/core/dist/style.min.css';\n  import '@uppy/dashboard/dist/style.min.css';\n\n  let uppy = new Uppy().use(XHRUpload, { endpoint: '/upload' });\n<\/script>\n\n<Dashboard {uppy} />\n"})}),"\n",(0,s.jsxs)(t.p,{children:["If you want to send along other form fields with your upload, you can use\n",(0,s.jsx)(t.a,{href:"/docs/form",children:(0,s.jsx)(t.code,{children:"@uppy/form"})}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-svelte",children:"<script>\n  import { onMount, onDestroy } from 'svelte';\n  import Uppy from '@uppy/core';\n  import { Dashboard } from '@uppy/svelte';\n  import XHRUpload from '@uppy/xhr-upload';\n  import Form from '@uppy/form';\n\n  import '@uppy/core/dist/style.min.css';\n  import '@uppy/dashboard/dist/style.min.css';\n\n  const uppy = new Uppy().use(XHRUpload, { endpoint: '/upload' });\n\n  // @uppy/form is client-side only, so we need to install it\n  // when the component is mounted.\n  onMount(() => {\n    uppy.use(Form, { target: '#form' });\n  });\n<\/script>\n\n<form id=\"form\">\n  <label for=\"dob\">Date of birth: </label>\n  <input type=\"date\" name=\"dob\" />\n  <Dashboard {uppy} />\n</form>\n"})}),"\n",(0,s.jsx)(t.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Add client-side file ",(0,s.jsx)(t.a,{href:"/docs/uppy/#restrictions",children:"restrictions"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Upload files together with other form fields with ",(0,s.jsx)(t.a,{href:"/docs/form",children:(0,s.jsx)(t.code,{children:"@uppy/form"})}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Use your ",(0,s.jsx)(t.a,{href:"/docs/locales",children:"language of choice"})," instead of English."]}),"\n",(0,s.jsxs)(t.li,{children:["Add an ",(0,s.jsx)(t.a,{href:"/docs/image-editor",children:"image editor"})," for cropping and resizing images."]}),"\n",(0,s.jsxs)(t.li,{children:["Download files from remote sources, such as ",(0,s.jsx)(t.a,{href:"/docs/google-drive",children:"Google Drive"}),"\nand ",(0,s.jsx)(t.a,{href:"/docs/dropbox",children:"Dropbox"}),", with ",(0,s.jsx)(t.a,{href:"/docs/companion",children:"Companion"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Add ",(0,s.jsx)(t.a,{href:"/docs/golden-retriever",children:"Golden Retriever"})," to save selected files in your\nbrowser cache, so that if the browser crashes, or the user accidentally closes\nthe tab, Uppy can restore everything and continue uploading as if nothing\nhappened."]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(96540);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);